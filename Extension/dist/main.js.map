{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"","../external \"path\"","../external \"os\"","../external \"fs\"",".././src/common.ts",".././node_modules/diagnostic-channel/dist/src/channel.js",".././node_modules/applicationinsights/out/Library/Logging.js",".././node_modules/vscode-languageserver-protocol/lib/main.js",".././src/telemetry.ts",".././node_modules/applicationinsights/out/Declarations/Contracts/index.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/Domain.js",".././node_modules/applicationinsights/out/Library/Util.js","../external \"url\"",".././node_modules/vscode-jsonrpc/lib/main.js",".././node_modules/vscode-languageclient/lib/utils/is.js","../external \"child_process\"","../external \"https\"",".././src/LanguageServer/extension.ts",".././src/LanguageServer/customProviders.ts",".././node_modules/vscode-languageclient/lib/client.js",".././node_modules/vscode-languageclient/lib/utils/uuid.js",".././node_modules/applicationinsights/out/AutoCollection/CorrelationContextManager.js","../external \"stream\"","../external \"events\"",".././node_modules/applicationinsights/out/Library/RequestResponseHeaders.js","../external \"util\"",".././src/logger.ts",".././node_modules/vscode-cpptools/out/api.js",".././src/LanguageServer/settings.ts",".././node_modules/vscode-jsonrpc/lib/is.js",".././src/LanguageServer/persistentState.ts",".././node_modules/vscode-jsonrpc/lib/events.js",".././src/platform.ts",".././src/abTesting.ts",".././node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/initialization.js","../external \"crypto\"",".././node_modules/applicationinsights/out/AutoCollection/HttpDependencies.js","../external \"http\"",".././node_modules/applicationinsights/out/Library/CorrelationIdManager.js","../external \"net\"",".././node_modules/vscode-jsonrpc/lib/messageReader.js",".././node_modules/vscode-jsonrpc/lib/messageWriter.js",".././node_modules/diagnostic-channel/dist/src/patchRequire.js","../external \"module\"",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/index.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/Base.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/DataPointType.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/EventData.js",".././node_modules/applicationinsights/out/AutoCollection/Performance.js",".././node_modules/applicationinsights/out/AutoCollection/RequestParser.js",".././node_modules/applicationinsights/out/AutoCollection/HttpRequests.js","../external \"zlib\"",".././node_modules/https-proxy-agent/node_modules/debug/src/common.js",".././src/LanguageServer/ui.ts",".././node_modules/vscode-languageclient/lib/main.js",".././node_modules/vscode-languageclient/lib/protocolCompletionItem.js",".././node_modules/vscode-languageclient/lib/protocolCodeLens.js",".././node_modules/vscode-languageclient/lib/protocolDocumentLink.js",".././src/testHook.ts",".././node_modules/tmp/lib/tmp.js",".././src/packageVersion.ts",".././src/commands.ts",".././src/Debugger/extension.ts",".././src/Debugger/nativeAttach.ts",".././src/Debugger/utils.ts",".././src/main.ts",".././node_modules/vscode-extension-telemetry/lib/telemetryReporter.js",".././node_modules/applicationinsights/out/applicationinsights.js",".././node_modules/diagnostic-channel-publishers/dist/src/index.js",".././node_modules/diagnostic-channel-publishers/dist/src/bunyan.pub.js",".././node_modules/semver/semver.js",".././node_modules/diagnostic-channel-publishers/dist/src/console.pub.js","../external \"console\"",".././node_modules/diagnostic-channel-publishers/dist/src/mongodb-core.pub.js",".././node_modules/diagnostic-channel-publishers/dist/src/mongodb.pub.js",".././node_modules/diagnostic-channel-publishers/dist/src/mysql.pub.js",".././node_modules/diagnostic-channel-publishers/dist/src sync ^.*\\/lib\\/Connection$",".././node_modules/diagnostic-channel-publishers/dist/src sync ^.*\\/lib\\/Pool$",".././node_modules/diagnostic-channel-publishers/dist/src/pg-pool.pub.js",".././node_modules/diagnostic-channel-publishers/dist/src/pg.pub.js",".././node_modules/diagnostic-channel-publishers/dist/src/redis.pub.js",".././node_modules/diagnostic-channel-publishers/dist/src/winston.pub.js",".././node_modules/zone.js/dist/zone-node.js","../external \"timers\"","../external \"_http_client\"",".././node_modules/applicationinsights/out/AutoCollection/Console.js",".././node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/console.sub.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Constants.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/AvailabilityData.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/ContextTagKeys.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/Data.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/DataPoint.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/Envelope.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/ExceptionData.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/ExceptionDetails.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/MessageData.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/MetricData.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/PageViewData.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/RemoteDependencyData.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/RequestData.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/SeverityLevel.js",".././node_modules/applicationinsights/out/Declarations/Contracts/Generated/StackFrame.js",".././node_modules/applicationinsights/out/Declarations/Contracts/TelemetryTypes/index.js",".././node_modules/applicationinsights/out/Declarations/Contracts/TelemetryTypes/TelemetryType.js",".././node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/bunyan.sub.js",".././node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/winston.sub.js",".././node_modules/applicationinsights/out/AutoCollection/Exceptions.js","../external \"constants\"",".././node_modules/applicationinsights/out/AutoCollection/HttpDependencyParser.js",".././node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/mongodb.sub.js",".././node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/mysql.sub.js",".././node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/redis.sub.js",".././node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/postgres.sub.js",".././node_modules/applicationinsights/out/AutoCollection/HttpRequestParser.js",".././node_modules/applicationinsights/out/Library/NodeClient.js",".././node_modules/applicationinsights/out/Library/TelemetryClient.js",".././node_modules/applicationinsights/out/Library/Config.js",".././node_modules/applicationinsights/out/Library/Context.js",".././node_modules/applicationinsights/out/Library/Channel.js",".././node_modules/applicationinsights/out/TelemetryProcessors/index.js",".././node_modules/applicationinsights/out/TelemetryProcessors/SamplingTelemetryProcessor.js",".././node_modules/applicationinsights/out/Library/Sender.js",".././node_modules/applicationinsights/out/Library/EnvelopeFactory.js",".././node_modules/https-proxy-agent/index.js","../external \"tls\"",".././node_modules/agent-base/index.js",".././node_modules/agent-base/patch-core.js",".././node_modules/es6-promisify/dist/promisify.js",".././node_modules/es6-promisify/dist/promise.js",".././node_modules/es6-promise/dist/es6-promise.js",".././node_modules/https-proxy-agent/node_modules/debug/src/index.js",".././node_modules/https-proxy-agent/node_modules/debug/src/browser.js",".././node_modules/https-proxy-agent/node_modules/ms/index.js",".././node_modules/https-proxy-agent/node_modules/debug/src/node.js","../external \"tty\"",".././node_modules/supports-color/index.js",".././node_modules/has-flag/index.js","../external \"assert\"",".././src/LanguageServer/clientCollection.ts",".././src/LanguageServer/client.ts",".././node_modules/vscode-languageclient/node_modules/semver/semver.js",".././node_modules/vscode-jsonrpc/lib/messages.js",".././node_modules/vscode-jsonrpc/lib/cancellation.js",".././node_modules/vscode-jsonrpc/lib/linkedMap.js",".././node_modules/vscode-jsonrpc/lib/pipeSupport.js",".././node_modules/vscode-jsonrpc/lib/socketSupport.js",".././node_modules/vscode-languageserver-types/lib/esm/main.js",".././node_modules/vscode-languageserver-protocol/lib/protocol.js",".././node_modules/vscode-languageserver-protocol/lib/utils/is.js",".././node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js",".././node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js",".././node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js",".././node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js",".././node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js",".././node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js",".././node_modules/vscode-languageclient/lib/codeConverter.js",".././node_modules/vscode-languageclient/lib/protocolConverter.js",".././node_modules/vscode-languageclient/lib/utils/async.js",".././node_modules/vscode-languageclient/lib/colorProvider.js",".././node_modules/vscode-languageclient/lib/configuration.js",".././node_modules/vscode-languageclient/lib/implementation.js",".././node_modules/vscode-languageclient/lib/typeDefinition.js",".././node_modules/vscode-languageclient/lib/workspaceFolders.js",".././node_modules/vscode-languageclient/lib/foldingRange.js",".././node_modules/vscode-languageclient/lib/utils/processes.js",".././node_modules/vscode-cpptools/out/testApi.js",".././src/LanguageServer/configurations.ts",".././src/LanguageServer/protocolFilter.ts",".././src/LanguageServer/dataBinding.ts",".././node_modules/minimatch/minimatch.js",".././node_modules/brace-expansion/index.js",".././node_modules/concat-map/index.js",".././node_modules/balanced-match/index.js",".././src/LanguageServer/settingsTracker.ts",".././src/LanguageServer/languageConfig.ts",".././src/linuxDistribution.ts",".././node_modules/os-tmpdir/index.js",".././src/githubAPI.ts",".././src/Debugger/attachToProcess.ts",".././src/Debugger/attachQuickPick.ts",".././src/Debugger/configurationProvider.ts",".././src/Debugger/configurations.ts",".././src/Debugger/debugAdapterDescriptorFactory.ts",".././src/packageManager.ts",".././node_modules/yauzl/index.js",".././node_modules/fd-slicer/index.js",".././node_modules/pend/index.js",".././node_modules/buffer-crc32/index.js","../external \"buffer\"",".././node_modules/mkdirp/index.js",".././src/installationInformation.ts",".././src/cppTools1.ts",".././src/cppTools.ts",".././node_modules/jsonc-parser/lib/esm/format.js",".././node_modules/jsonc-parser/lib/esm/edit.js",".././node_modules/jsonc-parser/lib/esm/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","path","fs","os","child_process","vscode","Telemetry","HttpsProxyAgent","url","logger_1","assert","https","extension_1","setExtensionContext","context","extensionContext","packageJson","extensions","getExtension","packageJSON","vcpkgRoot","rawPackageJson","getRawTasksJson","getTasksJsonPath","Promise","resolve","reject","exists","fileContents","readFileSync","rawTasks","JSON","parse","toString","error","getExtensionFilePath","extensionfile","extensionPath","getPackageJsonPath","editor","window","activeTextEditor","folder","workspace","getWorkspaceFolder","document","uri","join","fsPath","getVcpkgPathDescriptorFile","process","platform","env","LOCALAPPDATA","HOME","getRawPackageJson","ensureBuildTaskExists","taskName","rawTasksJson","tasks","Array","selectedTask","find","task","label","buildTasks","getBuildTasks","console","definition","compilerPath","version","push","writeFileText","stringify","fileIsCOrCppSource","file","fileExtLower","extname","toLowerCase","some","ext","stringifyPackageJson","getVcpkgRoot","existsSync","vcpkgRootTemp","trim","replace","isHeader","startsWith","isExtensionReady","checkInstallLockFile","isExtensionNotReadyPromptDisplayed","extensionNotReadyString","displayExtensionNotReadyPrompt","showOutputChannel","getOutputChannelLogger","showInformationMessage","then","progressInstallSuccess","progressExecutableStarted","progressExecutableSuccess","progressParseRootSuccess","progressIntelliSenseNoSquiggles","installProgressStr","intelliSenseProgressStr","getProgress","globalState","getIntelliSenseProgress","setProgress","progress","update","progressName","telemetryProperties","logDebuggerEvent","setIntelliSenseProgress","getProgressInstallSuccess","getProgressExecutableStarted","getProgressExecutableSuccess","getProgressParseRootSuccess","getProgressIntelliSenseNoSquiggles","releaseNotesPanel","undefined","isString","input","isArray","isArrayOfString","every","item","getHttpsProxyAgent","proxy","getConfiguration","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","proxyUrl","protocol","strictProxy","proxyOptions","host","hostname","port","parseInt","auth","rejectUnauthorized","checkFileExists","filePath","stat","err","stats","isFile","checkFileExistsSync","statSync","e","getInstallLockPath","readFileText","encoding","readFile","data","content","writeFile","getReadmeMessage","promptReloadWindow","message","commands","executeCommand","showReleaseNotes","reveal","createWebviewPanel","ViewColumn","One","webview","html","onDidDispose","subscriptions","isUri","Uri","isNumber","isBoolean","isOptionalString","isOptionalArrayOfString","resolveVariables","additionalEnvironment","regexp","ret","cycleCache","Set","has","add","match","ignored1","varType","ignored2","newValue","v","config","workspaceFolders","toLocaleLowerCase","fail","USERPROFILE","asFolder","result","charAt","length","getOpenCommand","getDebugAdaptersPath","touchInstallLockFile","touchExtensionFolder","utimes","Date","now","checkDirectoryExists","dirPath","isDirectory","checkDirectoryExistsSync","readDir","readdir","list","deleteFile","unlink","logToFile","logFolder","writeFileSync","EOL","flag","execChildProcess","workingDirectory","channel","exec","cwd","maxBuffer","stdout","stderr","append","show","Error","spawnChildProcess","args","dataCallback","errorCallback","child","spawn","on","code","allowExecution","chmod","appendLine","removePotentialPII","str","words","split","word","indexOf","checkDistro","platformInfo","unlinkPromise","fileName","renamePromise","oldName","newName","rename","promptForReloadWindowDueToSettingsChange","downloadFileToDestination","urlStr","destinationPath","headers","parsedUrl","request","agent","response","statusCode","redirectUrl","location","createdFile","createWriteStream","pipe","end","downloadFileToStr","downloadedData","extractCompilerPathAndArgs","inputCompilerPath","additionalArgs","isWindows","endQuote","substr","search","filter","arg","spaceStart","lastIndexOf","endsWith","potentialCompilerPath","patchRequire_1","patchRequire_2","makePatchingRequire","trueFilter","publishing","ContextPreservingEventEmitter","this","subscribers","contextPreservationFunction","cb","knownPatches","currentlyPublishing","shouldPublish","listeners","_a","publish","event","standardEvent_1","timestamp","forEach","listener","subscribe","unsubscribe","index","splice","reset","_this","getOwnPropertyNames","prop","bindToContext","addContextPreservation","preserver","previousPreservationStack","registerMonkeyPatch","packageName","patcher","getPatchesObject","global","diagnosticsSource","Logging","info","optionalParams","_i","arguments","enableDebug","TAG","warn","disableWarnings","__export","vscode_jsonrpc_1","ErrorCodes","ResponseError","CancellationToken","CancellationTokenSource","Disposable","Event","Emitter","Trace","TraceFormat","SetTraceNotification","LogTraceNotification","RequestType","RequestType0","NotificationType","NotificationType0","MessageReader","MessageWriter","ConnectionStrategy","StreamMessageReader","StreamMessageWriter","IPCMessageReader","IPCMessageWriter","createClientPipeTransport","createServerPipeTransport","generateRandomPipeName","createClientSocketTransport","createServerSocketTransport","createProtocolConnection","reader","writer","logger","strategy","createMessageConnection","vscode_extension_telemetry_1","util","telemetryReporter","activate","packageInfo","publisher","aiKey","contributes","debuggers","default","createReporter","deactivate","dispose","eventName","properties","sendTelemetryEvent","logLanguageServerEvent","metrics","Domain","__assign","assign","http","constants","RequestResponseHeaders","Util","getCookie","cookie","cookieName","cookies","substring","int32ArrayToBase64","array","toChar","String","fromCharCode","x","map","Buffer","from","random32","Math","random","randomu32","w3cTraceId","tmp","hexValues","oct","a","clockSequenceHi","obj","isError","isPrimitive","propType","isDate","msToTimeSpan","totalms","isNaN","sec","toFixed","min","floor","hour","days","extractError","looseError","id","extractObject","origProperty","toJSON","validateStringMap","field","stringTarget","constructor","MAX_PROPERTY_LENGTH","canIncludeCorrelationHeader","client","requestUrl","excludedDomains","correlationHeaderExcludedDomains","RegExp","test","getCorrelationContextTarget","contextHeaders","requestContextHeader","keyValues","keyValue","makeRequest","requestOptions","requestCallback","requestUrlParsed","options","pathname","proxyHttpsUrl","proxyHttpUrl","proxyUrlParsed","Host","isHttps","httpsAgent","httpAgent","tlsRestrictedAgent","Agent","secureOptions","SSL_OP_NO_SSLv2","SSL_OP_NO_SSLv3","SSL_OP_NO_TLSv1","SSL_OP_NO_TLSv1_1","Is","messages_1","RequestType1","RequestType2","RequestType3","RequestType4","RequestType5","RequestType6","RequestType7","RequestType8","RequestType9","NotificationType1","NotificationType2","NotificationType3","NotificationType4","NotificationType5","NotificationType6","NotificationType7","NotificationType8","NotificationType9","messageReader_1","SocketMessageReader","messageWriter_1","SocketMessageWriter","events_1","cancellation_1","linkedMap_1","CancelNotification","ConnectionErrors","ConnectionState","type","NullLogger","freeze","log","fromString","Off","Messages","Verbose","Text","ConnectionError","[object Object]","super","setPrototypeOf","_createMessageConnection","messageReader","messageWriter","sequenceNumber","notificationSquenceNumber","unknownResponseSquenceNumber","timer","tracer","starRequestHandler","requestHandlers","starNotificationHandler","notificationHandlers","messageQueue","LinkedMap","responsePromises","requestTokens","trace","traceFormat","state","New","errorEmitter","closeEmitter","unhandledNotificationEmitter","disposeEmitter","createRequestQueueKey","addMessageToQueue","queue","isRequestMessage","set","isResponseMessage","cancelUndispatched","_message","isListening","Listening","isClosed","Closed","isDisposed","Disposed","closeHandler","fire","triggerMessageQueue","size","setImmediate","shift","requestMessage","reply","resultOrError","method","startTime","jsonrpc","toJson","traceSendingResponse","write","replyError","params","logLSPMessage","traceReceivedRequest","requestHandler","element","handler","cancellationSource","tokenKey","handlerResult","promise","numberOfParams","token","string","InternalError","replySuccess","MethodNotFound","handleRequest","isNotificationMessage","notificationHandler","source","cancel","traceReceivedNotification","handleNotification","responseMessage","responsePromise","timerStart","traceReceivedResponse","handleResponse","number","responseHandler","handleInvalidMessage","processMessageQueue","onClose","onError","callback","toCancel","delete","lspMessage","isLSPMessage","throwIfClosedOrDisposed","undefinedToNull","param","computeMessageParams","connection","sendNotification","messageParams","notificationMessage","traceSendingNotification","onNotification","func","sendRequest","throwIfNotListening","is","last","slice","traceSendingRequest","MessageWriteError","onCancellationRequested","onRequest","_value","_tracer","sendNotificationOrTraceOptions","_sendNotification","_traceFormat","boolean","onUnhandledNotification","onDispose","keys","listen","AlreadyListening","throwIfListening","inspect","verbose","candidate","output","read","isMessageWriter","Number","stringArray","elem","typedArray","check","thenable","telemetry","ui_1","clientCollection_1","settings_1","persistentState_1","languageConfig_1","customProviders_1","platform_1","vscode_languageclient_1","child_process_1","githubAPI_1","packageVersion_1","commands_1","prevCrashFile","clients","activeDocument","ui","intervalTimer","insiderUpdateTimer","activatedPreviously","disposables","languageConfigurations","realActivationOccurred","tempCommands","insiderUpdateTimerInterval","buildInfoCache","taskSourceStr","cppInstallVsixStr","taskProvider","fileExt","fileIsCpp","fileIsC","compilerPaths","activeClient","getActiveClient","userCompilerPath","getCompilerPath","knownCompilers","getKnownCompilers","isC","Map","insertOrAssignEntry","basename","values","compilerPathAndArgs","compilerPathBase","isCl","concat","dirname","kind","command","ShellExecution","target","ActiveClient","RootUri","Task","group","TaskGroup","Build","onActivationEvent","realActivation","Value","CppSettings","intelliSenseEngine","checkForConflictingExtensions","PersistentState","all","extension","isActive","ClientCollection","getUI","textDocuments","onDidChangeActiveTextEditor","getCustomConfigProviders","provider","onRegisterCustomConfigurationProvider","onDidChangeConfiguration","onDidChangeSettings","onDidSaveTextDocument","onDidChangeTextEditorSelection","onDidChangeVisibleTextEditors","updateLanguageConfigurations","crashFolder","crashObject","watch","filename","setTimeout","handleCrashFileRead","reportMacCrashes","settings","updateChannel","buildInfo","suggestInsiders","getTargetBuildInfo","success","selection","ConfigurationTarget","Global","suggestInsidersChannel","setInterval","checkAndApplyUpdate","onInterval","languages","setLanguageConfiguration","getLanguageConfig","changedActiveClientSettings","newUpdateChannel","clearInterval","activationEventOccurred","PersistentWorkspaceState","onDidOpenTextDocument","languageId","registerTaskProvider","provideTasks","onDidStartTask","execution","saveMessageShown","doc","clangFormatOnSave","activeEditor","activeDocumentChanged","selectionChanged","Range","start","textEditor","selections","editors","applyUpdate","postfix","vsixPath","fd","cleanupCallback","__awaiter","originalProxySupport","globalValue","downloadUrl","vsixLocation","PlatformInformation","GetPlatformInformation","vsCodeScriptPath","vsCodeBinName","execPath","cmdFile","vsCodeExeDir","execSync","userVersion","PackageVersion","breakingVersion","isGreaterThan","kill","pid","sentOverride","stdin","catch","commandsRegistered","onNavigate","requestNavigationList","navigationList","showNavigationOptions","onGoToDeclaration","requestGoToDeclaration","onPeekDeclaration","onSwitchHeaderSource","rootPath","RootPath","requestSwitchHeaderSource","targetFileName","openTextDocument","foundEditor","visibleTextEditors","showTextDocument","viewColumn","selectClient","Count","showWorkspaces","Names","onResetDatabase","resetDatabase","rejected","onSelectConfiguration","isFolderOpen","handleConfigurationSelectCommand","onSelectConfigurationProvider","handleConfigurationProviderSelectCommand","onEditConfiguration","handleConfigurationEditCommand","onAddToIncludePath","handleAddToIncludePathCommand","onToggleSquiggles","toggleSetting","onToggleIncludeFallback","onToggleDimInactiveRegions","dimInactiveRegions","onShowReleaseNotes","onPauseParsing","pauseParsing","onResumeParsing","resumeParsing","onShowParsingCommands","handleShowParsingCommands","onTakeSurvey","machineId","onGetActiveConfigName","getCurrentConfigName","logCrashTelemetry","startCrash","endCrash","process1","process2","includes","lines","line","trimRight","registerCommands","getTemporaryCommandRegistrarInstance","clearTempCommands","registerCommand","executeDelayedCommands","getClients","vscode_cpptools_1","CustomProviderWrapper","_isReady","Version","v2","extensionId","v0","v1","_version","isReady","ready","isValid","valid","canProvideConfiguration","provideConfigurations","canProvideBrowseConfiguration","provideBrowseConfiguration","uris","browsePath","CustomConfigurationProviderCollection","providers","missing","wrapper","logProblems","getId","providerId","found","noUpdate","providerCollection","vscode_1","vscode_languageserver_protocol_1","c2p","p2c","async_1","UUID","ConsoleLogger","ErrorAction","CloseAction","RevealOutputChannelOn","State","ClientState","DefaultErrorHandler","restarts","_error","count","Continue","Shutdown","Restart","showErrorMessage","DoNotRestart","SupporedSymbolKinds","SymbolKind","File","Module","Namespace","Package","Class","Method","Property","Field","Constructor","Enum","Interface","Function","Variable","Constant","Boolean","Key","Null","EnumMember","Struct","Operator","TypeParameter","SupportedCompletionItemKinds","CompletionItemKind","Unit","Keyword","Snippet","Color","Reference","Folder","ensure","DynamicFeature","register","unregister","messages","DocumentNotifiactions","_client","_event","_type","_middleware","_createParams","_selectorFilter","_selectors","selectors","textDocument","selector","registerOptions","documentSelector","_listener","notificationSent","_data","clear","DidOpenTextDocumentFeature","_syncedDocuments","DidOpenTextDocumentNotification","clientOptions","middleware","didOpen","code2ProtocolConverter","asOpenTextDocumentParams","textDocumentFilter","capabilities","dynamicRegistration","textDocumentSyncOptions","resolvedTextDocumentSync","openClose","generateUuid","DidCloseTextDocumentFeature","onDidCloseTextDocument","DidCloseTextDocumentNotification","didClose","asCloseTextDocumentParams","DidChangeTextDocumentFeature","_changeData","_forcingDelivery","DidChangeTextDocumentNotification","change","TextDocumentSyncKind","None","syncKind","onDidChangeTextDocument","contentChanges","changeData","Incremental","asChangeTextDocumentParams","didChange","Full","_changeDelayer","forceDelivery","delayer","trigger","Delayer","WillSaveFeature","onWillSaveTextDocument","WillSaveTextDocumentNotification","willSave","willSaveEvent","asWillSaveTextDocumentParams","WillSaveWaitUntilFeature","WillSaveTextDocumentWaitUntilRequest","willSaveWaitUntil","edits","vEdits","protocol2CodeConverter","asTextEdits","waitUntil","DidSaveTextDocumentFeature","DidSaveTextDocumentNotification","didSave","asSaveTextDocumentParams","_includeText","save","includeText","FileSystemWatcherFeature","_notifyFileEvent","_watchers","DidChangeWatchedFilesNotification","_capabilities","_documentSelector","_method","watchers","disposeables","watcher","globPattern","watchCreate","watchChange","watchDelete","WatchKind","Create","Change","Delete","fileSystemWatcher","createFileSystemWatcher","hookListeners","fileSystemWatchers","onDidCreate","resource","asUri","FileChangeType","Created","onDidChange","Changed","onDidDelete","Deleted","disposable","TextDocumentFeature","_providers","registerLanguageProvider","WorkspaceFeature","CompletionItemFeature","CompletionRequest","capabilites","completion","contextSupport","completionItem","snippetSupport","commitCharactersSupport","documentationFormat","MarkupKind","Markdown","PlainText","deprecatedSupport","preselectSupport","completionItemKind","valueSet","completionProvider","triggerCharacters","provideCompletionItems","position","asCompletionParams","asCompletionResult","logFailedRequest","resolveCompletionItem","CompletionResolveRequest","asCompletionItem","registerCompletionItemProvider","provideCompletionItem","resolveProvider","HoverFeature","HoverRequest","hoverCapability","contentFormat","hoverProvider","provideHover","asTextDocumentPositionParams","asHover","registerHoverProvider","SignatureHelpFeature","SignatureHelpRequest","signatureInformation","signatureHelpProvider","providerSignatureHelp","asSignatureHelp","registerSignatureHelpProvider","provideSignatureHelp","DefinitionFeature","DefinitionRequest","definitionProvider","provideDefinition","asDefinitionResult","registerDefinitionProvider","ReferencesFeature","ReferencesRequest","referencesProvider","providerReferences","asReferenceParams","asReferences","registerReferenceProvider","provideReferences","DocumentHighlightFeature","DocumentHighlightRequest","documentHighlightProvider","provideDocumentHighlights","asDocumentHighlights","registerDocumentHighlightProvider","DocumentSymbolFeature","DocumentSymbolRequest","symbolCapabilities","symbolKind","hierarchicalDocumentSymbolSupport","documentSymbolProvider","provideDocumentSymbols","asDocumentSymbolParams","DocumentSymbol","asDocumentSymbols","asSymbolInformations","registerDocumentSymbolProvider","WorkspaceSymbolFeature","WorkspaceSymbolRequest","workspaceSymbolProvider","_options","provideWorkspaceSymbols","query","registerWorkspaceSymbolProvider","CodeActionFeature","CodeActionRequest","cap","codeActionLiteralSupport","codeActionKind","CodeActionKind","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","codeActionProvider","codeActionKinds","provideCodeActions","range","asTextDocumentIdentifier","asRange","asCodeActionContext","Command","asCommand","asCodeAction","registerCodeActionsProvider","providedCodeActionKinds","asCodeActionKinds","CodeLensFeature","CodeLensRequest","codeLensProvider","provideCodeLenses","asCodeLensParams","asCodeLenses","resolveCodeLens","codeLens","CodeLensResolveRequest","asCodeLens","registerCodeLensProvider","DocumentFormattingFeature","DocumentFormattingRequest","documentFormattingProvider","provideDocumentFormattingEdits","asFormattingOptions","registerDocumentFormattingEditProvider","DocumentRangeFormattingFeature","DocumentRangeFormattingRequest","documentRangeFormattingProvider","provideDocumentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","DocumentOnTypeFormattingFeature","DocumentOnTypeFormattingRequest","documentOnTypeFormattingProvider","moreTriggerCharacter","provideOnTypeFormattingEdits","ch","asPosition","registerOnTypeFormattingEditProvider","firstTriggerCharacter","RenameFeature","RenameRequest","prepareSupport","renameProvider","prepareProvider","provideRenameEdits","asWorkspaceEdit","prepareRename","PrepareRenameRequest","placeholder","registerRenameProvider","DocumentLinkFeature","DocumentLinkRequest","documentLinkProvider","provideDocumentLinks","asDocumentLinkParams","asDocumentLinks","resolveDocumentLink","link","DocumentLinkResolveRequest","asDocumentLink","registerDocumentLinkProvider","ConfigurationFeature","_listeners","DidChangeConfigurationNotification","section","synchronize","configurationSection","sections","affectsConfiguration","didChangeConfiguration","extractSettingsInformation","getMiddleware","ensurePath","current","workspaceFolder","ExecuteCommandFeature","_commands","ExecuteCommandRequest","executeCommandProvider","MessageTransports","OnReady","_resolve","_reject","_used","isUsed","BaseLanguageClient","_features","_method2Message","_dynamicFeatures","_id","_name","_clientOptions","diagnosticCollectionName","outputChannelName","revealOutputChannelOn","stdioEncoding","initializationOptions","initializationFailedHandler","errorHandler","uriConverters","Initial","_connectionPromise","_resolvedConnection","_initializeResult","outputChannel","_outputChannel","_disposeOutputChannel","_diagnostics","_fileEvents","_fileEventDelayer","_onReady","_onReadyCallbacks","_onStop","_telemetryEmitter","_stateChangeEmitter","messageOrDataObject","logTrace","logObjectTrace","_c2p","createConverter","code2Protocol","_p2c","protocol2Code","registerBuiltinFeatures","_state","oldState","getPublicState","newState","Running","Starting","Stopped","initializeResult","isConnectionActive","forceDocumentSync","onTelemetry","onDidChangeState","createOutputChannel","diagnostics","_trace","onReady","resolveConnection","responseError","stack","toLocaleTimeString","data2String","Info","Warn","Stopping","createDiagnosticCollection","onLogMessage","MessageType","Warning","onShowMessage","showWarningMessage","ShowMessageRequest","messageFunc","actions","initialize","StartFailed","needsStop","stop","createConnection","refreshTrace","initOption","_clientGetRootPath","initParams","processId","rootUri","computeClientCapabilities","fillInitializeParams","textDocumentSync","onDiagnostics","handleDiagnostics","RegistrationRequest","handleRegistrationRequest","UnregistrationRequest","handleUnregistrationRequest","ApplyWorkspaceEditRequest","handleApplyWorkspaceEdit","InitializedNotification","hookFileEvents","hookConfigurationChanged","initializeFeatures","retry","title","folders","scheme","cleanUp","shutdown","exit","didChangeWatchedFiles","changes","asDiagnostics","setDiagnostics","handleConnectionError","handleConnectionClosed","createMessageTransports","transports","defaultTraceOptions","InitializeRequest","ShutdownRequest","ExitNotification","LogMessageNotification","ShowMessageNotification","TelemetryEventNotification","didOpenTextDocument","didChangeTextDocument","didCloseTextDocument","didSaveTextDocument","PublishDiagnosticsNotification","action","closed","traceConfig","_connection","fileEvents","registerRaw","features","feature","registerFeature","notifyFileEvent","applyEdit","workspaceEdit","documentChanges","resourceOperations","ResourceOperationKind","Rename","failureHandling","FailureHandlingKind","TextOnlyTransactional","relatedInformation","fillClientCapabilities","registration","registrations","unregistration","unregisterations","edit","openTextDocuments","versionMismatch","TextDocumentEdit","applied","RequestCancelled","ValueUUID","other","asHex","V4UUID","_randomHex","_oneOf","_timeHighBits","_chars","v4","empty","_UUIDPattern","isUUID","DiagChannel","CorrelationContextManager","getCurrentContext","enabled","Zone","generateContextObject","operationId","parentId","operationName","correlationContextHeader","operation","customProperties","CustomPropertiesImpl","runWithContext","fn","fork","run","wrapCallback","wrap","enable","isNodeVersionCompatible","hasEverEnabled","registerContextPreservation","patchError","patchTimers","disable","nodeVer","versions","node","methodNames","methodName","orig","apply","handleId","AppInsightsAsyncCorrelatedErrorWrapper","stackRewrite","prepareStackTrace","stackTrace","foundOne","getFileName","max","stackFrames","startIndex","props","propertyName","hiddenPropertyName","writable","getOwnPropertyDescriptor","header","addHeaderData","keyvals","keyval","parts","serializeToHeader","getProperty","setProperty","val","bannedCharacters","requestContextSourceKey","requestContextTargetKey","requestIdHeader","parentIdHeader","rootIdHeader","Subscriber","outputChannelLogger","subscribeToAllLoggers","subscriber","Logger","items","getOutputChannel","thisArg","_arguments","P","generator","fulfilled","step","next","done","getCppToolsApi","api","cpptools","getApi","isCppToolsExtension","getVersion","Settings","Section","clangFormatPath","clangFormatStyle","clangFormatFallbackStyle","clangFormatSortIncludes","formatting","suggestSnippets","intelliSenseEngineFallback","intelliSenseCachePath","intelliSenseCacheSize","errorSquiggles","inactiveRegionOpacity","inactiveRegionForegroundColor","inactiveRegionBackgroundColor","autoComplete","loggingLevel","navigationLength","autoAddFileAssociations","workspaceParsingPriority","workspaceSymbols","exclusionPolicy","commentContinuationPatterns","configurationWarnings","preferredPathSeparator","defaultIncludePath","defaultDefines","defaultMacFrameworkPath","defaultWindowsSdkVersion","defaultCompileCommands","defaultForcedInclude","defaultIntelliSenseMode","defaultCompilerPath","defaultCStandard","defaultCppStandard","defaultConfigurationProvider","defaultBrowsePath","defaultDatabaseFilename","defaultLimitSymbolsToIncludedHeaders","defaultSystemIncludePath","value1","value2","WorkspaceFolder","OtherSettings","editorTabSize","filesAssociations","filesExclude","searchExclude","Workspace","PersistentStateBase","defaultValue","defaultvalue","DefaultValue","workspaceState","PersistentFolderState","_disposable","CallbackList","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","len","callbacks","contexts","thisArgs","onFirstListenerAdd","isEmpty","_noop","onLastListenerRemove","invoke","linuxDistribution_1","architecture","distribution","architecturePromise","distributionPromise","GetWindowsArchitecture","GetUnixArchitecture","LinuxDistribution","GetDistroInformation","arch","distro","archArray","GetUnknownArchitecture","extensionFolderPath","userBucketMax","userBucketString","localConfigFile","ABTestSettings","intelliSenseEngineDefault","recursiveIncludesDefault","gotoDefIntelliSenseDefault","defaultIntelliSenseEngine","recursiveIncludes","gotoDefIntelliSense","updateSettings","downloadCpptoolsJsonPkgAsync","UseDefaultIntelliSenseEngine","UseRecursiveIncludes","UseGoToDefIntelliSense","cpptoolsJsonFile","fileContent","newSettings","hasError","localConfigPath","getABTestSettings","IsInitialized","publishers","unpatchedModules","bunyan","mongodb","mongodbCore","mysql","redis","pg","pgPool","winston","mod","HttpDependencyParser","CorrelationContextManager_1","AutoCollectHttpDependencies","INSTANCE","isEnabled","_isEnabled","_isInitialized","_initialize","isInitialized","originalRequest","originalHttpsRequest","clientRequestPatch","shouldCollect","disableCollectionRequestOption","alreadyAutoCollectedFlag","trackRequest","requestArgs","requestParser","currentContext","uniqueRequestId","requestNumber","getUrl","getHeader","setHeader","correlationId","correlationHeader","components","key_1","onResponse","dependencyTelemetry","getDependencyTelemetry","contextObjects","trackDependency","CorrelationIdManager","queryCorrelationId","appIdUrlString","profileQueryEndpoint","instrumentationKey","completedLookups","pendingLookups","fetchAppId","disableAppInsightsAutoCollection","req","res","appId_1","setEncoding","correlationIdPrefix","correlationIdRetryIntervalMs","cancelCorrelationIdQuery","generateRequestId","suffix","currentRootId","appendSuffix","generateRootId","getRootId","endIndex","delimiter","requestIdMaxLength","trimPosition","DefaultSize","CR","LF","CRLF","MessageBuffer","buffer","allocUnsafe","chunk","toAppend","bufferLen","byteLength","copy","newSize","ceil","nextStart","numberOfBytes","onPartialMessage","AbstractMessageReader","partialMessageEmitter","asError","readable","_partialMessageTimeout","partialMessageTimeout","timeout","nextMessageLength","messageToken","partialMessageTimer","onData","fireError","fireClose","tryReadHeaders","contentLength","msg","tryReadContent","setPartialMessageTimer","clearPartialMessageTimer","json","clearTimeout","firePartialMessage","waitingTime","eventEmitter","socket","ContentLength","AbstractMessageWriter","errorCount","sending","doWriteMessage","send","handleError","semver","moduleModule","nativeModules","binding","originalRequire","patchedModules","originalModule","modulePath","_resolveFilename","moduleVersion","prereleaseTagIndex","modifiedModule","modulePatcher","satisfies","versionSpecifier","patch","AvailabilityData","Base","ContextTagKeys","Data","DataPoint","DataPointType","Envelope","EventData","ExceptionData","ExceptionDetails","MessageData","MetricData","PageViewData","RemoteDependencyData","RequestData","SeverityLevel","StackFrame","extendStatics","__extends","__proto__","b","__","_super","ver","measurements","AutoCollectPerformance","_handle","_lastCpus","cpus","_lastRequests","totalRequestCount","_totalRequestCount","totalFailedRequestCount","_totalFailedRequestCount","time","cpuUsage","_lastAppCpuUsage","_lastHrtime","hrtime","trackPerformance","unref","countRequest","once","_lastRequestExecutionTime","_trackCpu","_trackMemory","_trackNetwork","totalUser","totalSys","totalNice","totalIdle","totalIrq","cpu","lastCpu","times","model","speed","lastTimes","user","sys","nice","idle","irq","appCpuPercent","appCpuUsage","totalApp","system","combinedTotal","trackMetric","freeMem","freemem","usedMem","memoryUsage","rss","lastRequests","requests","intervalRequests","elapsedMs","elapsedSeconds","requestsPerSec","RequestParser","_setStatus","status","endTime","duration","_isSuccess","HttpRequestParser","AutoCollectHttpRequests","_isAutoCorrelating","useAutoCorrelation","isAutoCorrelating","_generateCorrelationContext","getOperationId","tags","getRequestId","getOperationName","getCorrelationContextHeader","wrapOnRequestHandler","requestParser_1","correlationContext","wrapServerEventHandler","server","originalAddListener","addListener","eventType","eventHandler","originalHttpServer","createServer","originalHttpsServer","trackRequestSync","addResponseCorrelationIdHeader","endRequest","_requestParser","getOperationParentId","headersSent","ellapsedMilliseconds","requestTelemetry","getRequestTelemetry","tagOverrides","getRequestTags","selectColor","namespace","hash","charCodeAt","createDebug","colors","abs","prevTime","debug","_len","_key","self","curr","ms","diff","prev","coerce","unshift","format","formatter","formatters","formatArgs","useColors","color","destroy","extend","init","instances","namespaces","names","skips","instance","humanize","load","ConfigurationPriority","UI","navigationStatusBarItem","createStatusBarItem","StatusBarAlignment","Right","tooltip","ShowNavigation","configStatusBarItem","ShowConfiguration","intelliSenseStatusBarItem","text","ShowFlameIcon","browseEngineStatusBarItem","ThemeColor","ShowDBIcon","NavigationLocation","ActiveConfig","TagParseStatus","IsTagParsing","IsUpdatingIntelliSense","hide","isCpp","isSettingsJson","TagParsingChanged","IntelliSenseParsingChanged","NavigationLocationChanged","TagParserStatusChanged","ActiveConfigChanged","placeHolder","navlist","description","showQuickPick","revealRange","TextEditorRevealType","InCenter","Selection","Position","configurationNames","currentProvider","paths","workspaceNames","prompt","onSkip","showConfigurationPrompt","IncludePath","CompileCommands","CustomProvider","priority","showPrompt","configured","configurationUIPromise","cp","SemVer","client_1","colorProvider_1","configuration_1","implementation_1","typeDefinition_1","workspaceFolders_1","foldingRange_1","processes_1","REQUIRED_VSCODE_VERSION","Executable","TransportKind","Transport","NodeModule","StreamInfo","ChildProcessInfo","ProposedFeatures","isSocket","detached","LanguageClient","arg1","arg2","arg3","arg4","arg5","serverOptions","forceDebug","_serverOptions","_forceDebug","checkVersion","codeVersion","prerelease","_serverProcess","toCheck","_isDetached","checkProcessDied","childProcess","terminate","runDebug","v8debug","execArgv","startedInDebugMode","_getServerWorkingDir","serverWorkingDir","transport","stdio","runtime","pipeName","ipc","silent","sp","onConnected","execOptions","getEnvironment","serverProcess","registerFeatures","createAll","TypeDefinitionFeature","ImplementationFeature","ColorProviderFeature","WorkspaceFoldersFeature","FoldingRangeFeature","_mainGetRootPath","lstat","SettingMonitor","_setting","primary","rest","needsStart","CompletionItem","CodeLens","DocumentLink","TestHook","statusChangedEvent","EventEmitter","StatusChanged","testHook","getTestHook","crypto","osTmpDir","_c","tmpDir","RANDOM_CHARS","TEMPLATE_PATTERN","DEFAULT_TRIES","CREATE_FLAGS","O_CREAT","O_EXCL","O_RDWR","EBADF","errno","ENOENT","DIR_MODE","FILE_MODE","_removeObjects","_gracefulCleanup","_uncaughtException","_randomChars","howMany","rnd","randomBytes","pseudoRandomBytes","_isUndefined","_parseArguments","_generateTmpName","opts","dir","template","prefix","tmpName","tries","_getUniqueName","tmpNameSync","_rmdirRecursiveSync","root","dirs","pop","deferred","files","readdirSync","lstatSync","unlinkSync","rmdirSync","_prepareTmpFileRemoveCallback","removeCallback","_prepareRemoveCallback","fdPath","closeSync","isExpectedError","isENOENT","keep","_prepareTmpDirRemoveCallback","unsafeCleanup","removeFunction","called","_cleanupCallback","_garbageCollector","tmpdir","mkdir","dirSync","mkdirSync","open","discardDescriptor","close","detachDescriptor","fileSync","discardOrDetachDescriptor","openSync","setGracefulCleanup","tokens","major","minor","firstDigitOffset","suffixVersion","suffixStr","LanguageServer","TemporaryCommandRegistrar","isLanguageServerDisabled","isActivationReady","commandsToRegister","delayedCommandsToExecute","registerTempCommand","tempCommandRegistrar","initializeTemporaryCommandRegistrar","attachToProcess_1","nativeAttach_1","configurationProvider_1","debugAdapterDescriptorFactory_1","buildAndDebugActiveFileStr","attachItemsProvider","NativeAttachItemsProviderFactory","Get","attacher","AttachPicker","ShowAttachEntries","remoteAttacher","RemoteAttachPicker","any","configurationProvider","ConfigurationAssetProviderFactory","getConfigurationProvider","vsdbgProvider","CppVsDbgConfigurationProvider","registerDebugConfigurationProvider","QuickPickConfigurationProvider","CppDbgConfigurationProvider","registerTextEditorCommand","configs","provideDebugConfigurations","vsdbgConfigs","configuration","DevEnvDir","preLaunchTask","startDebugging","getConfigurationSnippets","language","pattern","ConfigurationSnippetProvider","registerDebugAdapterDescriptorFactory","CppvsdbgDebugAdapterDescriptorFactory","DEBUG_TYPE","CppdbgDebugAdapterDescriptorFactory","Process","commandLine","detail","WmicAttachItemsProvider","PsAttachItemsProvider","NativeAttachItemsProvider","getInternalProcessEntries","processEntries","sort","aLower","bLower","toAttachItem","processCmd","PsProcessParser","psDarwinCommand","psLinuxCommand","processes","ParseProcessFromPs","secondColumnCharacters","commColumnTitle","ParseProcessFromPsArray","processArray","processEntry","parseLineFromPs","matches","executable","cmdline","WmicProcessParser","ParseProcessFromWmic","wmicNameTitle","wmicCommandLineTitle","wmicPidTitle","currentProcess","parseLineFromWmic","extendedLengthPath","ArchType","ArchitectureReplacer","pipeProgramStr","expectedArch","replacedPipeProgram","winDir","WINDIR","winDirAltDirSep","x64","pathSep","checkForFolderInPath","ia32","cpptoolsJsonUtils","DebuggerExtension","packageManager_1","installationInformation_1","cppTools1_1","releaseNotesVersion","cppTools","CppTools1","languageServiceDisabled","reloadMessageShown","makeBinariesExecutable","removeUnnecessaryFile","sourcePath","sendTelemetry","installBlob","getInstallationInformation","versionShown","postInstall","finalizeExtensionActivation","disableLanguageServer","activateLanguageServer","packageJsonPath","abTestSettings","prevIntelliSenseEngineDefault","rewriteManifest","activationEvents","installLockExists","setInstallationStage","promises","binaries","platforms","findIndex","plat","architectures","binary","makeOfflineBinariesExecutable","offlineInstallation","packageManager","PackageManager","withProgress","ProgressLocation","Notification","cancellable","DownloadPackages","InstallPackages","downloadAndInstallPackages","onlineInstallation","errorMessage","installationInformation","stage","PackageManagerError","packageError","innerError","pkg","errorCode","processRuntimeDependencies","appInsights","TelemetryReporter","extensionVersion","userOptIn","logFilePath","logStream","flags","autoClose","updateUserOptIn","configListener","TELEMETRY_CONFIG_ID","TELEMETRY_CONFIG_ENABLED_ID","createAppInsightsClient","defaultClient","appInsightsClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","commonProperties","getCommonProperties","userId","sessionId","endpointUrl","release","trackEvent","flushEventsToLogger","flushEventsToAI","flush","AutoCollectConsole","AutoCollectExceptions","Contracts","_console","_exceptions","_performance","_serverRequests","_clientRequests","_isConsole","_isConsoleLog","_isExceptions","_isPerformance","_isRequests","_isDependencies","_isDiskRetry","_isCorrelating","_diskRetryInterval","_diskRetryMaxBytes","_isStarted","Configuration","getCorrelationContext","wrapWithCorrelationContext","collectConsoleLog","resendInterval","maxBytesOnDisk","setInternalLogging","enableDebugLogging","enableWarningLogging","consolePub","diagnostic_channel_1","originalBunyan","originalEmit","_emit","rec","noemit","level","NODE_DEBUG","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","loose","er","TypeError","raw","num","build","clean","compare","compareMain","comparePre","compareIdentifiers","inc","identifier","version1","version2","eq","numeric","anum","bnum","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","ANY","operator","rcompareIdentifiers","compareLoose","rcompare","rsort","parseRange","isX","hyphenReplace","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","outside","hilo","gtfn","ltefn","ltfn","ecomp","comparators","high","low","comparator","intersects","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","_","M","pr","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","thisComparators","thisComparator","rangeComparators","rangeComparator","toComparators","maxSatisfying","maxSV","rangeObj","minSatisfying","minSV","validRange","ltr","gtr","parsed","r1","r2","stream_1","originalConsole","aiLoggingOutStream","Writable","aiLoggingErrStream","aiLoggingConsole","Console","_loop_1","originalMethod","consoleMethods_1","mongoCore2","originalMongoCore","originalConnect","Server","connect","originalWrite","pool","cbidx","originalLogout","logout","mongo2","originalMongo","instrument","operationIdGenerator","eventMap","requestId","startedData","succeeded","originalMysql","originalMysqlPath","patchObjectFunction","cbWrapper","originalFunc","resultContainer","patchClassMemberFunction","classObject","connectionClass","hrDuration","callbackArgs","poolClass","webpackEmptyContext","postgresPool1","originalPgPool","postgres6","originalPg","originalPgPath","originalClientQuery","Client","diagnosticOriginalFunc","queryResult","database","connectionParameters","patchCallback","trackingCallback","rowCount","emit","preparable","plan","originalRedis","originalSend","RedisClient","internal_send_command","commandObj","cb_1","pubsubBound","address_1","address","startTime_1","originalWinston","curLevels","originalLog","loggingFilter","meta","levelKind","npm","levels","syslog","filters","f","parent","zoneSpec","_properties","_parent","_zoneDelegate","ZoneDelegate","assertZonePatched","ZoneAwarePromise","_currentZoneFrame","zone","configurable","_currentTask","getZoneWith","_callback","intercept","runGuarded","applyThis","applyArgs","ZoneFrame","runTask","runCount","previousTask","isPeriodic","cancelFn","invokeTask","scheduleMicroTask","customSchedule","scheduleTask","ZoneTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","__symbol__","parentDelegate","_taskCounts","microTask","macroTask","eventTask","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","onScheduleTask","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","onInvokeTask","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","onCancelTask","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","onHasTask","_hasTaskDlgt","_hasTaskCurrZone","targetZone","scheduleFn","scheduleQueueDrain","_microTaskQueue","_updateTaskCount","hasTask","counts","_numberOfNestedTaskFrames","drainMicroTaskQueue","symbolSetTimeout","symbolPromise","symbolThen","_isDrainingMicrotaskQueue","_uncaughtPromiseErrors","consoleError","rejection","uncaughtPromiseError","isThenable","forwardResolution","forwardRejection","symbolState","symbolValue","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","resolvePromise","clearRejectedNoCatch","scheduleResolveOrReject","error_1","currentTask","chainPromise","onFulfilled","onRejected","delegate","executor","race","rej","onResolve","onReject","values_1","resolvedValues","values_2","FrameType","NativePromise","patchThen","NativePromiseProtototype","NativePromiseThen","nativePromise","fetchPromise","zoneAwareFrame","NativeError","blackListedStackFrames","ZoneAwareError","createProperty","error_2","createMethodProperty","errorMethod","errorProperties","proto","pKeys","createErrorProperties","getErrorPropertiesForPrototype","newProps","cKeys","cKey","originalStack","frames_1","zoneFrame","frame","frameType","blackList","transition","zoneAwareStack","defineProperties","getPrototypeOf","stackTraceLimit","targetObject","constructorOpt","captureStackTrace","structuredStackTrace","getFunctionName","detectZone","parentZoneDelegate","currentZone","parentZD","frames_2","runFrame","runGuardedFrame","runTaskFrame","fnName","zoneSymbol","_global$1","EVENT_TASKS","findExistingRegisteredTask","capture","eventTasks","useCapturing","defaultListenerMetaCreator","invokeAddFunc","addFnSymbol","invokeRemoveFunc","removeFnSymbol","makeZoneAwareAddListener","addFnName","removeFnName","useCapturingParam","allowDuplicates","isPrepend","metaCreator","defaultUseCapturing","scheduleEventListener","attachRegisteredEvent","cancelEventListener","handleEvent","validZoneHandler","makeZoneAwareRemoveListener","symbol","patchMethod","patchFn","delegateName","createNamedFn","events","callAndReturnFirstParam","EE_ADD_LISTENER","EE_PREPEND_LISTENER","EE_REMOVE_LISTENER","EE_REMOVE_ALL_LISTENER","EE_LISTENERS","EE_ON","zoneAwareAddListener$1","zoneAwarePrependListener","zoneAwareRemoveListener$1","zoneAwareRemoveAllListeners","findAllExistingRegisteredTasks","makeZoneAwareRemoveAllListeners","zoneAwareListeners","patchTimer","setName","cancelName","nameSuffix","setNative","clearNative","tasksByHandleId","clearTask","delay","handle","ref","funcName","callbackIndex","patchMacroTask","httpClient","_global","timers","patchNextTick","nativeRandomBytes_1","nativePbkdf2_1","pbkdf2","ClientRequest","ClientRequest_1","factory","_methodNames","Contracts_1","trackTrace","severity","Information","Generated_1","RemoteDependencyDataConstants","TYPE_HTTP","TYPE_AI","domainSupportsProperties","domain","applicationVersion","deviceId","deviceLocale","deviceModel","deviceOEMName","deviceOSVersion","deviceType","locationIp","operationParentId","operationSyntheticSource","operationCorrelationVector","sessionIsFirst","userAccountId","userAuthUserId","cloudRole","cloudRoleInstance","internalSdkVersion","internalAgentVersion","internalNodeName","Measurement","sampleRate","exceptions","hasFullStack","parsedStack","TelemetryType","telemetryTypeToBaseType","Exception","Metric","Request","Dependency","baseTypeToTelemetryType","baseType","bunyanToAILevelMap","10","20","30","40","50","60","Critical","AIlevel","winstonToAILevelMap","og","emerg","alert","crit","warning","notice","silly","unknown","_exceptionListenerHandle","reThrow","trackException","exception","isAppCrashing","_rejectionListenerHandle","UNCAUGHT_EXCEPTION_HANDLER_NAME","UNHANDLED_REJECTION_HANDLER_NAME","removeListener","_getUrlFromRequestOptions","baseTelemetry","dependencyId","urlObject","dependencyName","toUpperCase","remoteDependencyType","remoteDependencyTarget","resultCode","dependencyTypeName","originalOptions_1","parsedQuery","dbName","databaseName","commandName","queryObj","sqlString","sql","connectionConfig","socketPath","q","conn","_getAbsoluteUrl","socketRemoteAddress","remoteAddress","parseHeaders","connectionRemoteAddress","legacySocketRemoteAddress","sourceCorrelationId","newTags","_getIp","_getId","encrypted","pathName","ipMatch","results","ip","rawHeaders","parseId","userAgent","rootId","cookieValue","ServerRequestTracking","ClientRequestTracking","NodeClient","trackNodeHttpRequestSync","trackNodeHttpRequest","trackNodeHttpDependency","Config","Context","Channel","TelemetryProcessors","Sender","EnvelopeFactory","iKey","_telemetryProcessors","sender","disableAppInsights","maxBatchSize","maxBatchIntervalMs","track","triggerSend","telemetryType","envelope","createEnvelope","toISOString","accepted","runTelemetryProcessors","samplingTelemetryProcessor","addTelemetryProcessor","telemetryProcessor","clearTelemetryProcessors","telemetryProcessorsCount","processor","endpointBase","_getInstrumentationKey","samplingPercentage","setCorrelationId","ENV_profileQueryEndpoint","ENV_http_proxy","ENV_https_proxy","_profileQueryEndpoint","endpoint","ENV_iKey","ENV_azurePrefix","legacy_ENV_iKey","__dirname","_loadApplicationContext","_loadDeviceContext","_loadInternalContext","appVersion","DefaultRoleName","sdkVersion","isDisabled","getBatchSize","getBatchIntervalMs","_buffer","_lastSend","_isDisabled","_getBatchSize","_getBatchIntervalMs","_sender","setDiskRetryMode","payload","_stringify","_timeoutHandle","isNodeCrashing","bufferIsEmpty","batch","saveOnCrash","getSamplingHashCode","zlib","onSuccess","_config","_onSuccess","_onError","_enableDiskRetryMode","_resendInterval","WAIT_BETWEEN_RESEND","_maxBytesOnDisk","MAX_BYTES_ON_DISK","_numConsecutiveFailures","OS_PROVIDES_FILE_PROTECTION","USE_ICACLS","ICACLS_PATH","withCredentials","Content-Type","gzip","dataToSend","responseString","_sendFirstFileOnDisk","_storeToDisk","MAX_CONNECTION_FAILURES_BEFORE_WARN","_onErrorHelper","_storeToDiskSync","_runICACLS","aclProc","windowsHide","signal","_runICACLSSync","spawnSync","_getACLIdentity","ACL_IDENTITY","psProc","POWERSHELL_PATH","_getACLIdentitySync","_getACLArguments","directory","identity","_applyACLRules","ACLED_DIRECTORIES","_applyACLRulesSync","_confirmDirExists","_getShallowDirectorySize","totalSize","fileStats","_getShallowDirectorySizeSync","TEMPDIR_PREFIX","getTime","fileFullPath","dirSize","tempDir","firstFile","systemdrive","createTraceData","createDependencyData","createEventData","createExceptionData","createRequestData","createMetricData","baseData","getTags","severityLevel","remoteDependency","exceptionDetails","typeName","parseStack","requestData","responseCode","metric","Aggregation","stdDev","frames","totalSizeInBytes","_StackFrame","regex","parsedFrame","sizeInBytes","left","right","acceptedLeft","acceptedRight","assembly","baseSize","net","tls","inherits","secureProxy","ALPNProtocols","defaultPort","buffers","buffersLength","ondata","cleanup","onend","onerror","onclose","buffered","firstLine","sock","secureEndpoint","servername","onsocket","secure","promisify","_opts","_promisifiedCallback","addRequest","ownOpts","_defaultAgent","_last","shouldKeepAlive","timedOut","timeoutMs","freeSocket","_hadError","callbackError","onSocket","ES6Promise","original","returnMultipleArguments","multiArgs","_len2","_key2","globalObject","isFunction","vertxNext","customSchedulerFn","asap","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","MessageChannel","useSetTimeout","globalSetTimeout","iterations","observer","onFulfillment","onRejection","noop","PROMISE_ID","makePromise","invokeCallback","_result","resolve$1","nextTick","createTextNode","observe","characterData","port1","onmessage","port2","postMessage","vertx","runOnLoop","runOnContext","attemptVertx","PENDING","FULFILLED","TRY_CATCH_ERROR","getThen","handleMaybeThenable","maybeThenable","then$$1","fulfill","reason","handleOwnThenable","sealed","fulfillmentHandler","rejectionHandler","tryThen","_label","handleForeignThenable","publishRejection","_onerror","_subscribers","settled","hasCallback","failed","tryCatch","Enumerator","_instanceConstructor","_remaining","_enumerate","_eachEntry","entry","resolve$$1","_then","_settledAt","Promise$1","_willSettleAt","enumerator","resolver","needsResolver","initializePromise","needsNew","finally","entries","_setScheduler","_setAsap","asapFn","_asap","polyfill","local","promiseToString","cast","browser","__nwjs","_typeof","iterator","lastC","storage","setItem","removeItem","getItem","DEBUG","navigator","documentElement","style","WebkitAppearance","firebug","table","$1","localStorage","localstorage","j","h","w","y","plural","msAbs","isPlural","round","parseFloat","long","fmtLong","fmtShort","tty","inspectOpts","colorCode","hideDate","getDate","isatty","supportsColor","reduce","k","O","hasFlag","supportLevel","isTTY","osRelease","sign","CI_NAME","TEAMCITY_VERSION","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","FORCE_COLOR","hasBasic","has256","has16m","support","argv","terminatorPos","pos","defaultClientKey","languageClients","createClient","onDidChangeWorkspaceFolders","Name","getClientFor","owners","languageClient","sep","transferFileOwnership","pair","TrackedDocuments","transferOwnership","createNullClient","folderCount","removed","oldOwner","newOwner","takeOwnership","newClient","testApi_1","protocolFilter_1","dataBinding_1","minimatch","settingsTracker_1","testHook_1","abTesting_1","configProviderTimeout","NavigationListRequest","GoToDeclarationRequest","QueryCompilerDefaultsRequest","SwitchHeaderSourceRequest","DidOpenNotification","FileCreatedNotification","FileDeletedNotification","ResetDatabaseNotification","PauseParsingNotification","ResumeParsingNotification","ActiveDocumentChangeNotification","TextEditorSelectionChangeNotification","ChangeFolderSettingsNotification","ChangeCompileCommandsNotification","ChangeSelectedSettingNotification","IntervalTimerNotification","CustomConfigurationNotification","CustomBrowseConfigurationNotification","ClearCustomConfigurationsNotification","ReloadWindowNotification","LogTelemetryNotification","ReportNavigationNotification","ReportTagParseStatusNotification","ReportStatusNotification","DebugProtocolNotification","DebugLogNotification","InactiveRegionNotification","CompileCommandsPathsNotification","UpdateClangFormatPathNotification","BlockingTask","dependency","Done","onSucceeded","failureMessageShown","allClients","DefaultClient","NullClient","trackedDocuments","crashTimes","isSupported","inactiveRegionsDecorations","isTagParsing","DataBinding","isUpdatingIntelliSense","navigationLocation","tagParserStatus","activeConfigName","createLanguageClient","registerProposedFeatures","rootFolder","queueBlockingTask","CppProperties","ConfigurationsChanged","onConfigurationsChanged","SelectionChanged","onSelectedConfigurationChanged","CompileCommandsChanged","onCompileCommandsChanged","compilerDefaults","CompilerDefaults","settingsTracker","getTracker","getUserModifiedSettings","registerNotifications","registerFileWatcher","additionalInfo","getLanguageServerFileName","ValueChanged","getName","AdditionalEnvironment","workspaceFolderBasename","serverModule","serverName","storagePath","intelliSenseCacheDisabled","releaseParts","clang_format_path","clang_format_style","clang_format_fallbackStyle","clang_format_sortIncludes","extension_path","exclude_files","exclude_search","storage_path","tab_size","autocomplete","systemIncludePath","vcpkg_root","createProtocolFilter","changedSettings","getChangedSettings","valuePair","setDecorations","decoration","ranges","onRegistered","notifyWhenReady","selectedProvider","CurrentConfigurationProvider","updateCustomConfigurationProvider","ask","showConfigureCustomProviderMessage","folderStr","requestingProvider","tokenSource","documentUris","queueTaskWithTimeout","sendCustomConfigurations","sendCustomBrowseConfiguration","getCustomConfigurationProviderId","providerName","configName","notReadyMessage","isExternalHeader","activeDebugSession","dismiss","queueTask","CurrentConfiguration","CompilerPath","KnownCompiler","getText","nextTask","pendingTask","cancelToken","notify","blockingTask","logTelemetry","navigate","updateStatus","updateTagParseStatus","updateInactiveRegions","promptCompileCommands","setupOutputHandlers","rootPathFileWatcher","debugChannel","notificationBody","cppSettings","navigation","addFileAssociations","currentNavigation","maxLength","fileAssociations","assocs","is_c","filesAndPaths","foundNewAssociation","fileAndPath","foundGlobMatch","assoc","Status","TagParsingBegun","IntelliSenseCompiling","IntelliSenseReady","TagParsingDone","showIntelliSenseFallbackMessage","showConfigureIncludePathMessage","fallbackMsg","VcpkgInstalled","getCommands","createTextEditorDecorationType","opacity","backgroundColor","rangeBehavior","DecorationRangeBehavior","ClosedOpen","regions","newRange","startLine","endLine","toInsert","compileCommands","showConfigureCompileCommandsMessage","showCompileCommands","setCompileCommands","requestWhenReady","switchHeaderSourceFileName","configurations","currentConfiguration","CurrentConfigurationIndex","newProvider","updateCustomConfigurations","updateCustomBrowseConfiguration","ConfigurationNames","includePath","defines","intelliSenseMode","standard","forcedInclude","out","sanitized","isSourceFileConfigurationItem","configurationItems","windowsSdkVersion","browseConfiguration","showConfigurations","select","showConfigurationProviders","clearCustomConfigurations","showParsingCommands","addToIncludePathCommand","checkCppProperties","extensionProcessName","booleanEvent","stringEvent","COERCE","includePrerelease","ParseError","InvalidRequest","InvalidParams","serverErrorStart","serverErrorEnd","ServerNotInitialized","UnknownErrorCode","MessageReadError","AbstractMessageType","_numberOfParams","isCancellationRequested","Cancelled","shortcutEvent","MutableToken","_isCancelled","_emitter","_token","Touch","First","Last","_map","_head","_tail","_size","touch","previous","addItemLast","addItemFirst","callbackfn","path_1","os_1","crypto_1","net_1","randomSuffix","connectResolve","connected","Location","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","TextEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","__webpack_exports__","WorkspaceChange","TextDocumentIdentifier","VersionedTextDocumentIdentifier","TextDocumentItem","MarkupContent","InsertTextFormat","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolInformation","CodeActionContext","CodeAction","FormattingOptions","TextDocument","TextDocumentSaveReason","character","objectLiteral","one","two","three","four","defined","red","green","blue","alpha","textEdit","additionalTextEdits","startCharacter","endCharacter","Hint","newText","insert","del","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","TextEditChangeImpl","_textEditChanges","_workspaceEdit","textEditChange","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","isIncomplete","fromPlainText","plainText","contents","documentation","parameters","Read","Write","containerName","selectionRange","children","deprecated","only","commandOrEdit","tabSize","insertSpaces","FullTextDocument","lineCount","positionAt","offsetAt","applyEdits","sortedEdits","mergeSort","leftIdx","rightIdx","lastModifiedOffset","startOffset","endOffset","Manual","AfterDelay","FocusOut","_uri","_languageId","_content","_lineOffsets","getLineOffsets","lineOffsets","isLineStart","offset","mid","lineOffset","nextLineOffset","protocol_implementation_1","ImplementationRequest","protocol_typeDefinition_1","TypeDefinitionRequest","protocol_workspaceFolders_1","WorkspaceFoldersRequest","DidChangeWorkspaceFoldersNotification","protocol_configuration_1","ConfigurationRequest","protocol_colorProvider_1","DocumentColorRequest","ColorPresentationRequest","protocol_foldingRange_1","FoldingRangeRequest","DocumentFilter","Abort","Transactional","Undo","InitializeError","unknownProtocolVersion","Log","CompletionTriggerKind","Invoked","TriggerCharacter","TriggerForIncompleteCompletions","protocolCompletionItem_1","protocolCodeLens_1","protocolDocumentLink_1","uriConverter","_uriConverter","asVersionedTextDocumentIdentifier","asTextDocumentSaveReason","asTriggerKind","triggerKind","asWorkerPosition","asDiagnosticSeverity","asDiagnostic","asTextEdit","isTextDocument","isTextDocumentChangeEvent","rangeLength","includeContent","triggerCharacter","protocolItem","asDocumentation","filterText","insertText","SnippetString","insertTextFormat","fromEdit","fillPrimaryInsertText","originalItemKind","sortText","commitCharacters","preselect","includeDeclaration","ls","CodeBlock","diagnostic","asDiagnosticRelatedInformation","information","asLocation","MarkdownString","asCompletionInsertText","itemKind","asSignatureInformations","asSignatureInformation","asParameterInformations","asParameterInformation","asDocumentHighlight","asDocumentHighlightKind","asSymbolKind","asSymbolInformation","asDocumentSymbol","kindMapping","asCodeActionKind","Empty","part","asColor","asColorInformation","ci","asColorPresentation","presentation","asFoldingRangeKind","Comment","Imports","Region","asFoldingRange","hover","appendCodeblock","appendMarkdown","appendText","asHoverContent","SignatureHelp","activeSignature","activeParameter","signatures","asCommands","asFoldingRanges","foldingRanges","asColorInformations","colorInformation","asColorPresentations","colorPresentations","defaultDelay","completionPromise","cancelTimeout","colorProvider","implCapabilities","provideColorPresentations","requestParams","provideDocumentColors","registerColorProvider","scopeUri","implementationProvider","provideImplementation","registerImplementationProvider","typeDefinitionProvider","provideTypeDefinition","registerTypeDefinitionProvider","access","asProtocol","didChangeWorkspaceFolders","added","capability","rangeLimit","lineFoldingOnly","foldingRangeProvider","provideFoldingRanges","registerFoldingRangeProvider","isMacintosh","isLinux","execFileSync","cmd","api_1","getCppToolsTestApi","getTestApi","isCppToolsTestExtension","configVersion","propertiesFile","configurationJson","configFileWatcher","configFileWatcherFallbackTime","compileCommandFileWatchers","defaultIncludes","defaultFrameworks","vcpkgIncludes","vcpkgPathReady","configurationGlobPattern","configurationsChanged","compileCommandsChanged","prevSquiggleMetrics","rootfs","configurationIncomplete","currentConfigurationIndex","configFolder","diagnosticCollection","buildVcpkgIncludePath","Configurations","cStandard","cppStandard","frameworks","configFilePath","handleConfigurationChange","resetToDefaultSettings","handleSquiggles","resetIndex","getConfigIndexForPlatform","isUnset","macFrameworkPath","ExtendedEnvironment","pathToCheck","parsePropertiesFile","onSelectionChanged","resolveDefaults","resolveAndSplit","updateConfiguration","browse","limitSymbolsToIncludedHeaders","databaseFilename","updateCompileCommandsFileWatchers","filePaths","fullPathToFile","with","applyDefaultIncludePathsAndFrameworks","savedKnownCompilers","updateServerOnFolderSettingsChange","readResults","newJson","dirty","newId","checkId","updateToVersion2","updateToVersion3","updateToVersion4","curText","curTextStartOffset","configStart","nameEnd","nextNameStart","nextNameStart2","pathArray","curPath","forcedIncludeStart","forcedeIncludeEnd","compileCommandsStart","compileCommandsEnd","compilerPathStart","compilerPathEnd","PathNonExistent","PathNotAFile","PathNotADirectory","newSquiggleMetrics","isCompilerPath","resolvedPath","isWSL","mntStr","pathExists","existsWithExeAdded","relativePath","curOffset","changedSquiggleMetrics","getIntelliSenseModeForPlatform","mtime","me","defaultHandler","invoke2","invoke3","invoke4","sendMessage","checkOwnership","provideCustomConfiguration","valueChanged","Minimatch","GLOBSTAR","expand","plTypes","!","?","+","*","@","qmark","star","twoStarDot","twoStarNoDot","reSpecials","slashSplit","nocomment","negate","comment","make","braceExpand","nobrace","defaults","def","_made","parseNegate","globSet","globParts","si","negateOffset","nonegate","isSub","noglobstar","stateChar","hasMagic","nocase","escaping","patternListStack","negativeLists","inClass","reClassStart","classStart","patternStart","dot","clearStateChar","noext","reStart","pl","reEnd","cs","SUBPARSE","tail","$2","addPatternStart","nl","nlBefore","nlFirst","nlLast","nlAfter","openParensBefore","cleanAfter","dollar","newRe","regExp","_glob","_src","makeRe","twoStar","ex","mm","nonull","partial","matchBase","hit","matchOne","flipNegate","fi","pi","fl","fr","swallowee","concatMap","balanced","isTop","expansions","pre","isNumericSequence","body","isAlphaSequence","isSequence","isOptions","post","escClose","parseCommaParts","postParts","embrace","N","width","incr","reverse","pad","isPadded","need","z","el","expansion","escSlash","escOpen","escComma","escPeriod","escapeBraces","unescapeBraces","xs","maybeMatch","reg","begs","beg","ai","bi","maxSettingLengthForTelemetry","cache","SettingsTracker","previousCppSettings","collectSettings","areEqual","getSetting","subKey","newKey","subVal","filterAndSanitize","curSetting","typeMatch","curEnum","escapeChars","escape","chars","char","getMLBeginPattern","getMLSplitRule","beforePattern","begin","beforeText","afterText","indentAction","IndentAction","IndentOutdent","continue","getMLFirstLineRule","getMLContinuationRule","continuePattern","getMLContinuePattern","trimLeft","getMLEndRule","endPattern","getMLEndPattern","removeText","getMLEmptyEndRule","getMLEmptyEndPattern","getSLFirstLineRule","getSLBeginPattern","getSLContinuationRule","getSLContinuePattern","getSLEndRule","trimmed","getSLEndPattern","getLanguageConfigFromPatterns","patterns","beginPatterns","continuePatterns","duplicates","beginRules","continueRules","endRules","constructCommentRules","onEnterRules","linuxDistro","getDistroInformationFromFile","getDistroInformation","distroName","distroVersion","trailingSlashRe","TEMP","TMP","SystemRoot","windir","TMPDIR","testingInsidersVsixInstall","isBuild","browser_download_url","isAsset","isArrayOfAssets","assets","rateLimit","User-Agent","remaining","isRate","rate","getRateLimit","rateLimitExceeded","releaseJson","isArrayOfBuilds","getReleaseJson","builds","latestVersion","needsUpdate","useBuild","installed","targetBuild","targetVersion","getTargetBuild","vsixName","vsixNameForPlatform","asset","getVsixDownloadUrl","common_1","attachQuickPick_1","debugUtils","getAttachItems","_channel","pipeTransport","pipeProgram","checkAndReplaceWSLPipeProgram","pipeCwd","pipeCwdStr","newPipeProgramStr","pipeArgs","pipeCmd","createArgumentList","getRemoteOSAndProcesses","matchOnDetail","matchOnDescription","remoteOS","argsString","RefreshButton","iconPath","refreshImagePathDark","refreshImagePathLight","dark","light","quickPick","createQuickPick","canSelectMany","buttons","onDidTriggerButton","button","onDidAccept","selectedItems","selectedId","onDidHide","extension_2","configurations_1","jsonc_parser_1","isDebugLaunchStr","underlyingProvider","defaultConfig","menuItem","resolveDebugConfiguration","CppConfigurationProvider","getInitialConfigurations","compilerName","newConfig","externalConsole","exeName","program","debuggerName","MIMode","suffixIndex","miDebuggerPath","compilerDirname","debuggerPath","isAbsolute","DebuggerType","cppvsdbg","cppdbg","WindowsConfigurationProvider","OSXConfigurationProvider","LinuxConfigurationProvider","DefaultConfigurationProvider","debuggerType","configurationSnippet","GetLaunchConfiguration","snippet","isInitialConfiguration","bodyText","completionItems","convertConfigurationSnippetToCompetionItem","GetAttachConfiguration","setupCommandsBlock","MIConfigurations","PipeTransportConfigurations","WindowsConfigurations","WSLConfigurations","snippets","indentJsonString","numTabs","repeat","formatString","createLaunchString","createAttachString","createRemoteAttachString","createPipeTransportString","debuggerProgram","additionalProperties","snippetPrefix","miDebugger","windowsDebugger","bashPipeProgram","AbstractDebugAdapterDescriptorFactory","session","DebugAdapterExecutable","yauzl","mkdirp","PackageManagerWebResponseError","GetPackages","packages","BuildPromiseChain","DownloadPackage","InstallPackage","promiseBuilder","promiseChain","allPackages","runtimeDependencies","GetPackageList","progressCount","AppendChannel","report","tmpResult","CreateTempFile","DownloadPackageWithRetries","tmpFile","lastError","retryCount","DownloadFile","AppendLineChannel","urlString","proxyStrictSSL","secondsDelay","pow","packageSize","downloadPercentage","dots","newDots","fromFd","lazyEntries","zipfile","readEntry","absoluteEntryPath","openReadStream","readStream","absoluteEntryTempFile","fileMode","writeStream","fd_slicer","crc32","Transform","PassThrough","decodeStrings","validateEntrySizes","strictFileNames","defaultCallback","fstat","fromRandomAccessReader","createFromFd","bufferSize","eocdrWithoutCommentSize","newBuffer","bufferReadStart","readAndAssertNoEof","readUInt32LE","eocdrBuffer","diskNumber","readUInt16LE","entryCount","centralDirectoryOffset","commentLength","expectedCommentLength","decodeBuffer","ZipFile","zip64EocdlBuffer","zip64EocdlOffset","zip64EocdrOffset","readUInt64LE","zip64EocdrBuffer","fileSize","emitError","readEntryCursor","entriesRead","isOpen","emittedError","_readEntry","emitErrorAndAutoClose","Entry","dosDateTimeToDate","date","validateFileName","bytesRead","AssertByteCountStream","byteCount","actualByteCount","expectedByteCount","RandomAccessReader","refCount","RefUnrefFilter","unreffedYet","fromBuffer","createFromBuffer","maxChunkSize","signature","versionMadeBy","versionNeededToExtract","generalPurposeBitFlag","compressionMethod","lastModFileTime","lastModFileDate","compressedSize","uncompressedSize","fileNameLength","extraFieldLength","fileCommentLength","internalFileAttributes","externalFileAttributes","relativeOffsetOfLocalHeader","isUtf8","fileCommentStart","extraFieldBuffer","extraFields","headerId","dataSize","dataStart","dataEnd","dataBuffer","fileComment","zip64EiefBuffer","extraField","readUInt8","oldNameCrc32","unsigned","expectedCompressedSize","isEncrypted","validateFileNameOptions","relativeStart","relativeEnd","decrypt","isCompressed","decompress","localFileHeaderEnd","fileDataStart","fileDataEnd","createReadStream","endpointStream","destroyed","inflateFilter","createInflateRaw","unpipe","getLastModDate","_transform","_flush","emptyStream","stream","_readStreamForRange","refUnrefFilter","byteCounter","written","_write","cp437","lower32","Readable","Pend","FdSlicer","pend","ReadStream","WriteStream","Infinity","bytesWritten","BufferSlicer","go","_read","toRead","_readableState","highWaterMark","bytes","delta","entireSlice","nextOffset","bufferSlicer","pending","waiting","pendHold","pendGo","cbListener","wait","hold","CRC_TABLE","ensureBuffer","isBuffer","hasNewBufferAPI","alloc","_crc32","buf","readUInt32BE","crc","writeInt32BE","Int32Array","signed","_0777","mkdirP","made","xfs","umask","er2","sync","err0","err1","InstallationInformation","cppTools_1","BackupApi","backupApi","CppTools","registerCustomConfigurationProvider","notifyReady","didChangeCustomConfiguration","didChangeCustomBrowseConfiguration","failedRegistrations","latest","addNotifyReadyTimer","removeNotifyReadyTimer","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","isEOL","nChars","computeIndentLevel","indentValue","eol","getEOL","lineBreak","indentLevel","scanner","createScanner","newLineAndIndent","scanNext","scan","SyntaxKind","Trivia","LineBreakTrivia","Unknown","getTokenError","ScanError","editOperations","addEdit","firstToken","EOF","firstTokenStart","getTokenOffset","firstTokenEnd","getTokenLength","secondToken","replaceContent","LineCommentTrivia","BlockCommentTrivia","CloseBraceToken","OpenBraceToken","CloseBracketToken","OpenBracketToken","CommaToken","ColonToken","StringLiteral","NullKeyword","TrueKeyword","FalseKeyword","NumericLiteral","formattingOptions","getInsertionIndex","parseTree","lastSegment","findNodeAtLocation","existing","propertyIndex","removeBegin","removeEnd","withFormatting","newProperty","removalIndex","toRemove","edit_1","ParseErrorCode","ignoreTrivia","tokenOffset","scanError","scanHexDigits","exact","digits","isWhiteSpace","isLineBreak","UnexpectedEndOfString","InvalidCharacter","ch_1","InvalidUnicode","InvalidEscapeCharacter","scanString","commentClosed","UnexpectedEndOfComment","isDigit","UnexpectedEndOfNumber","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","getToken","getTokenValue","stripComments","replaceCh","_scanner","getLiteralNodeType","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","isAtPropertyKey","setPreviousNode","columnOffset","visit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","errors","currentProperty","currentParent","previousParents","onValue","ensurePropertyComplete","valueNode","segment","_b","propertyNode","getNodeValue","visitor","toNoArgVisit","visitFunction","toOneArgVisit","onComment","disallowComments","allowTrailingComma","InvalidCommentToken","InvalidSymbol","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","ValueExpected","CommaExpected","CloseBracketExpected","parseArray","PropertyNameExpected","ColonExpected","CloseBraceExpected","parseObject","InvalidNumberFormat","parseLiteral","EndOfFileExpected","main_format","modify"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 65);\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","module.exports = require(\"os\");","module.exports = require(\"fs\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport * as os from 'os';\r\nimport * as child_process from 'child_process';\r\nimport * as vscode from 'vscode';\r\nimport * as Telemetry from './telemetry';\r\nimport HttpsProxyAgent = require('https-proxy-agent');\r\nimport * as url from 'url';\r\nimport { PlatformInformation } from './platform';\r\nimport { getOutputChannelLogger, showOutputChannel } from './logger';\r\nimport * as assert from 'assert';\r\nimport * as https from 'https';\r\nimport { ClientRequest, OutgoingHttpHeaders } from 'http';\r\nimport { getBuildTasks } from './LanguageServer/extension';\r\n\r\nexport let extensionContext: vscode.ExtensionContext;\r\nexport function setExtensionContext(context: vscode.ExtensionContext): void {\r\n    extensionContext = context;\r\n}\r\n\r\n// Use this package.json to read values\r\nexport const packageJson: any = vscode.extensions.getExtension(\"ms-vscode.cpptools\").packageJSON;\r\n\r\n// Use getRawPackageJson to read and write back to package.json\r\n// This prevents obtaining any of VSCode's expanded variables.\r\nlet rawPackageJson: any = null;\r\nexport function getRawPackageJson(): any {\r\n    if (rawPackageJson === null) {\r\n        const fileContents: Buffer = fs.readFileSync(getPackageJsonPath());\r\n        rawPackageJson = JSON.parse(fileContents.toString());\r\n    }\r\n    return rawPackageJson;\r\n}\r\n\r\nexport function getRawTasksJson(): Promise<any> {\r\n    const path: string = getTasksJsonPath();\r\n    if (!path) {\r\n        return undefined;\r\n    }\r\n    return new Promise<any>((resolve, reject) => {\r\n        fs.exists(path, exists => {\r\n            if (!exists) {\r\n                return resolve({});\r\n            }\r\n            const fileContents: Buffer = fs.readFileSync(path);\r\n            let rawTasks: any = {};\r\n            try {\r\n                rawTasks = JSON.parse(fileContents.toString()); \r\n            } catch (error) {\r\n            }\r\n            resolve(rawTasks);\r\n        });\r\n    });\r\n}\r\n\r\nexport async function ensureBuildTaskExists(taskName: string): Promise<void> {\r\n    let rawTasksJson: any = await getRawTasksJson();\r\n\r\n    // Ensure that the task exists in the user's task.json. Task will not be found otherwise.\r\n    if (!rawTasksJson.tasks) {\r\n        rawTasksJson.tasks = new Array();\r\n    }\r\n    // Find or create the task which should be created based on the selected \"debug configuration\".\r\n    let selectedTask: vscode.Task = rawTasksJson.tasks.find(task => {\r\n        return task.label && task.label === task;\r\n    });\r\n    if (selectedTask) {\r\n        return;\r\n    }\r\n\r\n    const buildTasks: vscode.Task[] = await getBuildTasks();\r\n    selectedTask = buildTasks.find(task => task.name === taskName);\r\n    console.assert(selectedTask);\r\n\r\n    let definition: vscode.TaskDefinition = selectedTask.definition as vscode.TaskDefinition;\r\n    if (definition && definition.compilerPath) {\r\n         // TODO: add desired properties to empty object, don't delete.\r\n        delete definition.compilerPath;\r\n    }\r\n    \r\n    rawTasksJson.version = \"2.0.0\";\r\n\r\n    if (!rawTasksJson.tasks.find(task => { return task.label === selectedTask.definition.label; })) {\r\n        rawTasksJson.tasks.push(selectedTask.definition);\r\n    }\r\n    \r\n    // TODO: It's dangerous to overwrite this file. We could be wiping out comments.\r\n    await writeFileText(getTasksJsonPath(), JSON.stringify(rawTasksJson, null, 2));\r\n}\r\n\r\nexport function fileIsCOrCppSource(file: string): boolean {\r\n    const fileExtLower: string = path.extname(file).toLowerCase();\r\n    return [\".C\", \".c\", \".cpp\", \".cc\", \".cxx\", \".mm\", \".ino\", \".inl\"].some(ext => fileExtLower === ext);\r\n}\r\n\r\n// This function is used to stringify the rawPackageJson.\r\n// Do not use with util.packageJson or else the expanded\r\n// package.json will be written back.\r\nexport function stringifyPackageJson(packageJson: string): string {\r\n    return JSON.stringify(packageJson, null, 2);\r\n}\r\n\r\nexport function getExtensionFilePath(extensionfile: string): string {\r\n    return path.resolve(extensionContext.extensionPath, extensionfile);\r\n}\r\n\r\nexport function getPackageJsonPath(): string {\r\n    return getExtensionFilePath(\"package.json\");\r\n}\r\n\r\nexport function getTasksJsonPath(): string {\r\n    const editor: vscode.TextEditor = vscode.window.activeTextEditor;\r\n    const folder: vscode.WorkspaceFolder = vscode.workspace.getWorkspaceFolder(editor.document.uri);\r\n    if (!folder) {\r\n        return undefined;\r\n    }\r\n    return path.join(folder.uri.fsPath, \".vscode\", \"tasks.json\");\r\n}\r\n\r\nexport function getVcpkgPathDescriptorFile(): string {\r\n    if (process.platform === 'win32') {\r\n        return path.join(process.env.LOCALAPPDATA, \"vcpkg/vcpkg.path.txt\");\r\n    } else {\r\n        return path.join(process.env.HOME, \".vcpkg/vcpkg.path.txt\");\r\n    }\r\n}\r\n\r\nlet vcpkgRoot: string;\r\nexport function getVcpkgRoot(): string {\r\n    if (!vcpkgRoot && vcpkgRoot !== \"\") {\r\n        vcpkgRoot = \"\";\r\n        // Check for vcpkg instance.\r\n        if (fs.existsSync(getVcpkgPathDescriptorFile())) {\r\n            let vcpkgRootTemp: string = fs.readFileSync(getVcpkgPathDescriptorFile()).toString();\r\n            vcpkgRootTemp = vcpkgRootTemp.trim();\r\n            if (fs.existsSync(vcpkgRootTemp)) {\r\n                vcpkgRoot = path.join(vcpkgRootTemp, \"/installed\").replace(/\\\\/g, \"/\");\r\n            }\r\n        }\r\n    }\r\n    return vcpkgRoot;\r\n}\r\n\r\n/**\r\n * This is a fuzzy determination of whether a uri represents a header file.\r\n * For the purposes of this function, a header file has no extension, or an extension that begins with the letter 'h'.\r\n * @param document The document to check.\r\n */\r\nexport function isHeader(document: vscode.TextDocument): boolean {\r\n    let ext: string = path.extname(document.uri.fsPath);\r\n    return !ext || ext.startsWith(\".h\") || ext.startsWith(\".H\");\r\n}\r\n\r\n// Extension is ready if install.lock exists and debugAdapters folder exist.\r\nexport async function isExtensionReady(): Promise<boolean> {\r\n    const doesInstallLockFileExist: boolean = await checkInstallLockFile();\r\n\r\n    return doesInstallLockFileExist;\r\n}\r\n\r\nlet isExtensionNotReadyPromptDisplayed: boolean = false;\r\nexport const extensionNotReadyString: string = 'The C/C++ extension is still installing. See the output window for more information.';\r\n\r\nexport function displayExtensionNotReadyPrompt(): void {\r\n\r\n    if (!isExtensionNotReadyPromptDisplayed) {\r\n        isExtensionNotReadyPromptDisplayed = true;\r\n        showOutputChannel();\r\n\r\n        getOutputChannelLogger().showInformationMessage(extensionNotReadyString).then(\r\n            () => { isExtensionNotReadyPromptDisplayed = false; },\r\n            () => { isExtensionNotReadyPromptDisplayed = false; }\r\n        );\r\n    }\r\n}\r\n\r\n// This Progress global state tracks how far users are able to get before getting blocked.\r\n// Users start with a progress of 0 and it increases as they get further along in using the tool.\r\n// This eliminates noise/problems due to re-installs, terminated installs that don't send errors,\r\n// errors followed by workarounds that lead to success, etc.\r\nconst progressInstallSuccess: number = 100;\r\nconst progressExecutableStarted: number = 150;\r\nconst progressExecutableSuccess: number = 200;\r\nconst progressParseRootSuccess: number = 300;\r\nconst progressIntelliSenseNoSquiggles: number = 1000;\r\n// Might add more IntelliSense progress measurements later.\r\n// IntelliSense progress is separate from the install progress, because parse root can occur afterwards.\r\n\r\nlet installProgressStr: string = \"CPP.\" + packageJson.version + \".Progress\";\r\nlet intelliSenseProgressStr: string = \"CPP.\" + packageJson.version + \".IntelliSenseProgress\";\r\n\r\nexport function getProgress(): number {\r\n    return extensionContext.globalState.get<number>(installProgressStr, -1);\r\n}\r\n\r\nexport function getIntelliSenseProgress(): number {\r\n    return extensionContext.globalState.get<number>(intelliSenseProgressStr, -1);\r\n}\r\n\r\nexport function setProgress(progress: number): void {\r\n    if (getProgress() < progress) {\r\n        extensionContext.globalState.update(installProgressStr, progress);\r\n        let telemetryProperties: { [key: string]: string } = {};\r\n        let progressName: string;\r\n        switch (progress) {\r\n            case 0: progressName = \"install started\"; break;\r\n            case progressInstallSuccess: progressName = \"install succeeded\"; break;\r\n            case progressExecutableStarted: progressName = \"executable started\"; break;\r\n            case progressExecutableSuccess: progressName = \"executable succeeded\"; break;\r\n            case progressParseRootSuccess: progressName = \"parse root succeeded\"; break;\r\n        }\r\n        telemetryProperties['progress'] = progressName;\r\n        Telemetry.logDebuggerEvent(\"progress\", telemetryProperties);\r\n    }\r\n}\r\n\r\nexport function setIntelliSenseProgress(progress: number): void {\r\n    if (getIntelliSenseProgress() < progress) {\r\n        extensionContext.globalState.update(intelliSenseProgressStr, progress);\r\n        let telemetryProperties: { [key: string]: string } = {};\r\n        let progressName: string;\r\n        switch (progress) {\r\n            case progressIntelliSenseNoSquiggles: progressName = \"IntelliSense no squiggles\"; break;\r\n        }\r\n        telemetryProperties['progress'] = progressName;\r\n        Telemetry.logDebuggerEvent(\"progress\", telemetryProperties);\r\n    }\r\n}\r\n\r\nexport function getProgressInstallSuccess(): number { return progressInstallSuccess; } // Download/install was successful (i.e. not blocked by component acquisition).\r\nexport function getProgressExecutableStarted(): number { return progressExecutableStarted; } // The extension was activated and starting the executable was attempted.\r\nexport function getProgressExecutableSuccess(): number { return progressExecutableSuccess; } // Starting the exe was successful (i.e. not blocked by 32-bit or glibc < 2.18 on Linux)\r\nexport function getProgressParseRootSuccess(): number { return progressParseRootSuccess; } // Parse root was successful (i.e. not blocked by processing taking too long).\r\nexport function getProgressIntelliSenseNoSquiggles(): number { return progressIntelliSenseNoSquiggles; } // IntelliSense was successful and the user got no squiggles.\r\n\r\nlet releaseNotesPanel: vscode.WebviewPanel = undefined;\r\n\r\nexport async function showReleaseNotes(): Promise<void> {\r\n    if (releaseNotesPanel) {\r\n        releaseNotesPanel.reveal();\r\n    } else {\r\n        releaseNotesPanel = vscode.window.createWebviewPanel('releaseNotes', \"C/C++ Extension Release Notes\", vscode.ViewColumn.One);\r\n        releaseNotesPanel.webview.html = await readFileText(getExtensionFilePath(\"ReleaseNotes.html\"));\r\n        releaseNotesPanel.onDidDispose(() => releaseNotesPanel = undefined, null, extensionContext.subscriptions);\r\n    }\r\n}\r\n\r\nexport function isUri(input: any): input is vscode.Uri {\r\n    return input && input instanceof vscode.Uri;\r\n}\r\n\r\nexport function isString(input: any): input is string {\r\n    return typeof(input) === \"string\";\r\n}\r\n\r\nexport function isNumber(input: any): input is number {\r\n    return typeof(input) === \"number\";\r\n}\r\n\r\nexport function isBoolean(input: any): input is boolean {\r\n    return typeof(input) === \"boolean\";\r\n}\r\n\r\nexport function isArray(input: any): input is any[] {\r\n    return input instanceof Array;\r\n}\r\n\r\nexport function isOptionalString(input: any): input is string|undefined {\r\n    return input === undefined || isString(input);\r\n}\r\n\r\nexport function isArrayOfString(input: any): input is string[] {\r\n    return isArray(input) && input.every(item => isString(item));\r\n}\r\n\r\nexport function isOptionalArrayOfString(input: any): input is string[]|undefined {\r\n    return input === undefined || isArrayOfString(input);\r\n}\r\n\r\nexport function resolveVariables(input: string, additionalEnvironment: {[key: string]: string | string[]}): string {\r\n    if (!input) {\r\n        return \"\";\r\n    }\r\n    if (!additionalEnvironment) {\r\n        additionalEnvironment = {};\r\n    }\r\n\r\n    // Replace environment and configuration variables.\r\n    let regexp: () => RegExp = () => /\\$\\{((env|config|workspaceFolder)(\\.|:))?(.*?)\\}/g;\r\n    let ret: string = input;\r\n    let cycleCache: Set<string> = new Set();\r\n    while (!cycleCache.has(ret)) {\r\n        cycleCache.add(ret);\r\n        ret = ret.replace(regexp(), (match: string, ignored1: string, varType: string, ignored2: string, name: string) => {\r\n            // Historically, if the variable didn't have anything before the \".\" or \":\"\r\n            // it was assumed to be an environment variable\r\n            if (varType === undefined) {\r\n                varType = \"env\";\r\n            }\r\n            let newValue: string;\r\n            switch (varType) {\r\n                case \"env\": {\r\n                    let v: string | string[] = additionalEnvironment[name];\r\n                    if (isString(v)) {\r\n                        newValue = v;\r\n                    } else if (input === match && isArrayOfString(v)) {\r\n                        newValue = v.join(\";\");\r\n                    }\r\n                    if (!isString(newValue)) {\r\n                        newValue = process.env[name];\r\n                    }\r\n                    break;\r\n                }\r\n                case \"config\": {\r\n                    let config: vscode.WorkspaceConfiguration = vscode.workspace.getConfiguration();\r\n                    if (config) {\r\n                        newValue = config.get<string>(name);\r\n                    }\r\n                    break;\r\n                }\r\n                case \"workspaceFolder\": {\r\n                    // Only replace ${workspaceFolder:name} variables for now.\r\n                    // We may consider doing replacement of ${workspaceFolder} here later, but we would have to update the language server and also\r\n                    // intercept messages with paths in them and add the ${workspaceFolder} variable back in (e.g. for light bulb suggestions)\r\n                    if (name && vscode.workspace && vscode.workspace.workspaceFolders) {\r\n                        let folder: vscode.WorkspaceFolder = vscode.workspace.workspaceFolders.find(folder => folder.name.toLocaleLowerCase() === name.toLocaleLowerCase());\r\n                        if (folder) {\r\n                            newValue = folder.uri.fsPath;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                default: { assert.fail(\"unknown varType matched\"); }\r\n            }\r\n            return (isString(newValue)) ? newValue : match;\r\n        });\r\n    }\r\n\r\n    // Resolve '~' at the start of the path.\r\n    regexp = () => /^\\~/g;\r\n    ret = ret.replace(regexp(), (match: string, name: string) => {\r\n        let newValue: string = (process.platform === 'win32') ? process.env.USERPROFILE : process.env.HOME;\r\n        return (newValue) ? newValue : match;\r\n    });\r\n\r\n    return ret;\r\n}\r\n\r\nexport function asFolder(uri: vscode.Uri): string {\r\n    let result: string = uri.toString();\r\n    if (result.charAt(result.length - 1) !== '/') {\r\n        result += '/';\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * get the default open command for the current platform\r\n */\r\nexport function getOpenCommand(): string {\r\n    if (os.platform() === 'win32') {\r\n        return 'explorer';\r\n    } else if (os.platform() === 'darwin') {\r\n        return '/usr/bin/open';\r\n    } else {\r\n        return '/usr/bin/xdg-open';\r\n    }\r\n}\r\n\r\nexport function getDebugAdaptersPath(file: string): string {\r\n    return path.resolve(getExtensionFilePath(\"debugAdapters\"), file);\r\n}\r\n\r\nexport function getHttpsProxyAgent(): HttpsProxyAgent {\r\n    let proxy: string = vscode.workspace.getConfiguration().get<string>('http.proxy');\r\n    if (!proxy) {\r\n        proxy = process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy;\r\n        if (!proxy) {\r\n            return null; // No proxy\r\n        }\r\n    }\r\n\r\n    // Basic sanity checking on proxy url\r\n    let proxyUrl: any = url.parse(proxy);\r\n    if (proxyUrl.protocol !== \"https:\" && proxyUrl.protocol !== \"http:\") {\r\n        return null;\r\n    }\r\n\r\n    let strictProxy: any = vscode.workspace.getConfiguration().get(\"http.proxyStrictSSL\", true);\r\n    let proxyOptions: any = {\r\n        host: proxyUrl.hostname,\r\n        port: parseInt(proxyUrl.port, 10),\r\n        auth: proxyUrl.auth,\r\n        rejectUnauthorized: strictProxy\r\n    };\r\n\r\n    return new HttpsProxyAgent(proxyOptions);\r\n}\r\n\r\n/** Creates a file if it doesn't exist */\r\nfunction touchFile(file: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        fs.writeFile(file, \"\", (err) => {\r\n            if (err) {\r\n                reject(err);\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    });\r\n}\r\n\r\nexport function touchInstallLockFile(): Promise<void> {\r\n    return touchFile(getInstallLockPath());\r\n}\r\n\r\nexport function touchExtensionFolder(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        fs.utimes(path.resolve(extensionContext.extensionPath, \"..\"), new Date(Date.now()), new Date(Date.now()), (err) => {\r\n            if (err) {\r\n                reject(err);\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    });\r\n}\r\n\r\n/** Test whether a file exists */\r\nexport function checkFileExists(filePath: string): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n        fs.stat(filePath, (err, stats) => {\r\n            if (stats && stats.isFile()) {\r\n                resolve(true);\r\n            } else {\r\n                resolve(false);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/** Test whether a directory exists */\r\nexport function checkDirectoryExists(dirPath: string): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n        fs.stat(dirPath, (err, stats) => {\r\n            if (stats && stats.isDirectory()) {\r\n                resolve(true);\r\n            } else {\r\n                resolve(false);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport function checkFileExistsSync(filePath: string): boolean {\r\n    try {\r\n        return fs.statSync(filePath).isFile();\r\n    } catch (e) {\r\n    }\r\n    return false;\r\n}\r\n\r\n/** Test whether a directory exists */\r\nexport function checkDirectoryExistsSync(dirPath: string): boolean {\r\n    try {\r\n        return fs.statSync(dirPath).isDirectory();\r\n    } catch (e) {\r\n    }\r\n    return false;\r\n}\r\n\r\n/** Read the files in a directory */\r\nexport function readDir(dirPath: string): Promise<string[]> {\r\n    return new Promise((resolve) => {\r\n        fs.readdir(dirPath, (err, list) => {\r\n            resolve(list);\r\n            });\r\n        });\r\n}\r\n\r\n/** Test whether the lock file exists.*/\r\nexport function checkInstallLockFile(): Promise<boolean> {\r\n    return checkFileExists(getInstallLockPath());\r\n}\r\n\r\n/** Reads the content of a text file */\r\nexport function readFileText(filePath: string, encoding: string = \"utf8\"): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n        fs.readFile(filePath, encoding, (err, data) => {\r\n            if (err) {\r\n                reject(err);\r\n            } else {\r\n                resolve(data);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/** Writes content to a text file */\r\nexport function writeFileText(filePath: string, content: string, encoding: string = \"utf8\"): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        fs.writeFile(filePath, content, { encoding }, (err) => {\r\n            if (err) {\r\n                reject(err);\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport function deleteFile(filePath: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        if (fs.existsSync(filePath)) {\r\n            fs.unlink(filePath, (err) => {\r\n                if (err) {\r\n                    reject(err);\r\n                } else {\r\n                    resolve();\r\n                }\r\n            });\r\n        } else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\n\r\n// Get the path of the lock file. This is used to indicate that the platform-specific dependencies have been downloaded.\r\nexport function getInstallLockPath(): string {\r\n    return getExtensionFilePath(\"install.lock\");\r\n}\r\n\r\nexport function getReadmeMessage(): string {\r\n    const readmePath: string = getExtensionFilePath(\"README.md\");\r\n    const readmeMessage: string = `Please refer to ${readmePath} for troubleshooting information. Issues can be created at https://github.com/Microsoft/vscode-cpptools/issues`;\r\n    return readmeMessage;\r\n}\r\n\r\n/** Used for diagnostics only */\r\nexport function logToFile(message: string): void {\r\n    const logFolder: string = getExtensionFilePath(\"extension.log\");\r\n    fs.writeFileSync(logFolder, `${message}${os.EOL}`, { flag: 'a' });\r\n}\r\n\r\nexport function execChildProcess(process: string, workingDirectory: string, channel?: vscode.OutputChannel): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n        child_process.exec(process, { cwd: workingDirectory, maxBuffer: 500 * 1024 }, (error: Error, stdout: string, stderr: string) => {\r\n            if (channel) {\r\n                let message: string = \"\";\r\n                let err: Boolean = false;\r\n                if (stdout && stdout.length > 0) {\r\n                    message += stdout;\r\n                }\r\n\r\n                if (stderr && stderr.length > 0) {\r\n                    message += stderr;\r\n                    err = true;\r\n                }\r\n\r\n                if (error) {\r\n                    message += error.message;\r\n                    err = true;\r\n                }\r\n\r\n                if (err) {\r\n                    channel.append(message);\r\n                    channel.show();\r\n                }\r\n            }\r\n\r\n            if (error) {\r\n                reject(error);\r\n                return;\r\n            }\r\n\r\n            if (stderr && stderr.length > 0) {\r\n                reject(new Error(stderr));\r\n                return;\r\n            }\r\n\r\n            resolve(stdout);\r\n        });\r\n    });\r\n}\r\n\r\nexport function spawnChildProcess(process: string, args: string[], workingDirectory: string,\r\n    dataCallback: (stdout: string) => void, errorCallback: (stderr: string) => void): Promise<void> {\r\n\r\n    return new Promise<void>(function (resolve, reject): void {\r\n        const child: child_process.ChildProcess = child_process.spawn(process, args, { cwd: workingDirectory });\r\n\r\n        child.stdout.on('data', (data) => {\r\n            dataCallback(`${data}`);\r\n        });\r\n\r\n        child.stderr.on('data', (data) => {\r\n            errorCallback(`${data}`);\r\n        });\r\n\r\n        child.on('exit', (code: number) => {\r\n            if (code !== 0) {\r\n                reject(new Error(`${process} exited with error code ${code}`));\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport function allowExecution(file: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        if (process.platform !== 'win32') {\r\n            checkFileExists(file).then((exists: boolean) => {\r\n                if (exists) {\r\n                    fs.chmod(file, '755', (err: NodeJS.ErrnoException) => {\r\n                        if (err) {\r\n                            reject(err);\r\n                            return;\r\n                        }\r\n                        resolve();\r\n                    });\r\n                } else {\r\n                    getOutputChannelLogger().appendLine(\"\");\r\n                    getOutputChannelLogger().appendLine(`Warning: Expected file ${file} is missing.`);\r\n                    resolve();\r\n                }\r\n            });\r\n        } else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\n\r\nexport function removePotentialPII(str: string): string {\r\n    let words: string[] = str.split(\" \");\r\n    let result: string = \"\";\r\n    for (let word of words) {\r\n        if (word.indexOf(\".\") === -1 && word.indexOf(\"/\") === -1 && word.indexOf(\"\\\\\") === -1 && word.indexOf(\":\") === -1) {\r\n            result += word + \" \";\r\n        } else {\r\n            result += \"? \";\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function checkDistro(platformInfo: PlatformInformation): void {\r\n    if (platformInfo.platform !== 'win32' && platformInfo.platform !== 'linux' && platformInfo.platform !== 'darwin') {\r\n        // this should never happen because VSCode doesn't run on FreeBSD\r\n        // or SunOS (the other platforms supported by node)\r\n        getOutputChannelLogger().appendLine(`Warning: Debugging has not been tested for this platform. ${getReadmeMessage()}`);\r\n    }\r\n}\r\n\r\nexport async function unlinkPromise(fileName: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        fs.unlink(fileName, err => {\r\n            if (err) {\r\n                return reject(err);\r\n            }\r\n            return resolve();\r\n        });\r\n    });\r\n}\r\n\r\nexport async function renamePromise(oldName: string, newName: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        fs.rename(oldName, newName, err => {\r\n            if (err) {\r\n                return reject(err);\r\n            }\r\n            return resolve();\r\n        });\r\n    });\r\n}\r\n\r\nexport function promptForReloadWindowDueToSettingsChange(): void {\r\n    promptReloadWindow(\"Reload the workspace for the settings change to take effect.\");\r\n}\r\n\r\nexport function promptReloadWindow(message: string): void {\r\n    let reload: string = \"Reload\";\r\n    vscode.window.showInformationMessage(message, reload).then((value: string) => {\r\n        if (value === reload) {\r\n            vscode.commands.executeCommand(\"workbench.action.reloadWindow\");\r\n        }\r\n    });\r\n}\r\n\r\nexport function downloadFileToDestination(urlStr: string, destinationPath: string, headers?: OutgoingHttpHeaders): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        let parsedUrl: url.Url = url.parse(urlStr);\r\n        let request: ClientRequest = https.request({\r\n            host: parsedUrl.host,\r\n            path: parsedUrl.path,\r\n            agent: getHttpsProxyAgent(),\r\n            rejectUnauthorized: vscode.workspace.getConfiguration().get('http.proxyStrictSSL', true),\r\n            headers: headers\r\n        }, (response) => {\r\n            if (response.statusCode === 301 || response.statusCode === 302) { // If redirected\r\n                // Download from new location\r\n                let redirectUrl: string;\r\n                if (typeof response.headers.location === 'string') {\r\n                    redirectUrl = response.headers.location;\r\n                } else {\r\n                    redirectUrl = response.headers.location[0];\r\n                }\r\n                return resolve(downloadFileToDestination(redirectUrl, destinationPath, headers));\r\n            }\r\n            if (response.statusCode !== 200) { // If request is not successful\r\n                return reject();\r\n            }\r\n            // Write file using downloaded data\r\n            let createdFile: fs.WriteStream = fs.createWriteStream(destinationPath);\r\n            createdFile.on('finish', () => { resolve(); });\r\n            response.on('error', (error) => { reject(error); });\r\n            response.pipe(createdFile);\r\n        });\r\n        request.on('error', (error) => { reject(error); });\r\n        request.end();\r\n    });\r\n}\r\n\r\nexport function downloadFileToStr(urlStr: string, headers?: OutgoingHttpHeaders): Promise<any> {\r\n    return new Promise<string>((resolve, reject) => {\r\n        let parsedUrl: url.Url = url.parse(urlStr);\r\n        let request: ClientRequest = https.request({\r\n            host: parsedUrl.host,\r\n            path: parsedUrl.path,\r\n            agent: getHttpsProxyAgent(),\r\n            rejectUnauthorized: vscode.workspace.getConfiguration().get('http.proxyStrictSSL', true),\r\n            headers: headers\r\n        }, (response) => {\r\n            if (response.statusCode === 301 || response.statusCode === 302) { // If redirected\r\n                // Download from new location\r\n                let redirectUrl: string;\r\n                if (typeof response.headers.location === 'string') {\r\n                    redirectUrl = response.headers.location;\r\n                } else {\r\n                    redirectUrl = response.headers.location[0];\r\n                }\r\n                return resolve(downloadFileToStr(redirectUrl, headers));\r\n            }\r\n            if (response.statusCode !== 200) { // If request is not successful\r\n                return reject();\r\n            }\r\n            let downloadedData: string = '';\r\n            response.on('data', (data) => { downloadedData += data; });\r\n            response.on('error', (error) => { reject(error); });\r\n            response.on('end', () => { resolve(downloadedData); });\r\n        });\r\n        request.on('error', (error) => { reject(error); });\r\n        request.end();\r\n    });\r\n}\r\n\r\nexport interface CompilerPathAndArgs {\r\n    compilerPath: string;\r\n    additionalArgs: string[];\r\n}\r\n\r\nexport function extractCompilerPathAndArgs(inputCompilerPath: string): CompilerPathAndArgs {\r\n    let compilerPath: string = inputCompilerPath;\r\n    let additionalArgs: string[];\r\n    let isWindows: boolean = os.platform() === 'win32';\r\n    if (compilerPath) {\r\n        compilerPath = compilerPath.trim();\r\n        if (compilerPath.startsWith(\"\\\"\")) {\r\n            let endQuote: number = compilerPath.substr(1).search(\"\\\"\") + 1;\r\n            if (endQuote !== -1) {\r\n                additionalArgs = compilerPath.substr(endQuote + 1).split(\" \");\r\n                additionalArgs = additionalArgs.filter((arg: string) => { return arg.trim().length !== 0; }); // Remove empty args.\r\n                compilerPath = compilerPath.substr(1, endQuote - 1);\r\n            }\r\n        } else {\r\n            // Go from right to left checking if a valid path is to the left of a space.\r\n            let spaceStart: number = compilerPath.lastIndexOf(\" \");\r\n            if (spaceStart !== -1 && (!isWindows || !compilerPath.endsWith(\"cl.exe\")) && !checkFileExistsSync(compilerPath)) {\r\n                let potentialCompilerPath: string = compilerPath.substr(0, spaceStart);\r\n                while ((!isWindows || !potentialCompilerPath.endsWith(\"cl.exe\")) && !checkFileExistsSync(potentialCompilerPath)) {\r\n                    spaceStart = potentialCompilerPath.lastIndexOf(\" \");\r\n                    if (spaceStart === -1) {\r\n                        // Reached the start without finding a valid path. Use the original value.\r\n                        potentialCompilerPath = compilerPath;\r\n                        break;\r\n                    }\r\n                    potentialCompilerPath = potentialCompilerPath.substr(0, spaceStart);\r\n                }\r\n                if (compilerPath !== potentialCompilerPath) {\r\n                    // Found a valid compilerPath and args.\r\n                    additionalArgs = compilerPath.substr(spaceStart + 1).split(\" \");\r\n                    additionalArgs = additionalArgs.filter((arg: string) => { return arg.trim().length !== 0; }); // Remove empty args.\r\n                    compilerPath = potentialCompilerPath;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return { compilerPath, additionalArgs };\r\n}","\"use strict\";\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar patchRequire_1 = require(\"./patchRequire\");\r\nvar patchRequire_2 = require(\"./patchRequire\");\r\nexports.makePatchingRequire = patchRequire_2.makePatchingRequire;\r\nvar trueFilter = function (publishing) { return true; };\r\nvar ContextPreservingEventEmitter = (function () {\r\n    function ContextPreservingEventEmitter() {\r\n        this.version = require(\"./../../package.json\").version; // Allow for future versions to replace things?\r\n        this.subscribers = {};\r\n        this.contextPreservationFunction = function (cb) { return cb; };\r\n        this.knownPatches = {};\r\n        this.currentlyPublishing = false;\r\n    }\r\n    ContextPreservingEventEmitter.prototype.shouldPublish = function (name) {\r\n        var listeners = this.subscribers[name];\r\n        if (listeners) {\r\n            return listeners.some(function (_a) {\r\n                var filter = _a.filter;\r\n                return !filter || filter(false);\r\n            });\r\n        }\r\n        return false;\r\n    };\r\n    ContextPreservingEventEmitter.prototype.publish = function (name, event) {\r\n        if (this.currentlyPublishing) {\r\n            return; // Avoid reentrancy\r\n        }\r\n        var listeners = this.subscribers[name];\r\n        // Note: Listeners called synchronously to preserve context\r\n        if (listeners) {\r\n            var standardEvent_1 = {\r\n                timestamp: Date.now(),\r\n                data: event,\r\n            };\r\n            this.currentlyPublishing = true;\r\n            listeners.forEach(function (_a) {\r\n                var listener = _a.listener, filter = _a.filter;\r\n                try {\r\n                    if (filter && filter(true)) {\r\n                        listener(standardEvent_1);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // Subscriber threw an error\r\n                }\r\n            });\r\n            this.currentlyPublishing = false;\r\n        }\r\n    };\r\n    ContextPreservingEventEmitter.prototype.subscribe = function (name, listener, filter) {\r\n        if (filter === void 0) { filter = trueFilter; }\r\n        if (!this.subscribers[name]) {\r\n            this.subscribers[name] = [];\r\n        }\r\n        this.subscribers[name].push({ listener: listener, filter: filter });\r\n    };\r\n    ContextPreservingEventEmitter.prototype.unsubscribe = function (name, listener, filter) {\r\n        if (filter === void 0) { filter = trueFilter; }\r\n        var listeners = this.subscribers[name];\r\n        if (listeners) {\r\n            for (var index = 0; index < listeners.length; ++index) {\r\n                if (listeners[index].listener === listener && listeners[index].filter === filter) {\r\n                    listeners.splice(index, 1);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    // Used for tests\r\n    ContextPreservingEventEmitter.prototype.reset = function () {\r\n        var _this = this;\r\n        this.subscribers = {};\r\n        this.contextPreservationFunction = function (cb) { return cb; };\r\n        // Modify the knownPatches object rather than replace, since a reference will be used in the require patcher\r\n        Object.getOwnPropertyNames(this.knownPatches).forEach(function (prop) { return delete _this.knownPatches[prop]; });\r\n    };\r\n    ContextPreservingEventEmitter.prototype.bindToContext = function (cb) {\r\n        return this.contextPreservationFunction(cb);\r\n    };\r\n    ContextPreservingEventEmitter.prototype.addContextPreservation = function (preserver) {\r\n        var previousPreservationStack = this.contextPreservationFunction;\r\n        this.contextPreservationFunction = (function (cb) { return preserver(previousPreservationStack(cb)); });\r\n    };\r\n    ContextPreservingEventEmitter.prototype.registerMonkeyPatch = function (packageName, patcher) {\r\n        if (!this.knownPatches[packageName]) {\r\n            this.knownPatches[packageName] = [];\r\n        }\r\n        this.knownPatches[packageName].push(patcher);\r\n    };\r\n    ContextPreservingEventEmitter.prototype.getPatchesObject = function () {\r\n        return this.knownPatches;\r\n    };\r\n    return ContextPreservingEventEmitter;\r\n}());\r\nif (!global.diagnosticsSource) {\r\n    global.diagnosticsSource = new ContextPreservingEventEmitter();\r\n    // TODO: should this only patch require after at least one monkey patch is registered?\r\n    /* tslint:disable-next-line:no-var-requires */\r\n    var moduleModule = require(\"module\");\r\n    // Note: We pass in the object now before any patches are registered, but the object is passed by reference\r\n    // so any updates made to the object will be visible in the patcher.\r\n    moduleModule.prototype.require = patchRequire_1.makePatchingRequire(global.diagnosticsSource.getPatchesObject());\r\n}\r\nexports.channel = global.diagnosticsSource;\r\n//# sourceMappingURL=channel.js.map","\"use strict\";\r\nvar Logging = (function () {\r\n    function Logging() {\r\n    }\r\n    Logging.info = function (message) {\r\n        var optionalParams = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            optionalParams[_i - 1] = arguments[_i];\r\n        }\r\n        if (Logging.enableDebug) {\r\n            console.info(Logging.TAG + message, optionalParams);\r\n        }\r\n    };\r\n    Logging.warn = function (message) {\r\n        var optionalParams = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            optionalParams[_i - 1] = arguments[_i];\r\n        }\r\n        if (!Logging.disableWarnings) {\r\n            console.warn(Logging.TAG + message, optionalParams);\r\n        }\r\n    };\r\n    Logging.enableDebug = false;\r\n    Logging.disableWarnings = false;\r\n    Logging.TAG = \"ApplicationInsights:\";\r\n    return Logging;\r\n}());\r\nmodule.exports = Logging;\r\n//# sourceMappingURL=Logging.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport TelemetryReporter from 'vscode-extension-telemetry';\r\nimport * as util from './common';\r\n\r\ninterface IPackageInfo {\r\n    name: string;\r\n    version: string;\r\n    aiKey: string;\r\n}\r\n\r\nlet telemetryReporter: TelemetryReporter;\r\n\r\nexport function activate(): void {\r\n    try {\r\n        telemetryReporter = createReporter();\r\n    } catch (e) {\r\n        // can't really do much about this\r\n    }\r\n}\r\n\r\nexport function deactivate(): void {\r\n    if (telemetryReporter) {\r\n        telemetryReporter.dispose();\r\n    }\r\n}\r\n\r\nexport function logDebuggerEvent(eventName: string, properties?: { [key: string]: string }): void {\r\n    const eventNamePrefix: string = \"cppdbg/VS/Diagnostics/Debugger/\";\r\n    if (telemetryReporter) {\r\n        telemetryReporter.sendTelemetryEvent(eventNamePrefix + eventName, properties);\r\n    }\r\n}\r\n\r\nexport function logLanguageServerEvent(eventName: string, properties?: { [key: string]: string }, metrics?: { [key: string]: number }): void {\r\n    const eventNamePrefix: string = \"C_Cpp/LanguageServer/\";\r\n    if (telemetryReporter) {\r\n        telemetryReporter.sendTelemetryEvent(eventNamePrefix + eventName, properties, metrics);\r\n    }\r\n}\r\n\r\nfunction createReporter(): TelemetryReporter {\r\n    let packageInfo: IPackageInfo = getPackageInfo();\r\n    if (packageInfo && packageInfo.aiKey) {\r\n        return new TelemetryReporter(packageInfo.name, packageInfo.version, packageInfo.aiKey);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction getPackageInfo(): IPackageInfo {\r\n    return {\r\n        name: util.packageJson.publisher + \".\" + util.packageJson.name,\r\n        version: util.packageJson.version,\r\n        aiKey: util.packageJson.contributes.debuggers[0].aiKey\r\n    };\r\n}\r\n","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./Constants\"));\r\n__export(require(\"./Generated\"));\r\n__export(require(\"./TelemetryTypes\"));\r\n//# sourceMappingURL=index.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nmodule.exports = Domain;\r\n//# sourceMappingURL=Domain.js.map","\"use strict\";\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar http = require(\"http\");\r\nvar https = require(\"https\");\r\nvar url = require(\"url\");\r\nvar constants = require(\"constants\");\r\nvar Logging = require(\"./Logging\");\r\nvar RequestResponseHeaders = require(\"./RequestResponseHeaders\");\r\nvar Util = (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (name, cookie) {\r\n        var value = \"\";\r\n        if (name && name.length && typeof cookie === \"string\") {\r\n            var cookieName = name + \"=\";\r\n            var cookies = cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str === \"string\") {\r\n            return str.replace(/^\\s+|\\s+$/g, \"\");\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    };\r\n    /**\r\n     * Convert an array of int32 to Base64 (no '==' at the end).\r\n     * MSB first.\r\n     */\r\n    Util.int32ArrayToBase64 = function (array) {\r\n        var toChar = function (v, i) {\r\n            return String.fromCharCode((v >> i) & 0xFF);\r\n        };\r\n        var int32AsString = function (v) {\r\n            return toChar(v, 24) + toChar(v, 16) + toChar(v, 8) + toChar(v, 0);\r\n        };\r\n        var x = array.map(int32AsString).join(\"\");\r\n        var b = Buffer.from ? Buffer.from(x, \"binary\") : new Buffer(x, \"binary\");\r\n        var s = b.toString(\"base64\");\r\n        return s.substr(0, s.indexOf(\"=\"));\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return (0x100000000 * Math.random()) | 0;\r\n    };\r\n    /**\r\n     * generate a random 32bit number (0x00000000..0xFFFFFFFF).\r\n     */\r\n    Util.randomu32 = function () {\r\n        return Util.random32() + 0x80000000;\r\n    };\r\n    /**\r\n     * generate W3C-compatible trace id\r\n     * https://github.com/w3c/distributed-tracing/blob/master/trace_context/HTTP_HEADER_FORMAT.md#trace-id\r\n     */\r\n    Util.w3cTraceId = function () {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = Util.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return obj instanceof Error;\r\n    };\r\n    Util.isPrimitive = function (input) {\r\n        var propType = typeof input;\r\n        return propType === \"string\" || propType === \"number\" || propType === \"boolean\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        var sec = ((totalms / 1000) % 60).toFixed(7).replace(/0{0,4}$/, \"\");\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        sec = sec.indexOf(\".\") < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        var daysText = days > 0 ? days + \".\" : \"\";\r\n        return daysText + hour + \":\" + min + \":\" + sec;\r\n    };\r\n    /**\r\n     * Using JSON.stringify, by default Errors do not serialize to something useful:\r\n     * Simplify a generic Node Error into a simpler map for customDimensions\r\n     * Custom errors can still implement toJSON to override this functionality\r\n     */\r\n    Util.extractError = function (err) {\r\n        // Error is often subclassed so may have code OR id properties:\r\n        // https://nodejs.org/api/errors.html#errors_error_code\r\n        var looseError = err;\r\n        return {\r\n            message: err.message,\r\n            code: looseError.code || looseError.id || \"\",\r\n        };\r\n    };\r\n    /**\r\n     * Manually call toJSON if available to pre-convert the value.\r\n     * If a primitive is returned, then the consumer of this function can skip JSON.stringify.\r\n     * This avoids double escaping of quotes for Date objects, for example.\r\n     */\r\n    Util.extractObject = function (origProperty) {\r\n        if (origProperty instanceof Error) {\r\n            return Util.extractError(origProperty);\r\n        }\r\n        if (typeof origProperty.toJSON === \"function\") {\r\n            return origProperty.toJSON();\r\n        }\r\n        return origProperty;\r\n    };\r\n    /**\r\n     * Validate that an object is of type { [key: string]: string }\r\n     */\r\n    Util.validateStringMap = function (obj) {\r\n        if (typeof obj !== \"object\") {\r\n            Logging.info(\"Invalid properties dropped from payload\");\r\n            return;\r\n        }\r\n        var map = {};\r\n        for (var field in obj) {\r\n            var property = '';\r\n            var origProperty = obj[field];\r\n            var propType = typeof origProperty;\r\n            if (Util.isPrimitive(origProperty)) {\r\n                property = origProperty.toString();\r\n            }\r\n            else if (origProperty === null || propType === \"undefined\") {\r\n                property = \"\";\r\n            }\r\n            else if (propType === \"function\") {\r\n                Logging.info(\"key: \" + field + \" was function; will not serialize\");\r\n                continue;\r\n            }\r\n            else {\r\n                var stringTarget = Util.isArray(origProperty) ? origProperty : Util.extractObject(origProperty);\r\n                try {\r\n                    if (Util.isPrimitive(stringTarget)) {\r\n                        property = stringTarget;\r\n                    }\r\n                    else {\r\n                        property = JSON.stringify(stringTarget);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    property = origProperty.constructor.name.toString() + \" (Error: \" + e.message + \")\";\r\n                    Logging.info(\"key: \" + field + \", could not be serialized\");\r\n                }\r\n            }\r\n            map[field] = property.substring(0, Util.MAX_PROPERTY_LENGTH);\r\n        }\r\n        return map;\r\n    };\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list\r\n     * and if it is safe to add correlation headers\r\n     */\r\n    Util.canIncludeCorrelationHeader = function (client, requestUrl) {\r\n        var excludedDomains = client && client.config && client.config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0 || !requestUrl) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(url.parse(requestUrl).hostname)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Util.getCorrelationContextTarget = function (response, key) {\r\n        var contextHeaders = response.headers && response.headers[RequestResponseHeaders.requestContextHeader];\r\n        if (contextHeaders) {\r\n            var keyValues = contextHeaders.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Generate request\r\n     *\r\n     * Proxify the request creation to handle proxy http\r\n     *\r\n     * @param {string} requestUrl url endpoint\r\n     * @param {Object} requestOptions Request option\r\n     * @param {Function} requestCallback callback on request\r\n     * @returns {http.ClientRequest} request object\r\n     */\r\n    Util.makeRequest = function (config, requestUrl, requestOptions, requestCallback) {\r\n        if (requestUrl && requestUrl.indexOf('//') === 0) {\r\n            requestUrl = 'https:' + requestUrl;\r\n        }\r\n        var requestUrlParsed = url.parse(requestUrl);\r\n        var options = __assign({}, requestOptions, { host: requestUrlParsed.hostname, port: requestUrlParsed.port, path: requestUrlParsed.pathname });\r\n        var proxyUrl = undefined;\r\n        if (requestUrlParsed.protocol === 'https:') {\r\n            proxyUrl = config.proxyHttpsUrl || undefined;\r\n        }\r\n        if (requestUrlParsed.protocol === 'http:') {\r\n            proxyUrl = config.proxyHttpUrl || undefined;\r\n        }\r\n        if (proxyUrl) {\r\n            if (proxyUrl.indexOf('//') === 0) {\r\n                proxyUrl = 'http:' + proxyUrl;\r\n            }\r\n            var proxyUrlParsed = url.parse(proxyUrl);\r\n            // https is not supported at the moment\r\n            if (proxyUrlParsed.protocol === 'https:') {\r\n                Logging.info(\"Proxies that use HTTPS are not supported\");\r\n                proxyUrl = undefined;\r\n            }\r\n            else {\r\n                options = __assign({}, options, { host: proxyUrlParsed.hostname, port: proxyUrlParsed.port || \"80\", path: requestUrl, headers: __assign({}, options.headers, { Host: requestUrlParsed.hostname }) });\r\n            }\r\n        }\r\n        var isHttps = requestUrlParsed.protocol === 'https:' && !proxyUrl;\r\n        if (isHttps && config.httpsAgent !== undefined) {\r\n            options.agent = config.httpsAgent;\r\n        }\r\n        else if (!isHttps && config.httpAgent !== undefined) {\r\n            options.agent = config.httpAgent;\r\n        }\r\n        else if (isHttps) {\r\n            // HTTPS without a passed in agent. Use one that enforces our TLS rules\r\n            options.agent = Util.tlsRestrictedAgent;\r\n        }\r\n        if (isHttps) {\r\n            return https.request(options, requestCallback);\r\n        }\r\n        else {\r\n            return http.request(options, requestCallback);\r\n        }\r\n    };\r\n    ;\r\n    Util.MAX_PROPERTY_LENGTH = 8192;\r\n    Util.tlsRestrictedAgent = new https.Agent({\r\n        secureOptions: constants.SSL_OP_NO_SSLv2 | constants.SSL_OP_NO_SSLv3 |\r\n            constants.SSL_OP_NO_TLSv1 | constants.SSL_OP_NO_TLSv1_1\r\n    });\r\n    return Util;\r\n}());\r\nmodule.exports = Util;\r\n//# sourceMappingURL=Util.js.map","module.exports = require(\"url\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    ;\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            console.log(\"inspect\");\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n","module.exports = require(\"child_process\");","module.exports = require(\"https\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as path from 'path';\r\nimport * as vscode from 'vscode';\r\nimport * as os from 'os';\r\nimport * as fs from 'fs';\r\nimport * as util from '../common';\r\nimport * as telemetry from '../telemetry';\r\nimport { UI, getUI } from './ui';\r\nimport { Client } from './client';\r\nimport { ClientCollection } from './clientCollection';\r\nimport { CppSettings } from './settings';\r\nimport { PersistentWorkspaceState, PersistentState } from './persistentState';\r\nimport { getLanguageConfig } from './languageConfig';\r\nimport { getCustomConfigProviders } from './customProviders';\r\nimport { PlatformInformation } from '../platform';\r\nimport { Range } from 'vscode-languageclient';\r\nimport { ChildProcess, spawn, execSync } from 'child_process';\r\nimport * as tmp from 'tmp';\r\nimport { getTargetBuildInfo, BuildInfo } from '../githubAPI';\r\nimport * as configs from './configurations';\r\nimport { PackageVersion } from '../packageVersion';\r\nimport { getTemporaryCommandRegistrarInstance } from '../commands';\r\n\r\nlet prevCrashFile: string;\r\nlet clients: ClientCollection;\r\nlet activeDocument: string;\r\nlet ui: UI;\r\nlet disposables: vscode.Disposable[] = [];\r\nlet languageConfigurations: vscode.Disposable[] = [];\r\nlet intervalTimer: NodeJS.Timer;\r\nlet insiderUpdateTimer: NodeJS.Timer;\r\nlet realActivationOccurred: boolean = false;\r\nlet tempCommands: vscode.Disposable[] = [];\r\nlet activatedPreviously: PersistentWorkspaceState<boolean>;\r\nconst insiderUpdateTimerInterval: number = 1000 * 60 * 60;\r\nlet buildInfoCache: BuildInfo | null = null;\r\nconst taskSourceStr: string = \"C/C++\";\r\nconst cppInstallVsixStr: string = 'C/C++: Install vsix -- ';\r\nlet taskProvider: vscode.Disposable;\r\n\r\n/**\r\n * activate: set up the extension for language services\r\n */\r\nexport function activate(activationEventOccurred: boolean): void {\r\n    if (realActivationOccurred) {\r\n        return; // Occurs if multiple delayed commands occur before the real commands are registered.\r\n    }\r\n\r\n    // Activate immediately if an activation event occurred in the previous workspace session.\r\n    // If onActivationEvent doesn't occur, it won't auto-activate next time.\r\n    activatedPreviously = new PersistentWorkspaceState(\"activatedPreviously\", false);\r\n    if (activatedPreviously.Value) {\r\n        activatedPreviously.Value = false;\r\n        realActivation();\r\n    }\r\n\r\n    if (tempCommands.length === 0) { // Only needs to be added once.\r\n        tempCommands.push(vscode.workspace.onDidOpenTextDocument(d => onDidOpenTextDocument(d)));\r\n    }\r\n\r\n    // Check if an activation event has already occurred.\r\n    if (activationEventOccurred) {\r\n        onActivationEvent();\r\n        return;\r\n    }\r\n\r\n    taskProvider = vscode.tasks.registerTaskProvider(taskSourceStr, {\r\n        provideTasks: () => {\r\n            return getBuildTasks();\r\n        },\r\n        resolveTask(task: vscode.Task): vscode.Task {\r\n            // Currently cannot implement because VS Code does not call this. Can implement custom output file directory when enabled.\r\n            return undefined;\r\n        }\r\n    });\r\n    vscode.tasks.onDidStartTask(event => {\r\n        if (event.execution.task.source === taskSourceStr) {\r\n            telemetry.logLanguageServerEvent('buildTaskStarted');\r\n        }\r\n    });\r\n\r\n    // handle \"workspaceContains:/.vscode/c_cpp_properties.json\" activation event.\r\n    if (vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 0) {\r\n        for (let i: number = 0; i < vscode.workspace.workspaceFolders.length; ++i) {\r\n            let config: string = path.join(vscode.workspace.workspaceFolders[i].uri.fsPath, \".vscode/c_cpp_properties.json\");\r\n            if (fs.existsSync(config)) {\r\n                onActivationEvent();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    // handle \"onLanguage:cpp\" and \"onLanguage:c\" activation events.\r\n    if (vscode.workspace.textDocuments !== undefined && vscode.workspace.textDocuments.length > 0) {\r\n        for (let i: number = 0; i < vscode.workspace.textDocuments.length; ++i) {\r\n            let document: vscode.TextDocument = vscode.workspace.textDocuments[i];\r\n            if (document.languageId === \"cpp\" || document.languageId === \"c\") {\r\n                onActivationEvent();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport interface BuildTaskDefinition extends vscode.TaskDefinition {\r\n    compilerPath: string;\r\n}\r\n\r\n/**\r\n * Generate tasks to build the current file based on the user's detected compilers, the user's compilerPath setting, and the current file's extension.\r\n */\r\nexport async function getBuildTasks(): Promise<vscode.Task[]> {\r\n    const editor: vscode.TextEditor = vscode.window.activeTextEditor;\r\n    if (!editor) {\r\n        return [];\r\n    }\r\n\r\n    const fileExt: string = path.extname(editor.document.fileName);\r\n    if (!fileExt) {\r\n        return;\r\n    }\r\n\r\n    // Don't offer tasks for header files.\r\n    const fileExtLower: string = fileExt.toLowerCase();\r\n    const isHeader: boolean = !fileExt || [\".hpp\", \".hh\", \".hxx\", \".h\", \".inl\", \"\"].some(ext => fileExtLower === ext);\r\n    if (isHeader) {\r\n        return [];\r\n    }\r\n\r\n    // Don't offer tasks if the active file's extension is not a recognized C/C++ extension.\r\n    let fileIsCpp: boolean;\r\n    let fileIsC: boolean;\r\n    if (fileExt === \".C\") { // \".C\" file extensions are both C and C++.\r\n        fileIsCpp = true;\r\n        fileIsC = true;\r\n    } else {\r\n        fileIsCpp = [\".cpp\", \".cc\", \".cxx\", \".mm\", \".ino\"].some(ext => fileExtLower === ext);\r\n        fileIsC = fileExtLower === \".c\";\r\n    }\r\n    if (!(fileIsCpp || fileIsC)) {\r\n        return [];\r\n    }\r\n\r\n    // Get a list of compilers found from the C++ side, then filter them based on the file type to get a reduced list appropriate\r\n    // for the active file, remove duplicate compiler names, then finally add the user's compilerPath setting.\r\n    let compilerPaths: string[];\r\n    const isWindows: boolean = os.platform() === 'win32';\r\n    const activeClient: Client = getActiveClient();\r\n    let userCompilerPath: string = await activeClient.getCompilerPath();\r\n    if (userCompilerPath) {\r\n        userCompilerPath = userCompilerPath.trim();\r\n        if (isWindows && userCompilerPath.startsWith(\"/\")) { // TODO: Add WSL compiler support.\r\n            userCompilerPath = null;\r\n        } else {\r\n            userCompilerPath = userCompilerPath.replace(/\\\\\\\\/g, \"\\\\\");\r\n        }\r\n    }\r\n\r\n    let knownCompilers: configs.KnownCompiler[] = await activeClient.getKnownCompilers();\r\n    if (knownCompilers) {\r\n        knownCompilers = knownCompilers.filter(info => {\r\n            return ((fileIsCpp && !info.isC) || (fileIsC && info.isC)) &&\r\n                (!isWindows || !info.path.startsWith(\"/\")); // TODO: Add WSL compiler support.\r\n        });\r\n        compilerPaths = knownCompilers.map<string>(info => { return info.path; });\r\n\r\n        let map: Map<string, string> = new Map<string, string>();\r\n        const insertOrAssignEntry: (compilerPath: string) => void = (compilerPath: string): void => {\r\n            const basename: string = path.basename(compilerPath);\r\n            //map.has(basename) ? map.basename] = compilerPath : \r\n            map.set(basename, compilerPath);\r\n        };\r\n        compilerPaths.forEach(insertOrAssignEntry);\r\n\r\n        // Ensure that the user's compilerPath setting is used by inserting/assigning last.\r\n        if (userCompilerPath) {\r\n            insertOrAssignEntry(userCompilerPath);\r\n        }\r\n\r\n        compilerPaths = [...map.values()];\r\n    } else if (userCompilerPath) {\r\n        compilerPaths = [userCompilerPath];\r\n    }\r\n\r\n    if (!compilerPaths) {\r\n        // Don't prompt a message yet until we can make a data-based decision.\r\n        telemetry.logLanguageServerEvent('noCompilerFound');\r\n        // Display a message prompting the user to install compilers if none were found.\r\n        // const dontShowAgain: string = \"Don't Show Again\";\r\n        // const learnMore: string = \"Learn More\";\r\n        // const message: string = \"No C/C++ compiler found on the system. Please install a C/C++ compiler to use the C/C++: build active file tasks.\";\r\n\r\n        // let showNoCompilerFoundMessage: PersistentState<boolean> = new PersistentState<boolean>(\"CPP.showNoCompilerFoundMessage\", true);\r\n        // if (showNoCompilerFoundMessage) {\r\n        //     vscode.window.showInformationMessage(message, learnMore, dontShowAgain).then(selection => {\r\n        //         switch (selection) {\r\n        //             case learnMore:\r\n        //                 const uri: vscode.Uri = vscode.Uri.parse(`https://go.microsoft.com/fwlink/?linkid=864631`);\r\n        //                 vscode.commands.executeCommand('vscode.open', uri);\r\n        //                 break;\r\n        //             case dontShowAgain:\r\n        //                 showNoCompilerFoundMessage.Value = false;\r\n        //                 break;\r\n        //             default:\r\n        //                 break;\r\n        //         }\r\n        //     });\r\n        // }\r\n        return [];\r\n    }\r\n\r\n    // Generate tasks.\r\n    return compilerPaths.map<vscode.Task>(compilerPath => {\r\n        // Handle compiler args in compilerPath.\r\n        let compilerPathAndArgs: util.CompilerPathAndArgs = util.extractCompilerPathAndArgs(compilerPath);\r\n        compilerPath = compilerPathAndArgs.compilerPath;\r\n        const filePath: string = path.join('${fileDirname}', '${fileBasenameNoExtension}');\r\n        const compilerPathBase: string = path.basename(compilerPath);\r\n        const taskName: string = compilerPathBase + \" build active file\";\r\n        const isCl: boolean = taskName.startsWith(\"cl.exe\");\r\n        let args: string[] = isCl ? [ '/Zi', '/EHsc', '/Fe:', filePath + '.exe', '${file}'  ] : ['-g', '${file}', '-o', filePath + (isWindows ? '.exe' : '')];\r\n        if (compilerPathAndArgs.additionalArgs) {\r\n            args = args.concat(compilerPathAndArgs.additionalArgs);\r\n        }\r\n        const cwd: string = isCl ? \"\" : path.dirname(compilerPath);\r\n        const kind: BuildTaskDefinition = {\r\n            type: 'shell',\r\n            label: taskName,\r\n            command: isCl ? compilerPathBase : compilerPath,\r\n            args: args,\r\n            options: isCl ? undefined : {\"cwd\": cwd},\r\n            compilerPath: isCl ? compilerPathBase : compilerPath\r\n        };\r\n\r\n        const command: vscode.ShellExecution = new vscode.ShellExecution(compilerPath, [...args], { cwd: cwd });\r\n        const target: vscode.WorkspaceFolder = vscode.workspace.getWorkspaceFolder(clients.ActiveClient.RootUri);\r\n        let task: vscode.Task = new vscode.Task(kind, target, taskName, taskSourceStr, command, '$gcc');\r\n        task.definition = kind; // The constructor for vscode.Task will eat the definition. Reset it by reassigning.\r\n        task.group = vscode.TaskGroup.Build;\r\n\r\n        return task;\r\n    });\r\n}\r\n\r\nfunction onDidOpenTextDocument(document: vscode.TextDocument): void {\r\n    if (document.languageId === \"c\" || document.languageId === \"cpp\") {\r\n        onActivationEvent();\r\n    }\r\n}\r\n\r\nfunction onActivationEvent(): void {\r\n    if (tempCommands.length === 0) {\r\n        return;\r\n    }\r\n\r\n    // Cancel all the temp commands that just look for activations.\r\n    tempCommands.forEach((command) => {\r\n        command.dispose();\r\n    });\r\n    tempCommands = [];\r\n    if (!realActivationOccurred) {\r\n        realActivation();\r\n    }\r\n    activatedPreviously.Value = true;\r\n}\r\n\r\nfunction realActivation(): void {\r\n    if (new CppSettings().intelliSenseEngine === \"Disabled\") {\r\n        throw new Error(\"Do not activate the extension when IntelliSense is disabled.\");\r\n    } else {\r\n        console.log(\"activating extension\");\r\n        let checkForConflictingExtensions: PersistentState<boolean> = new PersistentState<boolean>(\"CPP.\" + util.packageJson.version + \".checkForConflictingExtensions\", true);\r\n        if (checkForConflictingExtensions.Value) {\r\n            checkForConflictingExtensions.Value = false;\r\n            let clangCommandAdapterActive: boolean = vscode.extensions.all.some((extension: vscode.Extension<any>, index: number, array: vscode.Extension<any>[]): boolean => {\r\n                return extension.isActive && extension.id === \"mitaki28.vscode-clang\";\r\n            });\r\n            if (clangCommandAdapterActive) {\r\n                telemetry.logLanguageServerEvent(\"conflictingExtension\");\r\n            }\r\n        }\r\n    }\r\n\r\n    realActivationOccurred = true;\r\n    console.log(\"starting language server\");\r\n    clients = new ClientCollection();\r\n    ui = getUI();\r\n\r\n    // Check for files left open from the previous session. We won't get events for these until they gain focus,\r\n    // so we manually activate the visible file.\r\n    if (vscode.workspace.textDocuments !== undefined && vscode.workspace.textDocuments.length > 0) {\r\n        onDidChangeActiveTextEditor(vscode.window.activeTextEditor);\r\n    }\r\n\r\n    // There may have already been registered CustomConfigurationProviders.\r\n    // Request for configurations from those providers.\r\n    clients.forEach(client => {\r\n        getCustomConfigProviders().forEach(provider => client.onRegisterCustomConfigurationProvider(provider));\r\n    });\r\n\r\n    disposables.push(vscode.workspace.onDidChangeConfiguration(onDidChangeSettings));\r\n    disposables.push(vscode.workspace.onDidSaveTextDocument(onDidSaveTextDocument));\r\n    disposables.push(vscode.window.onDidChangeActiveTextEditor(onDidChangeActiveTextEditor));\r\n    disposables.push(vscode.window.onDidChangeTextEditorSelection(onDidChangeTextEditorSelection));\r\n    disposables.push(vscode.window.onDidChangeVisibleTextEditors(onDidChangeVisibleTextEditors));\r\n\r\n    updateLanguageConfigurations();\r\n\r\n    reportMacCrashes();\r\n    \r\n    const settings: CppSettings = new CppSettings(clients.ActiveClient.RootUri);\r\n    \r\n    if (settings.updateChannel === 'Default') {\r\n        suggestInsidersChannel();\r\n    } else if (settings.updateChannel === 'Insiders') {\r\n        insiderUpdateTimer = setInterval(checkAndApplyUpdate, insiderUpdateTimerInterval, settings.updateChannel);\r\n        checkAndApplyUpdate(settings.updateChannel);\r\n    }\r\n\r\n    intervalTimer = setInterval(onInterval, 2500);\r\n}\r\n\r\nexport function updateLanguageConfigurations(): void {\r\n    languageConfigurations.forEach(d => d.dispose());\r\n    languageConfigurations = [];\r\n\r\n    languageConfigurations.push(vscode.languages.setLanguageConfiguration('c', getLanguageConfig('c', clients.ActiveClient.RootUri)));\r\n    languageConfigurations.push(vscode.languages.setLanguageConfiguration('cpp', getLanguageConfig('cpp', clients.ActiveClient.RootUri)));\r\n}\r\n\r\n/*********************************************\r\n * workspace events\r\n *********************************************/\r\n\r\nfunction onDidChangeSettings(): void {\r\n    const changedActiveClientSettings: { [key: string] : string } = clients.ActiveClient.onDidChangeSettings();\r\n    clients.forEach(client => client.onDidChangeSettings());\r\n\r\n    const newUpdateChannel: string = changedActiveClientSettings['updateChannel'];\r\n    if (newUpdateChannel) {\r\n        if (newUpdateChannel === 'Default') {\r\n            clearInterval(insiderUpdateTimer);\r\n        } else if (newUpdateChannel === 'Insiders') {\r\n            insiderUpdateTimer = setInterval(checkAndApplyUpdate, insiderUpdateTimerInterval);\r\n        }\r\n        \r\n        checkAndApplyUpdate(newUpdateChannel);\r\n    }\r\n}\r\n\r\nlet saveMessageShown: boolean = false;\r\nfunction onDidSaveTextDocument(doc: vscode.TextDocument): void {\r\n    if (!vscode.window.activeTextEditor || doc !== vscode.window.activeTextEditor.document || (doc.languageId !== \"cpp\" && doc.languageId !== \"c\")) {\r\n        return;\r\n    }\r\n\r\n    if (!saveMessageShown && new CppSettings(doc.uri).clangFormatOnSave) {\r\n        saveMessageShown = true;\r\n        vscode.window.showInformationMessage(\"\\\"C_Cpp.clang_format_formatOnSave\\\" has been removed. Please use \\\"editor.formatOnSave\\\" instead.\");\r\n    }\r\n}\r\n\r\nfunction onDidChangeActiveTextEditor(editor: vscode.TextEditor): void {\r\n    /* need to notify the affected client(s) */\r\n    console.assert(clients !== undefined, \"client should be available before active editor is changed\");\r\n    if (clients === undefined) {\r\n        return;\r\n    }\r\n\r\n    let activeEditor: vscode.TextEditor = vscode.window.activeTextEditor;\r\n    if (!activeEditor || (activeEditor.document.languageId !== \"cpp\" && activeEditor.document.languageId !== \"c\")) {\r\n        activeDocument = \"\";\r\n    } else {\r\n        activeDocument = editor.document.uri.toString();\r\n        clients.activeDocumentChanged(editor.document);\r\n        clients.ActiveClient.selectionChanged(Range.create(editor.selection.start, editor.selection.end));\r\n    }\r\n    ui.activeDocumentChanged();\r\n}\r\n\r\nfunction onDidChangeTextEditorSelection(event: vscode.TextEditorSelectionChangeEvent): void {\r\n    /* need to notify the affected client(s) */\r\n    if (!event.textEditor || !vscode.window.activeTextEditor || event.textEditor.document.uri !== vscode.window.activeTextEditor.document.uri ||\r\n        (event.textEditor.document.languageId !== \"cpp\" && event.textEditor.document.languageId !== \"c\")) {\r\n        return;\r\n    }\r\n\r\n    if (activeDocument !== event.textEditor.document.uri.toString()) {\r\n        // For some strange (buggy?) reason we don't reliably get onDidChangeActiveTextEditor callbacks.\r\n        activeDocument = event.textEditor.document.uri.toString();\r\n        clients.activeDocumentChanged(event.textEditor.document);\r\n        ui.activeDocumentChanged();\r\n    }\r\n    clients.ActiveClient.selectionChanged(Range.create(event.selections[0].start, event.selections[0].end));\r\n}\r\n\r\nfunction onDidChangeVisibleTextEditors(editors: vscode.TextEditor[]): void {\r\n    clients.forEach(client => client.onDidChangeVisibleTextEditors(editors));\r\n}\r\n\r\nfunction onInterval(): void {\r\n    // TODO: do we need to pump messages to all clients? depends on what we do with the icons, I suppose.\r\n    clients.ActiveClient.onInterval();\r\n}\r\n\r\n/**\r\n * Install a VSIX package. This helper function will exist until VSCode offers a command to do so.\r\n * @param updateChannel The user's updateChannel setting.\r\n */\r\nfunction installVsix(vsixLocation: string, updateChannel: string): Promise<void> {\r\n    // Get the path to the VSCode command -- replace logic later when VSCode allows calling of\r\n    // workbench.extensions.action.installVSIX from TypeScript w/o instead popping up a file dialog\r\n    return PlatformInformation.GetPlatformInformation().then((platformInfo) => {\r\n        const vsCodeScriptPath: string = function(platformInfo): string {\r\n            if (platformInfo.platform === 'win32') {\r\n                const vsCodeBinName: string = path.basename(process.execPath);\r\n                let cmdFile: string; // Windows VS Code Insiders/Exploration breaks VS Code naming conventions\r\n                if (vsCodeBinName === 'Code - Insiders.exe') {\r\n                    cmdFile = 'code-insiders.cmd';\r\n                } else if (vsCodeBinName === 'Code - Exploration.exe') {\r\n                    cmdFile = 'code-exploration.cmd';\r\n                } else {\r\n                    cmdFile = 'code.cmd';\r\n                }\r\n                const vsCodeExeDir: string = path.dirname(process.execPath);\r\n                return path.join(vsCodeExeDir, 'bin', cmdFile);\r\n            } else if (platformInfo.platform === 'darwin') {\r\n                return path.join(process.execPath, '..', '..', '..', '..', '..',\r\n                    'Resources', 'app', 'bin', 'code');\r\n            } else {\r\n                const vsCodeBinName: string = path.basename(process.execPath);\r\n                try {\r\n                    const stdout: Buffer = execSync('which ' + vsCodeBinName);\r\n                    return stdout.toString().trim();\r\n                } catch (error) {\r\n                    return undefined;\r\n                }\r\n            }\r\n        }(platformInfo);\r\n        if (!vsCodeScriptPath) {\r\n            return Promise.reject(new Error('Failed to find VS Code script'));\r\n        }\r\n\r\n        // 1.28.0 changes the CLI for making installations\r\n        let userVersion: PackageVersion = new PackageVersion(vscode.version);\r\n        let breakingVersion: PackageVersion = new PackageVersion('1.28.0');\r\n        if (userVersion.isGreaterThan(breakingVersion, 'insider')) {\r\n            return new Promise<void>((resolve, reject) => {\r\n                let process: ChildProcess;\r\n                try {\r\n                    process = spawn(vsCodeScriptPath, ['--install-extension', vsixLocation, '--force']);\r\n                    \r\n                    // Timeout the process if no response is sent back. Ensures this Promise resolves/rejects\r\n                    const timer: NodeJS.Timer = setTimeout(() => {\r\n                        process.kill();\r\n                        reject(new Error('Failed to receive response from VS Code script process for installation within 30s.'));\r\n                    }, 30000);\r\n                    \r\n                    process.on('exit', (code: number) => {\r\n                        clearInterval(timer);\r\n                        if (code !== 0) {\r\n                            reject(new Error(`VS Code script exited with error code ${code}`));\r\n                        } else {\r\n                            resolve();\r\n                        }\r\n                    });\r\n                    if (process.pid === undefined) {\r\n                        throw new Error();\r\n                    }\r\n                } catch (error) {\r\n                    reject(new Error('Failed to launch VS Code script process for installation'));\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let process: ChildProcess;\r\n            try {\r\n                process = spawn(vsCodeScriptPath, ['--install-extension', vsixLocation]);\r\n                if (process.pid === undefined) {\r\n                    throw new Error();\r\n                }\r\n            } catch (error) {\r\n                reject(new Error('Failed to launch VS Code script process for installation'));\r\n                return;\r\n            }\r\n\r\n            // Timeout the process if no response is sent back. Ensures this Promise resolves/rejects\r\n            const timer: NodeJS.Timer = setTimeout(() => {\r\n                process.kill();\r\n                reject(new Error('Failed to receive response from VS Code script process for installation within 30s.'));\r\n            }, 30000);\r\n\r\n            // If downgrading, the VS Code CLI will prompt whether the user is sure they would like to downgrade.\r\n            // Respond to this by writing 0 to stdin (the option to override and install the VSIX package)\r\n            let sentOverride: boolean = false;\r\n            process.stdout.on('data', () => {\r\n                if (sentOverride) {\r\n                    return;\r\n                }\r\n                process.stdin.write('0\\n');\r\n                sentOverride = true;\r\n                clearInterval(timer);\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nasync function suggestInsidersChannel(): Promise<void> {\r\n    let suggestInsiders: PersistentState<boolean> = new PersistentState<boolean>(\"CPP.suggestInsiders\", true);\r\n\r\n    if (!suggestInsiders.Value) {\r\n        return;\r\n    }\r\n    let buildInfo: BuildInfo;\r\n    try {\r\n        buildInfo = await getTargetBuildInfo(\"Insiders\");\r\n    } catch (error) {\r\n        console.log(`${cppInstallVsixStr}${error.message}`);\r\n        if (error.message.indexOf('/') !== -1 || error.message.indexOf('\\\\') !== -1) {\r\n            error.message = \"Potential PII hidden\";\r\n        }\r\n        telemetry.logLanguageServerEvent('suggestInsiders', { 'error': error.message, 'success': 'false' });\r\n    }\r\n    if (!buildInfo) {\r\n        return; // No need to update.\r\n    }\r\n    const message: string = `Insiders version ${buildInfo.name} is available. Would you like to switch to the Insiders channel and install this update?`;\r\n    const yes: string = \"Yes\";\r\n    const askLater: string = \"Ask Me Later\";\r\n    const dontShowAgain: string = \"Don't Show Again\";\r\n    let selection: string = await vscode.window.showInformationMessage(message, yes, askLater, dontShowAgain);\r\n    switch (selection) {\r\n        case yes:\r\n            // Cache buildInfo.\r\n            buildInfoCache = buildInfo;\r\n            // It will call onDidChangeSettings.\r\n            vscode.workspace.getConfiguration(\"C_Cpp\").update(\"updateChannel\", \"Insiders\", vscode.ConfigurationTarget.Global);\r\n            break;\r\n        case dontShowAgain:\r\n            suggestInsiders.Value = false;\r\n            break;\r\n        case askLater:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nfunction applyUpdate(buildInfo: BuildInfo, updateChannel: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        tmp.file({postfix: '.vsix'}, async (err, vsixPath, fd, cleanupCallback) => {\r\n            if (err) {\r\n                reject(new Error('Failed to create vsix file'));\r\n                return;\r\n            }\r\n    \r\n            // Place in try/catch as the .catch call catches a rejection in downloadFileToDestination\r\n            // then the .catch call will return a resolved promise\r\n            // Thusly, the .catch call must also throw, as a return would simply return an unused promise\r\n            // instead of returning early from this function scope\r\n            let config: vscode.WorkspaceConfiguration = vscode.workspace.getConfiguration();\r\n            let originalProxySupport: string = config.inspect<string>('http.proxySupport').globalValue;\r\n            while (true) { // Might need to try again with a different http.proxySupport setting.\r\n                try {\r\n                    await util.downloadFileToDestination(buildInfo.downloadUrl, vsixPath);\r\n                } catch {\r\n                    // Try again with the proxySupport to \"off\".\r\n                    if (originalProxySupport !== config.inspect<string>('http.proxySupport').globalValue) {\r\n                        config.update('http.proxySupport', originalProxySupport, true); // Reset the http.proxySupport.\r\n                        reject(new Error('Failed to download VSIX package with proxySupport off')); // Changing the proxySupport didn't help.\r\n                        return;\r\n                    }\r\n                    if (config.get('http.proxySupport') !== \"off\" && originalProxySupport !== \"off\") {\r\n                        config.update('http.proxySupport', \"off\", true);\r\n                        continue;\r\n                    }\r\n                    reject(new Error('Failed to download VSIX package'));\r\n                    return;\r\n                }\r\n                if (originalProxySupport !== config.inspect<string>('http.proxySupport').globalValue) {\r\n                    config.update('http.proxySupport', originalProxySupport, true); // Reset the http.proxySupport.\r\n                    telemetry.logLanguageServerEvent('installVsix', { 'error': \"Success with proxySupport off\", 'success': 'true' });\r\n                }\r\n                break;\r\n            }\r\n            try {\r\n                await installVsix(vsixPath, updateChannel);\r\n            } catch (error) {\r\n                reject(error);\r\n                return;\r\n            }\r\n            clearInterval(insiderUpdateTimer);\r\n            const message: string =\r\n                `The C/C++ Extension has been updated to version ${buildInfo.name}. Please reload the window for the changes to take effect.`;\r\n            util.promptReloadWindow(message);\r\n            telemetry.logLanguageServerEvent('installVsix', { 'success': 'true' });\r\n            resolve();\r\n        });\r\n    }).catch(error => {\r\n        console.error(`${cppInstallVsixStr}${error.message}`);\r\n        if (error.message.indexOf('/') !== -1 || error.message.indexOf('\\\\') !== -1) {\r\n            error.message = \"Potential PII hidden\";\r\n        }\r\n        telemetry.logLanguageServerEvent('installVsix', { 'error': error.message, 'success': 'false' });\r\n    });\r\n}\r\n\r\n/**\r\n * Query package.json and the GitHub API to determine whether the user should update, if so then install the update.\r\n * The update can be an upgrade or downgrade depending on the the updateChannel setting.\r\n * @param updateChannel The user's updateChannel setting.\r\n */\r\nasync function checkAndApplyUpdate(updateChannel: string): Promise<void> {\r\n    // If we have buildInfo cache, we should use it.\r\n    let buildInfo: BuildInfo | null = buildInfoCache;\r\n    // clear buildInfo cache.\r\n    buildInfoCache = null;\r\n    \r\n    if (!buildInfo) {\r\n        try {\r\n            buildInfo = await getTargetBuildInfo(updateChannel);\r\n        } catch (error) {\r\n            telemetry.logLanguageServerEvent('installVsix', { 'error': error.message, 'success': 'false' });\r\n        }\r\n    }\r\n    if (!buildInfo) {\r\n        return; // No need to update.\r\n    }\r\n    await applyUpdate(buildInfo, updateChannel);\r\n}\r\n\r\n/*********************************************\r\n * registered commands\r\n *********************************************/\r\nlet commandsRegistered: boolean = false;\r\n\r\nexport function registerCommands(): void {\r\n    if (commandsRegistered) {\r\n        return;\r\n    }\r\n    commandsRegistered = true;\r\n    getTemporaryCommandRegistrarInstance().clearTempCommands();\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.Navigate', onNavigate));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.GoToDeclaration', onGoToDeclaration));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.PeekDeclaration', onPeekDeclaration));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.SwitchHeaderSource', onSwitchHeaderSource));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.ResetDatabase', onResetDatabase));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.ConfigurationSelect', onSelectConfiguration));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.ConfigurationProviderSelect', onSelectConfigurationProvider));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.ConfigurationEdit', onEditConfiguration));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.AddToIncludePath', onAddToIncludePath));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.ToggleErrorSquiggles', onToggleSquiggles));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.ToggleIncludeFallback', onToggleIncludeFallback));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.ToggleDimInactiveRegions', onToggleDimInactiveRegions));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.ShowReleaseNotes', onShowReleaseNotes));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.PauseParsing', onPauseParsing));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.ResumeParsing', onResumeParsing));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.ShowParsingCommands', onShowParsingCommands));\r\n    disposables.push(vscode.commands.registerCommand('C_Cpp.TakeSurvey', onTakeSurvey));\r\n    disposables.push(vscode.commands.registerCommand('cpptools.activeConfigName', onGetActiveConfigName));\r\n    getTemporaryCommandRegistrarInstance().executeDelayedCommands();\r\n}\r\n\r\nfunction onNavigate(): void {\r\n    onActivationEvent();\r\n    let activeEditor: vscode.TextEditor = vscode.window.activeTextEditor;\r\n    if (!activeEditor) {\r\n        return;\r\n    }\r\n\r\n    clients.ActiveClient.requestNavigationList(activeEditor.document).then((navigationList: string) => {\r\n        ui.showNavigationOptions(navigationList);\r\n    });\r\n}\r\n\r\nfunction onGoToDeclaration(): void {\r\n    onActivationEvent();\r\n    clients.ActiveClient.requestGoToDeclaration().then(() => vscode.commands.executeCommand(\"editor.action.goToDeclaration\"));\r\n}\r\n\r\nfunction onPeekDeclaration(): void {\r\n    onActivationEvent();\r\n    clients.ActiveClient.requestGoToDeclaration().then(() => vscode.commands.executeCommand(\"editor.action.previewDeclaration\"));\r\n}\r\n\r\nfunction onSwitchHeaderSource(): void {\r\n    onActivationEvent();\r\n    let activeEditor: vscode.TextEditor = vscode.window.activeTextEditor;\r\n    if (!activeEditor || !activeEditor.document) {\r\n        return;\r\n    }\r\n\r\n    if (activeEditor.document.languageId !== \"cpp\" && activeEditor.document.languageId !== \"c\") {\r\n        return;\r\n    }\r\n\r\n    let rootPath: string = clients.ActiveClient.RootPath;\r\n    let fileName: string = activeEditor.document.fileName;\r\n\r\n    if (!rootPath) {\r\n        rootPath = path.dirname(fileName); // When switching without a folder open.\r\n    }\r\n\r\n    clients.ActiveClient.requestSwitchHeaderSource(rootPath, fileName).then((targetFileName: string) => {\r\n        vscode.workspace.openTextDocument(targetFileName).then((document: vscode.TextDocument) => {\r\n            let foundEditor: boolean = false;\r\n            // If the document is already visible in another column, open it there.\r\n            vscode.window.visibleTextEditors.forEach((editor, index, array) => {\r\n                if (editor.document === document && !foundEditor) {\r\n                    foundEditor = true;\r\n                    vscode.window.showTextDocument(document, editor.viewColumn);\r\n                }\r\n            });\r\n            // TODO: Handle non-visibleTextEditor...not sure how yet.\r\n            if (!foundEditor) {\r\n                if (vscode.window.activeTextEditor !== undefined) {\r\n                    // TODO: Change to show it in a different column?\r\n                    vscode.window.showTextDocument(document, vscode.window.activeTextEditor.viewColumn);\r\n                } else {\r\n                    vscode.window.showTextDocument(document);\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Allow the user to select a workspace when multiple workspaces exist and get the corresponding Client back.\r\n * The resulting client is used to handle some command that was previously invoked.\r\n */\r\nfunction selectClient(): Thenable<Client> {\r\n    if (clients.Count === 1) {\r\n        return Promise.resolve(clients.ActiveClient);\r\n    } else {\r\n        return ui.showWorkspaces(clients.Names).then(key => {\r\n            if (key !== \"\") {\r\n                let client: Client = clients.get(key);\r\n                if (client) {\r\n                    return client;\r\n                } else {\r\n                    console.assert(\"client not found\");\r\n                }\r\n            }\r\n            return Promise.reject<Client>(\"client not found\");\r\n        });\r\n    }\r\n}\r\n\r\nfunction onResetDatabase(): void {\r\n    onActivationEvent();\r\n    /* need to notify the affected client(s) */\r\n    selectClient().then(client => client.resetDatabase(), rejected => {});\r\n}\r\n\r\nfunction onSelectConfiguration(): void {\r\n    onActivationEvent();\r\n    if (!isFolderOpen()) {\r\n        vscode.window.showInformationMessage('Open a folder first to select a configuration');\r\n    } else {\r\n        // This only applies to the active client. You cannot change the configuration for\r\n        // a client that is not active since that client's UI will not be visible.\r\n        clients.ActiveClient.handleConfigurationSelectCommand();\r\n    }\r\n}\r\n\r\nfunction onSelectConfigurationProvider(): void {\r\n    onActivationEvent();\r\n    if (!isFolderOpen()) {\r\n        vscode.window.showInformationMessage('Open a folder first to select a configuration provider');\r\n    } else {\r\n        selectClient().then(client => client.handleConfigurationProviderSelectCommand(), rejected => {});\r\n    }\r\n}\r\n\r\nfunction onEditConfiguration(): void {\r\n    onActivationEvent();\r\n    if (!isFolderOpen()) {\r\n        vscode.window.showInformationMessage('Open a folder first to edit configurations');\r\n    } else {\r\n        selectClient().then(client => client.handleConfigurationEditCommand(), rejected => {});\r\n    }\r\n}\r\n\r\nfunction onAddToIncludePath(path: string): void {\r\n    if (!isFolderOpen()) {\r\n        vscode.window.showInformationMessage('Open a folder first to add to includePath');\r\n    } else {\r\n        // This only applies to the active client. It would not make sense to add the include path\r\n        // suggestion to a different workspace.\r\n        clients.ActiveClient.handleAddToIncludePathCommand(path);\r\n    }\r\n}\r\n\r\nfunction onToggleSquiggles(): void {\r\n    onActivationEvent();\r\n    // This only applies to the active client.\r\n    let settings: CppSettings = new CppSettings(clients.ActiveClient.RootUri);\r\n    settings.toggleSetting(\"errorSquiggles\", \"Enabled\", \"Disabled\");\r\n}\r\n\r\nfunction onToggleIncludeFallback(): void {\r\n    onActivationEvent();\r\n    // This only applies to the active client.\r\n    let settings: CppSettings = new CppSettings(clients.ActiveClient.RootUri);\r\n    settings.toggleSetting(\"intelliSenseEngineFallback\", \"Enabled\", \"Disabled\");\r\n}\r\n\r\nfunction onToggleDimInactiveRegions(): void {\r\n    onActivationEvent();\r\n    // This only applies to the active client.\r\n    let settings: CppSettings = new CppSettings(clients.ActiveClient.RootUri);\r\n    settings.update<boolean>(\"dimInactiveRegions\", !settings.dimInactiveRegions);\r\n}\r\n\r\nfunction onShowReleaseNotes(): void {\r\n    onActivationEvent();\r\n    util.showReleaseNotes();\r\n}\r\n\r\nfunction onPauseParsing(): void {\r\n    onActivationEvent();\r\n    selectClient().then(client => client.pauseParsing(), rejected => {});\r\n}\r\n\r\nfunction onResumeParsing(): void {\r\n    onActivationEvent();\r\n    selectClient().then(client => client.resumeParsing(), rejected => {});\r\n}\r\n\r\nfunction onShowParsingCommands(): void {\r\n    onActivationEvent();\r\n    selectClient().then(client => client.handleShowParsingCommands(), rejected => {});\r\n}\r\n\r\nfunction onTakeSurvey(): void {\r\n    onActivationEvent();\r\n    telemetry.logLanguageServerEvent(\"onTakeSurvey\");\r\n    let uri: vscode.Uri = vscode.Uri.parse(`https://www.research.net/r/VBVV6C6?o=${os.platform()}&m=${vscode.env.machineId}`);\r\n    vscode.commands.executeCommand('vscode.open', uri);\r\n}\r\n\r\nfunction onGetActiveConfigName(): Thenable<string> {\r\n    return clients.ActiveClient.getCurrentConfigName();\r\n}\r\n\r\nfunction reportMacCrashes(): void {\r\n    if (process.platform === \"darwin\") {\r\n        prevCrashFile = \"\";\r\n        let crashFolder: string = path.resolve(process.env.HOME, \"Library/Logs/DiagnosticReports\");\r\n        fs.stat(crashFolder, (err, stats) => {\r\n            let crashObject: { [key: string]: string } = {};\r\n            if (err) {\r\n                // If the directory isn't there, we have a problem...\r\n                crashObject[\"fs.stat: err.code\"] = err.code;\r\n                telemetry.logLanguageServerEvent(\"MacCrash\", crashObject, null);\r\n                return;\r\n            }\r\n\r\n            // vscode.workspace.createFileSystemWatcher only works in workspace folders.\r\n            try {\r\n                fs.watch(crashFolder, (event, filename) => {\r\n                    if (event !== \"rename\") {\r\n                        return;\r\n                    }\r\n                    if (filename === prevCrashFile) {\r\n                        return;\r\n                    }\r\n                    prevCrashFile = filename;\r\n                    if (!filename.startsWith(\"Microsoft.VSCode.CPP.\")) {\r\n                        return;\r\n                    }\r\n                    // Wait 5 seconds to allow time for the crash log to finish being written.\r\n                    setTimeout(() => {\r\n                        fs.readFile(path.resolve(crashFolder, filename), 'utf8', (err, data) => {\r\n                            if (err) {\r\n                                // Try again?\r\n                                fs.readFile(path.resolve(crashFolder, filename), 'utf8', handleCrashFileRead);\r\n                                return;\r\n                            }\r\n                            handleCrashFileRead(err, data);\r\n                        });\r\n                    }, 5000);\r\n                });\r\n            } catch (e) {\r\n                // The file watcher limit is hit (may not be possible on Mac, but just in case).\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction logCrashTelemetry(data: string): void {\r\n    let crashObject: { [key: string]: string } = {};\r\n    crashObject[\"CrashingThreadCallStack\"] = data;\r\n    telemetry.logLanguageServerEvent(\"MacCrash\", crashObject, null);\r\n}\r\n\r\nfunction handleCrashFileRead(err: NodeJS.ErrnoException, data: string): void {\r\n    if (err) {\r\n        return logCrashTelemetry(\"readFile: \" + err.code);\r\n    }\r\n\r\n    // Extract the crashing thread's call stack.\r\n    const crashStart: string = \" Crashed:\";\r\n    let startCrash: number = data.indexOf(crashStart);\r\n    if (startCrash < 0) {\r\n        return logCrashTelemetry(\"No crash start\");\r\n    }\r\n    startCrash += crashStart.length + 1; // Skip past crashStart.\r\n    let endCrash: number = data.indexOf(\"Thread \", startCrash);\r\n    if (endCrash < 0) {\r\n        endCrash = data.length - 1; // Not expected, but just in case.\r\n    }\r\n    if (endCrash <= startCrash) {\r\n        return logCrashTelemetry(\"No crash end\");\r\n    }\r\n    data = data.substr(startCrash, endCrash - startCrash);\r\n    \r\n    // Get rid of the memory addresses (which breaks being able get a hit count for each crash call stack).\r\n    data = data.replace(/0x................ /g, \"\");\r\n    data = data.replace(/0x1........ \\+ 0/g, \"\");\r\n\r\n    // Get rid of the process names on each line and just add it to the start.\r\n    const process1: string = \"Microsoft.VSCode.CPP.IntelliSense.Msvc.darwin\\t\";\r\n    const process2: string = \"Microsoft.VSCode.CPP.Extension.darwin\\t\";\r\n    if (data.includes(process1)) {\r\n        data = data.replace(new RegExp(process1, \"g\"), \"\");\r\n        data = process1 + \"\\n\" + data;\r\n    } else if (data.includes(process2)) {\r\n        data = data.replace(new RegExp(process2, \"g\"), \"\");\r\n        data = process2 + \"\\n\" + data;\r\n    } else {\r\n        return logCrashTelemetry(\"No process\"); // Not expected, but just in case.\r\n    }\r\n\r\n    // Remove runtime lines because they can be different on different machines.\r\n    let lines: string[] = data.split(\"\\n\");\r\n    data = \"\";\r\n    lines.forEach((line: string) => {\r\n        if (!line.includes(\".dylib\") && !line.includes(\"???\")) {\r\n            line = line.replace(/^\\d+\\s+/, \"\"); // Remove <numbers><spaces> from the start of the line.\r\n            line = line.replace(/std::__1::/g, \"std::\");  // __1:: is not helpful.\r\n            data += (line + \"\\n\");\r\n        }\r\n    });\r\n    data = data.trimRight();\r\n\r\n    if (data.length > 8192) { // The API has an 8k limit.\r\n        data = data.substr(0, 8189) + \"...\";\r\n    }\r\n\r\n    logCrashTelemetry(data);\r\n}\r\n\r\nexport function deactivate(): Thenable<void> {\r\n    console.log(\"deactivating extension\");\r\n    telemetry.logLanguageServerEvent(\"LanguageServerShutdown\");\r\n    clearInterval(intervalTimer);\r\n    clearInterval(insiderUpdateTimer);\r\n    disposables.forEach(d => d.dispose());\r\n    languageConfigurations.forEach(d => d.dispose());\r\n    ui.dispose();\r\n    if (taskProvider) {\r\n        taskProvider.dispose();\r\n    }\r\n    return clients.dispose();\r\n}\r\n\r\nexport function isFolderOpen(): boolean {\r\n    return vscode.workspace.workspaceFolders !== undefined && vscode.workspace.workspaceFolders.length > 0;\r\n}\r\n\r\nexport function getClients(): ClientCollection {\r\n    if (!realActivationOccurred) {\r\n        realActivation();\r\n    }\r\n    return clients;\r\n}\r\n\r\nexport function getActiveClient(): Client {\r\n    if (!realActivationOccurred) {\r\n        realActivation();\r\n    }\r\n    return clients.ActiveClient;\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport { CustomConfigurationProvider, Version, SourceFileConfigurationItem, WorkspaceBrowseConfiguration } from 'vscode-cpptools';\r\nimport { CppSettings } from './settings';\r\n\r\n/**\r\n * An interface that is guaranteed to be backward compatible with version 0\r\n */\r\nexport interface CustomConfigurationProvider1 extends CustomConfigurationProvider {\r\n    isReady: boolean;\r\n    readonly isValid: boolean;\r\n    readonly version: Version;\r\n}\r\n\r\n/**\r\n * Wraps the incoming CustomConfigurationProvider so that we can treat all of them as if they were the same version (e.g. latest)\r\n */\r\nclass CustomProviderWrapper implements CustomConfigurationProvider1 {\r\n    private provider: CustomConfigurationProvider;\r\n    private _isReady: boolean;\r\n    private _version: Version;\r\n\r\n    constructor(provider: CustomConfigurationProvider, version: Version) {\r\n        this._isReady = version < Version.v2;\r\n        this.provider = provider;\r\n        if (provider.extensionId && version === Version.v0) {\r\n            version = Version.v1; // provider implemented the new API but is interfacing with the extension using the old API version.\r\n        }\r\n        this._version = version;\r\n    }\r\n\r\n    public get isReady(): boolean {\r\n        return this._isReady;\r\n    }\r\n\r\n    public set isReady(ready: boolean) {\r\n        this._isReady = ready;\r\n    }\r\n\r\n    public get isValid(): boolean {\r\n        let valid: boolean = !!(this.provider.name && this.provider.canProvideConfiguration && this.provider.provideConfigurations);\r\n        if (valid && this._version > Version.v0) {\r\n            valid = !!(this.provider.extensionId && this.provider.dispose);\r\n        }\r\n        if (valid && this._version > Version.v1) {\r\n            valid = !!(this.provider.canProvideBrowseConfiguration && this.provider.provideBrowseConfiguration);\r\n        }\r\n        return valid;\r\n    }\r\n\r\n    public get version(): Version {\r\n        return this._version;\r\n    }\r\n\r\n    public get name(): string {\r\n        return this.provider.name;\r\n    }\r\n\r\n    public get extensionId(): string {\r\n        return this._version === Version.v0 ? this.provider.name : this.provider.extensionId;\r\n    }\r\n\r\n    public canProvideConfiguration(uri: vscode.Uri, token?: vscode.CancellationToken): Thenable<boolean> {\r\n        return this.provider.canProvideConfiguration(uri, token);\r\n    }\r\n\r\n    public provideConfigurations(uris: vscode.Uri[], token?: vscode.CancellationToken): Thenable<SourceFileConfigurationItem[]> {\r\n        return this.provider.provideConfigurations(uris, token);\r\n    }\r\n\r\n    public canProvideBrowseConfiguration(token?: vscode.CancellationToken): Thenable<boolean> {\r\n        return this._version < Version.v2 ? Promise.resolve(false) : this.provider.canProvideBrowseConfiguration(token);\r\n    }\r\n\r\n    public provideBrowseConfiguration(token?: vscode.CancellationToken): Thenable<WorkspaceBrowseConfiguration> {\r\n        console.assert(this._version >= Version.v2);\r\n        return this._version < Version.v2 ? Promise.resolve({browsePath: []}) : this.provider.provideBrowseConfiguration(token);\r\n    }\r\n\r\n    public dispose(): void {\r\n        if (this._version !== Version.v0) {\r\n            this.provider.dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class CustomConfigurationProviderCollection {\r\n    private providers: Map<string, CustomProviderWrapper> = new Map<string, CustomProviderWrapper>();\r\n\r\n    private logProblems(provider: CustomConfigurationProvider, version: Version): void {\r\n        let missing: string[] = [];\r\n        if (!provider.name) {\r\n            missing.push(\"'name'\");\r\n        }\r\n        if (version !== Version.v0 && !provider.extensionId) {\r\n            missing.push(\"'extensionId'\");\r\n        }\r\n        if (!provider.canProvideConfiguration) {\r\n            missing.push(\"'canProvideConfiguration'\");\r\n        }\r\n        if (!provider.provideConfigurations) {\r\n            missing.push(\"'canProvideConfiguration'\");\r\n        }\r\n        if (version !== Version.v0 && !provider.dispose) {\r\n            missing.push(\"'dispose'\");\r\n        }\r\n        if (version >= Version.v2 && !provider.canProvideBrowseConfiguration) {\r\n            missing.push(\"'canProvideBrowseConfiguration'\");\r\n        }\r\n        if (version >= Version.v2 && !provider.provideBrowseConfiguration) {\r\n            missing.push(\"'provideBrowseConfiguration'\");\r\n        }\r\n        console.error(`CustomConfigurationProvider was not registered. The following properties are missing from the implementation: ${missing.join(\", \")}.`);\r\n    }\r\n\r\n    private getId(provider: string|CustomConfigurationProvider): string {\r\n        if (typeof provider === \"string\") {\r\n            return provider;\r\n        } else if (provider.extensionId) {\r\n            return provider.extensionId;\r\n        } else if (provider.name) {\r\n            return provider.name;\r\n        } else {\r\n            console.error(`invalid provider: ${provider}`);\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    public get size(): number {\r\n        return this.providers.size;\r\n    }\r\n\r\n    public add(provider: CustomConfigurationProvider, version: Version): boolean {\r\n        if (new CppSettings().intelliSenseEngine === \"Disabled\") {\r\n            console.warn(\"IntelliSense is disabled. Provider will not be registered.\");\r\n            return false;\r\n        }\r\n\r\n        let wrapper: CustomProviderWrapper = new CustomProviderWrapper(provider, version);\r\n        if (!wrapper.isValid) {\r\n            this.logProblems(provider, version);\r\n            return false;\r\n        }\r\n\r\n        let exists: boolean = this.providers.has(wrapper.extensionId);\r\n        if (exists) {\r\n            let existing: CustomProviderWrapper = this.providers.get(wrapper.extensionId);\r\n            exists = (existing.version === Version.v0 && wrapper.version === Version.v0);\r\n        }\r\n\r\n        if (!exists) {\r\n            this.providers.set(wrapper.extensionId, wrapper);\r\n        } else {\r\n            console.error(`CustomConfigurationProvider '${wrapper.extensionId}' has already been registered.`);\r\n        }\r\n        return !exists;\r\n    }\r\n\r\n    public get(provider: string|CustomConfigurationProvider): CustomConfigurationProvider1|null {\r\n        let id: string = this.getId(provider);\r\n\r\n        if (this.providers.has(id)) {\r\n            return this.providers.get(id);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public forEach(func: (provider: CustomConfigurationProvider1) => void): void {\r\n        this.providers.forEach(provider => func(provider));\r\n    }\r\n\r\n    public remove(provider: CustomConfigurationProvider): void {\r\n        let id: string = this.getId(provider);\r\n        if (this.providers.has(id)) {\r\n            this.providers.delete(id);\r\n        } else {\r\n            console.warn(`${id} is not registered`);\r\n        }\r\n    }\r\n\r\n    public checkId(providerId?: string): string {\r\n        if (!providerId) {\r\n            return providerId;\r\n        }\r\n        let found: CustomConfigurationProvider1[] = [];\r\n        let noUpdate: boolean = false;\r\n        this.forEach(provider => {\r\n            if (provider.extensionId === providerId) {\r\n                noUpdate = true;\r\n            } else if (provider.name === providerId && provider.version !== Version.v0) {\r\n                found.push(provider);\r\n            }\r\n        });\r\n        if (noUpdate) {\r\n            return providerId;\r\n        }\r\n        if (found.length === 1) {\r\n            return found[0].extensionId;\r\n        } else if (found.length > 1) {\r\n            console.warn(\"duplicate provider name found. Not upgrading.\");\r\n        }\r\n        return providerId;\r\n    }\r\n}\r\n\r\nlet providerCollection: CustomConfigurationProviderCollection = new CustomConfigurationProviderCollection();\r\n\r\nexport function getCustomConfigProviders(): CustomConfigurationProviderCollection {\r\n    return providerCollection;\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst c2p = require(\"./codeConverter\");\r\nconst p2c = require(\"./protocolConverter\");\r\nconst Is = require(\"./utils/is\");\r\nconst async_1 = require(\"./utils/async\");\r\nconst UUID = require(\"./utils/uuid\");\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nclass ConsoleLogger {\r\n    error(message) {\r\n        console.error(message);\r\n    }\r\n    warn(message) {\r\n        console.warn(message);\r\n    }\r\n    info(message) {\r\n        console.info(message);\r\n    }\r\n    log(message) {\r\n        console.log(message);\r\n    }\r\n}\r\nfunction createConnection(input, output, errorHandler, closeHandler) {\r\n    let logger = new ConsoleLogger();\r\n    let connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger);\r\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\r\n    connection.onClose(closeHandler);\r\n    let result = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(Is.string(type) ? type : type.method, handler),\r\n        sendNotification: (type, params) => connection.sendNotification(Is.string(type) ? type : type.method, params),\r\n        onNotification: (type, handler) => connection.onNotification(Is.string(type) ? type : type.method, handler),\r\n        trace: (value, tracer, sendNotificationOrTraceOptions) => {\r\n            const defaultTraceOptions = {\r\n                sendNotification: false,\r\n                traceFormat: vscode_languageserver_protocol_1.TraceFormat.Text\r\n            };\r\n            if (sendNotificationOrTraceOptions === void 0) {\r\n                connection.trace(value, tracer, defaultTraceOptions);\r\n            }\r\n            else if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\r\n            }\r\n            else {\r\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\r\n            }\r\n        },\r\n        initialize: (params) => connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params),\r\n        shutdown: () => connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined),\r\n        exit: () => connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type),\r\n        onLogMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, handler),\r\n        onShowMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, handler),\r\n        onTelemetry: (handler) => connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, handler),\r\n        didChangeConfiguration: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, params),\r\n        didChangeWatchedFiles: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, params),\r\n        didOpenTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, params),\r\n        didChangeTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params),\r\n        didCloseTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, params),\r\n        didSaveTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, params),\r\n        onDiagnostics: (handler) => connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, handler),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    return result;\r\n}\r\n/**\r\n * An action to be performed when the connection is producing errors.\r\n */\r\nvar ErrorAction;\r\n(function (ErrorAction) {\r\n    /**\r\n     * Continue running the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\r\n    /**\r\n     * Shutdown the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\r\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\r\n/**\r\n * An action to be performed when the connection to a server got closed.\r\n */\r\nvar CloseAction;\r\n(function (CloseAction) {\r\n    /**\r\n     * Don't restart the server. The connection stays closed.\r\n     */\r\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\r\n    /**\r\n     * Restart the server.\r\n     */\r\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\r\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\r\nclass DefaultErrorHandler {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.restarts = [];\r\n    }\r\n    error(_error, _message, count) {\r\n        if (count && count <= 3) {\r\n            return ErrorAction.Continue;\r\n        }\r\n        return ErrorAction.Shutdown;\r\n    }\r\n    closed() {\r\n        this.restarts.push(Date.now());\r\n        if (this.restarts.length < 5) {\r\n            return CloseAction.Restart;\r\n        }\r\n        else {\r\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\r\n            if (diff <= 3 * 60 * 1000) {\r\n                vscode_1.window.showErrorMessage(`The ${this.name} server crashed 5 times in the last 3 minutes. The server will not be restarted.`);\r\n                return CloseAction.DoNotRestart;\r\n            }\r\n            else {\r\n                this.restarts.shift();\r\n                return CloseAction.Restart;\r\n            }\r\n        }\r\n    }\r\n}\r\nvar RevealOutputChannelOn;\r\n(function (RevealOutputChannelOn) {\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\r\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\r\nvar State;\r\n(function (State) {\r\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\r\n    State[State[\"Starting\"] = 3] = \"Starting\";\r\n    State[State[\"Running\"] = 2] = \"Running\";\r\n})(State = exports.State || (exports.State = {}));\r\nvar ClientState;\r\n(function (ClientState) {\r\n    ClientState[ClientState[\"Initial\"] = 0] = \"Initial\";\r\n    ClientState[ClientState[\"Starting\"] = 1] = \"Starting\";\r\n    ClientState[ClientState[\"StartFailed\"] = 2] = \"StartFailed\";\r\n    ClientState[ClientState[\"Running\"] = 3] = \"Running\";\r\n    ClientState[ClientState[\"Stopping\"] = 4] = \"Stopping\";\r\n    ClientState[ClientState[\"Stopped\"] = 5] = \"Stopped\";\r\n})(ClientState || (ClientState = {}));\r\nconst SupporedSymbolKinds = [\r\n    vscode_languageserver_protocol_1.SymbolKind.File,\r\n    vscode_languageserver_protocol_1.SymbolKind.Module,\r\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\r\n    vscode_languageserver_protocol_1.SymbolKind.Package,\r\n    vscode_languageserver_protocol_1.SymbolKind.Class,\r\n    vscode_languageserver_protocol_1.SymbolKind.Method,\r\n    vscode_languageserver_protocol_1.SymbolKind.Property,\r\n    vscode_languageserver_protocol_1.SymbolKind.Field,\r\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\r\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\r\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\r\n    vscode_languageserver_protocol_1.SymbolKind.Function,\r\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\r\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\r\n    vscode_languageserver_protocol_1.SymbolKind.String,\r\n    vscode_languageserver_protocol_1.SymbolKind.Number,\r\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\r\n    vscode_languageserver_protocol_1.SymbolKind.Array,\r\n    vscode_languageserver_protocol_1.SymbolKind.Object,\r\n    vscode_languageserver_protocol_1.SymbolKind.Key,\r\n    vscode_languageserver_protocol_1.SymbolKind.Null,\r\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\r\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\r\n    vscode_languageserver_protocol_1.SymbolKind.Event,\r\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\r\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\r\n];\r\nconst SupportedCompletionItemKinds = [\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\r\n];\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nvar DynamicFeature;\r\n(function (DynamicFeature) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.register) && Is.func(candidate.unregister) && Is.func(candidate.dispose) && candidate.messages !== void 0;\r\n    }\r\n    DynamicFeature.is = is;\r\n})(DynamicFeature || (DynamicFeature = {}));\r\nclass DocumentNotifiactions {\r\n    constructor(_client, _event, _type, _middleware, _createParams, _selectorFilter) {\r\n        this._client = _client;\r\n        this._event = _event;\r\n        this._type = _type;\r\n        this._middleware = _middleware;\r\n        this._createParams = _createParams;\r\n        this._selectorFilter = _selectorFilter;\r\n        this._selectors = new Map();\r\n    }\r\n    static textDocumentFilter(selectors, textDocument) {\r\n        for (const selector of selectors) {\r\n            if (vscode_1.languages.match(selector, textDocument)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = this._event(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(data) {\r\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\r\n            if (this._middleware) {\r\n                this._middleware(data, (data) => this._client.sendNotification(this._type, this._createParams(data)));\r\n            }\r\n            else {\r\n                this._client.sendNotification(this._type, this._createParams(data));\r\n            }\r\n            this.notificationSent(data);\r\n        }\r\n    }\r\n    notificationSent(_data) {\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._selectors.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n}\r\nclass DidOpenTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, client.clientOptions.middleware.didOpen, (textDocument) => client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    register(message, data) {\r\n        super.register(message, data);\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let documentSelector = data.registerOptions.documentSelector;\r\n        vscode_1.workspace.textDocuments.forEach((textDocument) => {\r\n            let uri = textDocument.uri.toString();\r\n            if (this._syncedDocuments.has(uri)) {\r\n                return;\r\n            }\r\n            if (vscode_1.languages.match(documentSelector, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didOpen = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                if (middleware.didOpen) {\r\n                    middleware.didOpen(textDocument, didOpen);\r\n                }\r\n                else {\r\n                    didOpen(textDocument);\r\n                }\r\n                this._syncedDocuments.set(uri, textDocument);\r\n            }\r\n        });\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\r\n    }\r\n}\r\nclass DidCloseTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, client.clientOptions.middleware.didClose, (textDocument) => client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.delete(textDocument.uri.toString());\r\n    }\r\n    unregister(id) {\r\n        let selector = this._selectors.get(id);\r\n        // The super call removed the selector from the map\r\n        // of selectors.\r\n        super.unregister(id);\r\n        let selectors = this._selectors.values();\r\n        this._syncedDocuments.forEach((textDocument) => {\r\n            if (vscode_1.languages.match(selector, textDocument) && !this._selectorFilter(selectors, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didClose = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                this._syncedDocuments.delete(textDocument.uri.toString());\r\n                if (middleware.didClose) {\r\n                    middleware.didClose(textDocument, didClose);\r\n                }\r\n                else {\r\n                    didClose(textDocument);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DidChangeTextDocumentFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._changeData = new Map();\r\n        this._forcingDelivery = false;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== void 0 && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\r\n        }\r\n        this._changeData.set(data.id, {\r\n            documentSelector: data.registerOptions.documentSelector,\r\n            syncKind: data.registerOptions.syncKind\r\n        });\r\n    }\r\n    callback(event) {\r\n        // Text document changes are send for dirty changes as well. We don't\r\n        // have dirty / undirty events in the LSP so we ignore content changes\r\n        // with length zero.\r\n        if (event.contentChanges.length === 0) {\r\n            return;\r\n        }\r\n        for (const changeData of this._changeData.values()) {\r\n            if (vscode_1.languages.match(changeData.documentSelector, event.document)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\r\n                    let params = this._client.code2ProtocolConverter.asChangeTextDocumentParams(event);\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, () => this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params));\r\n                    }\r\n                    else {\r\n                        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\r\n                    }\r\n                }\r\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\r\n                    let didChange = (event) => {\r\n                        if (this._changeDelayer) {\r\n                            if (this._changeDelayer.uri !== event.document.uri.toString()) {\r\n                                // Use this force delivery to track boolean state. Otherwise we might call two times.\r\n                                this.forceDelivery();\r\n                                this._changeDelayer.uri = event.document.uri.toString();\r\n                            }\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            });\r\n                        }\r\n                        else {\r\n                            this._changeDelayer = {\r\n                                uri: event.document.uri.toString(),\r\n                                delayer: new async_1.Delayer(200)\r\n                            };\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            }, -1);\r\n                        }\r\n                    };\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, didChange);\r\n                    }\r\n                    else {\r\n                        didChange(event);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._changeData.delete(id);\r\n        if (this._changeData.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._changeDelayer = undefined;\r\n        this._forcingDelivery = false;\r\n        this._changeData.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    forceDelivery() {\r\n        if (this._forcingDelivery || !this._changeDelayer) {\r\n            return;\r\n        }\r\n        try {\r\n            this._forcingDelivery = true;\r\n            this._changeDelayer.delayer.forceDelivery();\r\n        }\r\n        finally {\r\n            this._forcingDelivery = false;\r\n        }\r\n    }\r\n}\r\nclass WillSaveFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, client.clientOptions.middleware.willSave, (willSaveEvent) => client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent), (selectors, willSaveEvent) => DocumentNotifiactions.textDocumentFilter(selectors, willSaveEvent.document));\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n}\r\nclass WillSaveWaitUntilFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._selectors = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSaveWaitUntil = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(event) {\r\n        if (DocumentNotifiactions.textDocumentFilter(this._selectors.values(), event.document)) {\r\n            let middleware = this._client.clientOptions.middleware;\r\n            let willSaveWaitUntil = (event) => {\r\n                return this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then((edits) => {\r\n                    let vEdits = this._client.protocol2CodeConverter.asTextEdits(edits);\r\n                    return vEdits === void 0 ? [] : vEdits;\r\n                });\r\n            };\r\n            event.waitUntil(middleware.willSaveWaitUntil\r\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\r\n                : willSaveWaitUntil(event));\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._selectors.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n}\r\nclass DidSaveTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, client.clientOptions.middleware.didSave, (textDocument) => client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, this._includeText), DocumentNotifiactions.textDocumentFilter);\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').didSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { includeText: !!textDocumentSyncOptions.save.includeText })\r\n            });\r\n        }\r\n    }\r\n    register(method, data) {\r\n        this._includeText = !!data.registerOptions.includeText;\r\n        super.register(method, data);\r\n    }\r\n}\r\nclass FileSystemWatcherFeature {\r\n    constructor(_client, _notifyFileEvent) {\r\n        this._client = _client;\r\n        this._notifyFileEvent = _notifyFileEvent;\r\n        this._watchers = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\r\n    }\r\n    initialize(_capabilities, _documentSelector) {\r\n    }\r\n    register(_method, data) {\r\n        if (!Array.isArray(data.registerOptions.watchers)) {\r\n            return;\r\n        }\r\n        let disposeables = [];\r\n        for (let watcher of data.registerOptions.watchers) {\r\n            if (!Is.string(watcher.globPattern)) {\r\n                continue;\r\n            }\r\n            let watchCreate = true, watchChange = true, watchDelete = true;\r\n            if (watcher.kind !== void 0 && watcher.kind !== null) {\r\n                watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\r\n                watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) != 0;\r\n                watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) != 0;\r\n            }\r\n            let fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(watcher.globPattern, !watchCreate, !watchChange, !watchDelete);\r\n            this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete);\r\n            disposeables.push(fileSystemWatcher);\r\n        }\r\n        this._watchers.set(data.id, disposeables);\r\n    }\r\n    registerRaw(id, fileSystemWatchers) {\r\n        let disposeables = [];\r\n        for (let fileSystemWatcher of fileSystemWatchers) {\r\n            this.hookListeners(fileSystemWatcher, true, true, true, disposeables);\r\n        }\r\n        this._watchers.set(id, disposeables);\r\n    }\r\n    hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\r\n        if (watchCreate) {\r\n            fileSystemWatcher.onDidCreate((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\r\n            }), null, listeners);\r\n        }\r\n        if (watchChange) {\r\n            fileSystemWatcher.onDidChange((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\r\n            }), null, listeners);\r\n        }\r\n        if (watchDelete) {\r\n            fileSystemWatcher.onDidDelete((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\r\n            }), null, listeners);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._watchers.get(id);\r\n        if (disposeables) {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        this._watchers.forEach((disposeables) => {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        });\r\n        this._watchers.clear();\r\n    }\r\n}\r\nclass TextDocumentFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._providers = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wrong feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let provider = this.registerLanguageProvider(data.registerOptions);\r\n        if (provider) {\r\n            this._providers.set(data.id, provider);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let provider = this._providers.get(id);\r\n        if (provider) {\r\n            provider.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._providers.forEach((value) => {\r\n            value.dispose();\r\n        });\r\n        this._providers.clear();\r\n    }\r\n}\r\nexports.TextDocumentFeature = TextDocumentFeature;\r\nclass WorkspaceFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._providers = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wron feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        let provider = this.registerLanguageProvider(data.registerOptions);\r\n        if (provider) {\r\n            this._providers.set(data.id, provider);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let provider = this._providers.get(id);\r\n        if (provider) {\r\n            provider.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._providers.forEach((value) => {\r\n            value.dispose();\r\n        });\r\n        this._providers.clear();\r\n    }\r\n}\r\nclass CompletionItemFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let completion = ensure(ensure(capabilites, 'textDocument'), 'completion');\r\n        completion.dynamicRegistration = true;\r\n        completion.contextSupport = true;\r\n        completion.completionItem = {\r\n            snippetSupport: true,\r\n            commitCharactersSupport: true,\r\n            documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\r\n            deprecatedSupport: true,\r\n            preselectSupport: true\r\n        };\r\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.completionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.completionProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let triggerCharacters = options.triggerCharacters || [];\r\n        let client = this._client;\r\n        let provideCompletionItems = (document, position, context, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then(client.protocol2CodeConverter.asCompletionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let resolveCompletionItem = (item, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item), token).then(client.protocol2CodeConverter.asCompletionItem, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, error);\r\n                return Promise.resolve(item);\r\n            });\r\n        };\r\n        let middleware = this._client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCompletionItemProvider(options.documentSelector, {\r\n            provideCompletionItems: (document, position, token, context) => {\r\n                return middleware.provideCompletionItem\r\n                    ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\r\n                    : provideCompletionItems(document, position, context, token);\r\n            },\r\n            resolveCompletionItem: options.resolveProvider\r\n                ? (item, token) => {\r\n                    return middleware.resolveCompletionItem\r\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\r\n                        : resolveCompletionItem(item, token);\r\n                }\r\n                : undefined\r\n        }, ...triggerCharacters);\r\n    }\r\n}\r\nclass HoverFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const hoverCapability = (ensure(ensure(capabilites, 'textDocument'), 'hover'));\r\n        hoverCapability.dynamicRegistration = true;\r\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.hoverProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideHover = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asHover, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerHoverProvider(options.documentSelector, {\r\n            provideHover: (document, position, token) => {\r\n                return middleware.provideHover\r\n                    ? middleware.provideHover(document, position, token, provideHover)\r\n                    : provideHover(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass SignatureHelpFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.SignatureHelpRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let config = ensure(ensure(capabilites, 'textDocument'), 'signatureHelp');\r\n        config.dynamicRegistration = true;\r\n        config.signatureInformation = { documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText] };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.signatureHelpProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.signatureHelpProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let providerSignatureHelp = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asSignatureHelp, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        let triggerCharacters = options.triggerCharacters || [];\r\n        return vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, {\r\n            provideSignatureHelp: (document, position, token) => {\r\n                return middleware.provideSignatureHelp\r\n                    ? middleware.provideSignatureHelp(document, position, token, providerSignatureHelp)\r\n                    : providerSignatureHelp(document, position, token);\r\n            }\r\n        }, ...triggerCharacters);\r\n    }\r\n}\r\nclass DefinitionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'definition').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.definitionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDefinition = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDefinitionProvider(options.documentSelector, {\r\n            provideDefinition: (document, position, token) => {\r\n                return middleware.provideDefinition\r\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\r\n                    : provideDefinition(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass ReferencesFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ReferencesRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'references').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.referencesProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let providerReferences = (document, position, options, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then(client.protocol2CodeConverter.asReferences, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerReferenceProvider(options.documentSelector, {\r\n            provideReferences: (document, position, options, token) => {\r\n                return middleware.provideReferences\r\n                    ? middleware.provideReferences(document, position, options, token, providerReferences)\r\n                    : providerReferences(document, position, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentHighlightFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentHighlightProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentHighlights = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDocumentHighlights, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentHighlightProvider(options.documentSelector, {\r\n            provideDocumentHighlights: (document, position, token) => {\r\n                return middleware.provideDocumentHighlights\r\n                    ? middleware.provideDocumentHighlights(document, position, token, provideDocumentHighlights)\r\n                    : provideDocumentHighlights(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentSymbolFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let symbolCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentSymbol');\r\n        symbolCapabilities.dynamicRegistration = true;\r\n        symbolCapabilities.symbolKind = {\r\n            valueSet: SupporedSymbolKinds\r\n        };\r\n        symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentSymbolProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentSymbols = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token).then((data) => {\r\n                if (data === null) {\r\n                    return undefined;\r\n                }\r\n                if (data.length === 0) {\r\n                    return [];\r\n                }\r\n                else {\r\n                    let element = data[0];\r\n                    if (vscode_languageserver_protocol_1.DocumentSymbol.is(element)) {\r\n                        return client.protocol2CodeConverter.asDocumentSymbols(data);\r\n                    }\r\n                    else {\r\n                        return client.protocol2CodeConverter.asSymbolInformations(data);\r\n                    }\r\n                }\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentSymbolProvider(options.documentSelector, {\r\n            provideDocumentSymbols: (document, token) => {\r\n                return middleware.provideDocumentSymbols\r\n                    ? middleware.provideDocumentSymbols(document, token, provideDocumentSymbols)\r\n                    : provideDocumentSymbols(document, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass WorkspaceSymbolFeature extends WorkspaceFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let symbolCapabilities = ensure(ensure(capabilites, 'workspace'), 'symbol');\r\n        symbolCapabilities.dynamicRegistration = true;\r\n        symbolCapabilities.symbolKind = {\r\n            valueSet: SupporedSymbolKinds\r\n        };\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.workspaceSymbolProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: undefined\r\n        });\r\n    }\r\n    registerLanguageProvider(_options) {\r\n        let client = this._client;\r\n        let provideWorkspaceSymbols = (query, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerWorkspaceSymbolProvider({\r\n            provideWorkspaceSymbols: (query, token) => {\r\n                return middleware.provideWorkspaceSymbols\r\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\r\n                    : provideWorkspaceSymbols(query, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CodeActionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeActionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const cap = ensure(ensure(capabilites, 'textDocument'), 'codeAction');\r\n        cap.dynamicRegistration = true;\r\n        cap.codeActionLiteralSupport = {\r\n            codeActionKind: {\r\n                valueSet: [\r\n                    '',\r\n                    vscode_languageserver_protocol_1.CodeActionKind.QuickFix,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.Refactor,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorExtract,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorInline,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorRewrite,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.Source,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.SourceOrganizeImports\r\n                ]\r\n            }\r\n        };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.codeActionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        let codeActionKinds = undefined;\r\n        if (!Is.boolean(capabilities.codeActionProvider)) {\r\n            codeActionKinds = capabilities.codeActionProvider.codeActionKinds;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: { documentSelector: documentSelector, codeActionKinds }\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideCodeActions = (document, range, context, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                range: client.code2ProtocolConverter.asRange(range),\r\n                context: client.code2ProtocolConverter.asCodeActionContext(context)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then((values) => {\r\n                if (values === null) {\r\n                    return undefined;\r\n                }\r\n                let result = [];\r\n                for (let item of values) {\r\n                    if (vscode_languageserver_protocol_1.Command.is(item)) {\r\n                        result.push(client.protocol2CodeConverter.asCommand(item));\r\n                    }\r\n                    else {\r\n                        result.push(client.protocol2CodeConverter.asCodeAction(item));\r\n                    }\r\n                    ;\r\n                }\r\n                return result;\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCodeActionsProvider(options.documentSelector, {\r\n            provideCodeActions: (document, range, context, token) => {\r\n                return middleware.provideCodeActions\r\n                    ? middleware.provideCodeActions(document, range, context, token, provideCodeActions)\r\n                    : provideCodeActions(document, range, context, token);\r\n            }\r\n        }, options.codeActionKinds\r\n            ? { providedCodeActionKinds: client.protocol2CodeConverter.asCodeActionKinds(options.codeActionKinds) }\r\n            : undefined);\r\n    }\r\n}\r\nclass CodeLensFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'codeLens').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.codeLensProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.codeLensProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideCodeLenses = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(client.protocol2CodeConverter.asCodeLenses, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let resolveCodeLens = (codeLens, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(client.protocol2CodeConverter.asCodeLens, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, error);\r\n                return codeLens;\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCodeLensProvider(options.documentSelector, {\r\n            provideCodeLenses: (document, token) => {\r\n                return middleware.provideCodeLenses\r\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\r\n                    : provideCodeLenses(document, token);\r\n            },\r\n            resolveCodeLens: (options.resolveProvider)\r\n                ? (codeLens, token) => {\r\n                    return middleware.resolveCodeLens\r\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\r\n                        : resolveCodeLens(codeLens, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass DocumentFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'formatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentFormattingEdits = (document, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentFormattingEditProvider(options.documentSelector, {\r\n            provideDocumentFormattingEdits: (document, options, token) => {\r\n                return middleware.provideDocumentFormattingEdits\r\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\r\n                    : provideDocumentFormattingEdits(document, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentRangeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'rangeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentRangeFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentRangeFormattingEdits = (document, range, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                range: client.code2ProtocolConverter.asRange(range),\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, {\r\n            provideDocumentRangeFormattingEdits: (document, range, options, token) => {\r\n                return middleware.provideDocumentRangeFormattingEdits\r\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\r\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentOnTypeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentOnTypeFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentOnTypeFormattingProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let moreTriggerCharacter = options.moreTriggerCharacter || [];\r\n        let provideOnTypeFormattingEdits = (document, position, ch, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n                ch: ch,\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerOnTypeFormattingEditProvider(options.documentSelector, {\r\n            provideOnTypeFormattingEdits: (document, position, ch, options, token) => {\r\n                return middleware.provideOnTypeFormattingEdits\r\n                    ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\r\n                    : provideOnTypeFormattingEdits(document, position, ch, options, token);\r\n            }\r\n        }, options.firstTriggerCharacter, ...moreTriggerCharacter);\r\n    }\r\n}\r\nclass RenameFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.RenameRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let rename = ensure(ensure(capabilites, 'textDocument'), 'rename');\r\n        rename.dynamicRegistration = true;\r\n        rename.prepareSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.renameProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        let options = Object.assign({}, { documentSelector: documentSelector });\r\n        if (Is.boolean(capabilities.renameProvider)) {\r\n            options.prepareProvider = false;\r\n        }\r\n        else {\r\n            options.prepareProvider = capabilities.renameProvider.prepareProvider;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: options\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideRenameEdits = (document, position, newName, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n                newName: newName\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then(client.protocol2CodeConverter.asWorkspaceEdit, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, error);\r\n                return Promise.reject(new Error(error.message));\r\n            });\r\n        };\r\n        let prepareRename = (document, position, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, params, token).then((result) => {\r\n                if (vscode_languageserver_protocol_1.Range.is(result)) {\r\n                    return client.protocol2CodeConverter.asRange(result);\r\n                }\r\n                else if (result && result.range) {\r\n                    return {\r\n                        range: client.protocol2CodeConverter.asRange(result.range),\r\n                        placeholder: result.placeholder\r\n                    };\r\n                }\r\n                return null;\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, error);\r\n                return Promise.reject(new Error(error.message));\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerRenameProvider(options.documentSelector, {\r\n            provideRenameEdits: (document, position, newName, token) => {\r\n                return middleware.provideRenameEdits\r\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\r\n                    : provideRenameEdits(document, position, newName, token);\r\n            },\r\n            prepareRename: options.prepareProvider\r\n                ? (document, position, token) => {\r\n                    return middleware.prepareRename\r\n                        ? middleware.prepareRename(document, position, token, prepareRename)\r\n                        : prepareRename(document, position, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass DocumentLinkFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentLinkRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentLink').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentLinkProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentLinkProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentLinks = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then(client.protocol2CodeConverter.asDocumentLinks, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, error);\r\n                Promise.resolve(new Error(error.message));\r\n            });\r\n        };\r\n        let resolveDocumentLink = (link, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then(client.protocol2CodeConverter.asDocumentLink, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, error);\r\n                Promise.resolve(new Error(error.message));\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentLinkProvider(options.documentSelector, {\r\n            provideDocumentLinks: (document, token) => {\r\n                return middleware.provideDocumentLinks\r\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\r\n                    : provideDocumentLinks(document, token);\r\n            },\r\n            resolveDocumentLink: options.resolveProvider\r\n                ? (link, token) => {\r\n                    return middleware.resolveDocumentLink\r\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\r\n                        : resolveDocumentLink(link, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\r\n    }\r\n    initialize() {\r\n        let section = this._client.clientOptions.synchronize.configurationSection;\r\n        if (section !== void 0) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: {\r\n                    section: section\r\n                }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        let disposable = vscode_1.workspace.onDidChangeConfiguration((event) => {\r\n            this.onDidChangeConfiguration(data.registerOptions.section, event);\r\n        });\r\n        this._listeners.set(data.id, disposable);\r\n        if (data.registerOptions.section !== void 0) {\r\n            this.onDidChangeConfiguration(data.registerOptions.section, undefined);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable) {\r\n            this._listeners.delete(id);\r\n            disposable.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    onDidChangeConfiguration(configurationSection, event) {\r\n        let sections;\r\n        if (Is.string(configurationSection)) {\r\n            sections = [configurationSection];\r\n        }\r\n        else {\r\n            sections = configurationSection;\r\n        }\r\n        if (sections !== void 0 && event !== void 0) {\r\n            let affected = sections.some((section) => event.affectsConfiguration(section));\r\n            if (!affected) {\r\n                return;\r\n            }\r\n        }\r\n        let didChangeConfiguration = (sections) => {\r\n            if (sections === void 0) {\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\r\n                return;\r\n            }\r\n            this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: this.extractSettingsInformation(sections) });\r\n        };\r\n        let middleware = this.getMiddleware();\r\n        middleware\r\n            ? middleware(sections, didChangeConfiguration)\r\n            : didChangeConfiguration(sections);\r\n    }\r\n    extractSettingsInformation(keys) {\r\n        function ensurePath(config, path) {\r\n            let current = config;\r\n            for (let i = 0; i < path.length - 1; i++) {\r\n                let obj = current[path[i]];\r\n                if (!obj) {\r\n                    obj = Object.create(null);\r\n                    current[path[i]] = obj;\r\n                }\r\n                current = obj;\r\n            }\r\n            return current;\r\n        }\r\n        let resource = this._client.clientOptions.workspaceFolder\r\n            ? this._client.clientOptions.workspaceFolder.uri\r\n            : undefined;\r\n        let result = Object.create(null);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let key = keys[i];\r\n            let index = key.indexOf('.');\r\n            let config = null;\r\n            if (index >= 0) {\r\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\r\n            }\r\n            else {\r\n                config = vscode_1.workspace.getConfiguration(key, resource);\r\n            }\r\n            if (config) {\r\n                let path = keys[i].split('.');\r\n                ensurePath(result, path)[path[path.length - 1]] = config;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getMiddleware() {\r\n        let middleware = this._client.clientOptions.middleware;\r\n        if (middleware.workspace && middleware.workspace.didChangeConfiguration) {\r\n            return middleware.workspace.didChangeConfiguration;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nclass ExecuteCommandFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._commands = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.executeCommandProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\r\n        });\r\n    }\r\n    register(_message, data) {\r\n        let client = this._client;\r\n        if (data.registerOptions.commands) {\r\n            let disposeables = [];\r\n            for (const command of data.registerOptions.commands) {\r\n                disposeables.push(vscode_1.commands.registerCommand(command, (...args) => {\r\n                    let params = {\r\n                        command,\r\n                        arguments: args\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, error);\r\n                    });\r\n                }));\r\n            }\r\n            this._commands.set(data.id, disposeables);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._commands.get(id);\r\n        if (disposeables) {\r\n            disposeables.forEach(disposable => disposable.dispose());\r\n        }\r\n    }\r\n    dispose() {\r\n        this._commands.forEach((value) => {\r\n            value.forEach(disposable => disposable.dispose());\r\n        });\r\n        this._commands.clear();\r\n    }\r\n}\r\nvar MessageTransports;\r\n(function (MessageTransports) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\r\n    }\r\n    MessageTransports.is = is;\r\n})(MessageTransports = exports.MessageTransports || (exports.MessageTransports = {}));\r\nclass OnReady {\r\n    constructor(_resolve, _reject) {\r\n        this._resolve = _resolve;\r\n        this._reject = _reject;\r\n        this._used = false;\r\n    }\r\n    get isUsed() {\r\n        return this._used;\r\n    }\r\n    resolve() {\r\n        this._used = true;\r\n        this._resolve();\r\n    }\r\n    reject(error) {\r\n        this._used = true;\r\n        this._reject(error);\r\n    }\r\n}\r\nclass BaseLanguageClient {\r\n    constructor(id, name, clientOptions) {\r\n        this._traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\r\n        this._features = [];\r\n        this._method2Message = new Map();\r\n        this._dynamicFeatures = new Map();\r\n        this._id = id;\r\n        this._name = name;\r\n        clientOptions = clientOptions || {};\r\n        this._clientOptions = {\r\n            documentSelector: clientOptions.documentSelector || [],\r\n            synchronize: clientOptions.synchronize || {},\r\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\r\n            outputChannelName: clientOptions.outputChannelName || this._name,\r\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error,\r\n            stdioEncoding: clientOptions.stdioEncoding || 'utf8',\r\n            initializationOptions: clientOptions.initializationOptions,\r\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\r\n            errorHandler: clientOptions.errorHandler || new DefaultErrorHandler(this._name),\r\n            middleware: clientOptions.middleware || {},\r\n            uriConverters: clientOptions.uriConverters,\r\n            workspaceFolder: clientOptions.workspaceFolder\r\n        };\r\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\r\n        this.state = ClientState.Initial;\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        this._initializeResult = undefined;\r\n        if (clientOptions.outputChannel) {\r\n            this._outputChannel = clientOptions.outputChannel;\r\n            this._disposeOutputChannel = false;\r\n        }\r\n        else {\r\n            this._outputChannel = undefined;\r\n            this._disposeOutputChannel = true;\r\n        }\r\n        this._listeners = undefined;\r\n        this._providers = undefined;\r\n        this._diagnostics = undefined;\r\n        this._fileEvents = [];\r\n        this._fileEventDelayer = new async_1.Delayer(250);\r\n        this._onReady = new Promise((resolve, reject) => {\r\n            this._onReadyCallbacks = new OnReady(resolve, reject);\r\n        });\r\n        this._onStop = undefined;\r\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._tracer = {\r\n            log: (messageOrDataObject, data) => {\r\n                if (Is.string(messageOrDataObject)) {\r\n                    this.logTrace(messageOrDataObject, data);\r\n                }\r\n                else {\r\n                    this.logObjectTrace(messageOrDataObject);\r\n                }\r\n            },\r\n        };\r\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\r\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined);\r\n        this._syncedDocuments = new Map();\r\n        this.registerBuiltinFeatures();\r\n    }\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    set state(value) {\r\n        let oldState = this.getPublicState();\r\n        this._state = value;\r\n        let newState = this.getPublicState();\r\n        if (newState !== oldState) {\r\n            this._stateChangeEmitter.fire({ oldState, newState });\r\n        }\r\n    }\r\n    getPublicState() {\r\n        if (this.state === ClientState.Running) {\r\n            return State.Running;\r\n        }\r\n        else if (this.state === ClientState.Starting) {\r\n            return State.Starting;\r\n        }\r\n        else {\r\n            return State.Stopped;\r\n        }\r\n    }\r\n    get initializeResult() {\r\n        return this._initializeResult;\r\n    }\r\n    sendRequest(type, ...params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            return this._resolvedConnection.sendRequest(type, ...params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending request ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onRequest(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onRequest(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering request handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    sendNotification(type, params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            this._resolvedConnection.sendNotification(type, params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending notification ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onNotification(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onNotification(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering notification handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    get clientOptions() {\r\n        return this._clientOptions;\r\n    }\r\n    get protocol2CodeConverter() {\r\n        return this._p2c;\r\n    }\r\n    get code2ProtocolConverter() {\r\n        return this._c2p;\r\n    }\r\n    get onTelemetry() {\r\n        return this._telemetryEmitter.event;\r\n    }\r\n    get onDidChangeState() {\r\n        return this._stateChangeEmitter.event;\r\n    }\r\n    get outputChannel() {\r\n        if (!this._outputChannel) {\r\n            this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\r\n        }\r\n        return this._outputChannel;\r\n    }\r\n    get diagnostics() {\r\n        return this._diagnostics;\r\n    }\r\n    createDefaultErrorHandler() {\r\n        return new DefaultErrorHandler(this._name);\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n        this.onReady().then(() => {\r\n            this.resolveConnection().then((connection) => {\r\n                connection.trace(this._trace, this._tracer, {\r\n                    sendNotification: false,\r\n                    traceFormat: this._traceFormat\r\n                });\r\n            });\r\n        }, () => {\r\n        });\r\n    }\r\n    data2String(data) {\r\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n            const responseError = data;\r\n            return `  Message: ${responseError.message}\\n  Code: ${responseError.code} ${responseError.data ? '\\n' + responseError.data.toString() : ''}`;\r\n        }\r\n        if (data instanceof Error) {\r\n            if (Is.string(data.stack)) {\r\n                return data.stack;\r\n            }\r\n            return data.message;\r\n        }\r\n        if (Is.string(data)) {\r\n            return data;\r\n        }\r\n        return data.toString();\r\n    }\r\n    info(message, data) {\r\n        this.outputChannel.appendLine(`[Info  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    warn(message, data) {\r\n        this.outputChannel.appendLine(`[Warn  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    error(message, data) {\r\n        this.outputChannel.appendLine(`[Error - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    logTrace(message, data) {\r\n        this.outputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n    }\r\n    logObjectTrace(data) {\r\n        if (data.isLSPMessage && data.type) {\r\n            this.outputChannel.append(`[LSP   - ${(new Date().toLocaleTimeString())}] `);\r\n        }\r\n        else {\r\n            this.outputChannel.append(`[Trace - ${(new Date().toLocaleTimeString())}] `);\r\n        }\r\n        if (data) {\r\n            this.outputChannel.appendLine(`${JSON.stringify(data)}`);\r\n        }\r\n    }\r\n    needsStart() {\r\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\r\n    }\r\n    needsStop() {\r\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\r\n    }\r\n    onReady() {\r\n        return this._onReady;\r\n    }\r\n    isConnectionActive() {\r\n        return this.state === ClientState.Running && !!this._resolvedConnection;\r\n    }\r\n    start() {\r\n        if (this._onReadyCallbacks.isUsed) {\r\n            this._onReady = new Promise((resolve, reject) => {\r\n                this._onReadyCallbacks = new OnReady(resolve, reject);\r\n            });\r\n        }\r\n        this._listeners = [];\r\n        this._providers = [];\r\n        // If we restart then the diagnostics collection is reused.\r\n        if (!this._diagnostics) {\r\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\r\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\r\n                : vscode_1.languages.createDiagnosticCollection();\r\n        }\r\n        this.state = ClientState.Starting;\r\n        this.resolveConnection().then((connection) => {\r\n            connection.onLogMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        this.error(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        this.warn(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        this.info(message.message);\r\n                        break;\r\n                    default:\r\n                        this.outputChannel.appendLine(message.message);\r\n                }\r\n            });\r\n            connection.onShowMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        vscode_1.window.showErrorMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        vscode_1.window.showWarningMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                        break;\r\n                    default:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                }\r\n            });\r\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, (params) => {\r\n                let messageFunc;\r\n                switch (params.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        messageFunc = vscode_1.window.showErrorMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        messageFunc = vscode_1.window.showWarningMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                        break;\r\n                    default:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                }\r\n                let actions = params.actions || [];\r\n                return messageFunc(params.message, ...actions);\r\n            });\r\n            connection.onTelemetry((data) => {\r\n                this._telemetryEmitter.fire(data);\r\n            });\r\n            connection.listen();\r\n            // Error is handled in the intialize call.\r\n            return this.initialize(connection);\r\n        }).then(undefined, (error) => {\r\n            this.state = ClientState.StartFailed;\r\n            this._onReadyCallbacks.reject(error);\r\n            this.error('Starting client failed', error);\r\n            vscode_1.window.showErrorMessage(`Couldn't start client ${this._name}`);\r\n        });\r\n        return new vscode_1.Disposable(() => {\r\n            if (this.needsStop()) {\r\n                this.stop();\r\n            }\r\n        });\r\n    }\r\n    resolveConnection() {\r\n        if (!this._connectionPromise) {\r\n            this._connectionPromise = this.createConnection();\r\n        }\r\n        return this._connectionPromise;\r\n    }\r\n    initialize(connection) {\r\n        this.refreshTrace(connection, false);\r\n        let initOption = this._clientOptions.initializationOptions;\r\n        let rootPath = this._clientOptions.workspaceFolder\r\n            ? this._clientOptions.workspaceFolder.uri.fsPath\r\n            : this._clientGetRootPath();\r\n        let initParams = {\r\n            processId: process.pid,\r\n            rootPath: rootPath ? rootPath : null,\r\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\r\n            capabilities: this.computeClientCapabilities(),\r\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\r\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace),\r\n            workspaceFolders: null\r\n        };\r\n        this.fillInitializeParams(initParams);\r\n        return connection.initialize(initParams).then((result) => {\r\n            this._resolvedConnection = connection;\r\n            this._initializeResult = result;\r\n            this.state = ClientState.Running;\r\n            let textDocumentSyncOptions = undefined;\r\n            if (Is.number(result.capabilities.textDocumentSync)) {\r\n                if (result.capabilities.textDocumentSync === vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n                    textDocumentSyncOptions = {\r\n                        openClose: false,\r\n                        change: vscode_languageserver_protocol_1.TextDocumentSyncKind.None,\r\n                        save: undefined\r\n                    };\r\n                }\r\n                else {\r\n                    textDocumentSyncOptions = {\r\n                        openClose: true,\r\n                        change: result.capabilities.textDocumentSync,\r\n                        save: {\r\n                            includeText: false\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            else if (result.capabilities.textDocumentSync !== void 0 && result.capabilities.textDocumentSync !== null) {\r\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\r\n            }\r\n            this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\r\n            connection.onDiagnostics(params => this.handleDiagnostics(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\r\n            connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\r\n            this.hookFileEvents(connection);\r\n            this.hookConfigurationChanged(connection);\r\n            this.initializeFeatures(connection);\r\n            this._onReadyCallbacks.resolve();\r\n            return result;\r\n        }).then(undefined, (error) => {\r\n            if (this._clientOptions.initializationFailedHandler) {\r\n                if (this._clientOptions.initializationFailedHandler(error)) {\r\n                    this.initialize(connection);\r\n                }\r\n                else {\r\n                    this.stop();\r\n                    this._onReadyCallbacks.reject(error);\r\n                }\r\n            }\r\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\r\n                vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: \"retry\" }).then(item => {\r\n                    if (item && item.id === 'retry') {\r\n                        this.initialize(connection);\r\n                    }\r\n                    else {\r\n                        this.stop();\r\n                        this._onReadyCallbacks.reject(error);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (error && error.message) {\r\n                    vscode_1.window.showErrorMessage(error.message);\r\n                }\r\n                this.error('Server initialization failed.', error);\r\n                this.stop();\r\n                this._onReadyCallbacks.reject(error);\r\n            }\r\n        });\r\n    }\r\n    _clientGetRootPath() {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (!folders || folders.length === 0) {\r\n            return undefined;\r\n        }\r\n        let folder = folders[0];\r\n        if (folder.uri.scheme === 'file') {\r\n            return folder.uri.fsPath;\r\n        }\r\n        return undefined;\r\n    }\r\n    stop() {\r\n        this._initializeResult = undefined;\r\n        if (!this._connectionPromise) {\r\n            this.state = ClientState.Stopped;\r\n            return Promise.resolve();\r\n        }\r\n        if (this.state === ClientState.Stopping && this._onStop) {\r\n            return this._onStop;\r\n        }\r\n        this.state = ClientState.Stopping;\r\n        this.cleanUp();\r\n        // unkook listeners\r\n        return this._onStop = this.resolveConnection().then(connection => {\r\n            return connection.shutdown().then(() => {\r\n                connection.exit();\r\n                connection.dispose();\r\n                this.state = ClientState.Stopped;\r\n                this._onStop = undefined;\r\n                this._connectionPromise = undefined;\r\n                this._resolvedConnection = undefined;\r\n            });\r\n        });\r\n    }\r\n    cleanUp(channel = true, diagnostics = true) {\r\n        if (this._listeners) {\r\n            this._listeners.forEach(listener => listener.dispose());\r\n            this._listeners = undefined;\r\n        }\r\n        if (this._providers) {\r\n            this._providers.forEach(provider => provider.dispose());\r\n            this._providers = undefined;\r\n        }\r\n        if (this._syncedDocuments) {\r\n            this._syncedDocuments.clear();\r\n        }\r\n        for (let handler of this._dynamicFeatures.values()) {\r\n            handler.dispose();\r\n        }\r\n        if (channel && this._outputChannel && this._disposeOutputChannel) {\r\n            this._outputChannel.dispose();\r\n            this._outputChannel = undefined;\r\n        }\r\n        if (diagnostics && this._diagnostics) {\r\n            this._diagnostics.dispose();\r\n            this._diagnostics = undefined;\r\n        }\r\n    }\r\n    notifyFileEvent(event) {\r\n        this._fileEvents.push(event);\r\n        this._fileEventDelayer.trigger(() => {\r\n            this.onReady().then(() => {\r\n                this.resolveConnection().then(connection => {\r\n                    if (this.isConnectionActive()) {\r\n                        connection.didChangeWatchedFiles({ changes: this._fileEvents });\r\n                    }\r\n                    this._fileEvents = [];\r\n                });\r\n            }, (error) => {\r\n                this.error(`Notify file events failed.`, error);\r\n            });\r\n        });\r\n    }\r\n    forceDocumentSync() {\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method).forceDelivery();\r\n    }\r\n    handleDiagnostics(params) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        let uri = this._p2c.asUri(params.uri);\r\n        let diagnostics = this._p2c.asDiagnostics(params.diagnostics);\r\n        let middleware = this.clientOptions.middleware.handleDiagnostics;\r\n        if (middleware) {\r\n            middleware(uri, diagnostics, (uri, diagnostics) => this.setDiagnostics(uri, diagnostics));\r\n        }\r\n        else {\r\n            this.setDiagnostics(uri, diagnostics);\r\n        }\r\n    }\r\n    setDiagnostics(uri, diagnostics) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        this._diagnostics.set(uri, diagnostics);\r\n    }\r\n    createConnection() {\r\n        let errorHandler = (error, message, count) => {\r\n            this.handleConnectionError(error, message, count);\r\n        };\r\n        let closeHandler = () => {\r\n            this.handleConnectionClosed();\r\n        };\r\n        return this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8').then((transports) => {\r\n            return createConnection(transports.reader, transports.writer, errorHandler, closeHandler);\r\n        });\r\n    }\r\n    handleConnectionClosed() {\r\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\r\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\r\n            return;\r\n        }\r\n        try {\r\n            if (this._resolvedConnection) {\r\n                this._resolvedConnection.dispose();\r\n            }\r\n        }\r\n        catch (error) {\r\n            // Disposing a connection could fail if error cases.\r\n        }\r\n        let action = CloseAction.DoNotRestart;\r\n        try {\r\n            action = this._clientOptions.errorHandler.closed();\r\n        }\r\n        catch (error) {\r\n            // Ignore errors coming from the error handler.\r\n        }\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        if (action === CloseAction.DoNotRestart) {\r\n            this.error('Connection to server got closed. Server will not be restarted.');\r\n            this.state = ClientState.Stopped;\r\n            this.cleanUp(false, true);\r\n        }\r\n        else if (action === CloseAction.Restart) {\r\n            this.info('Connection to server got closed. Server will restart.');\r\n            this.cleanUp(false, false);\r\n            this.state = ClientState.Initial;\r\n            this.start();\r\n        }\r\n    }\r\n    handleConnectionError(error, message, count) {\r\n        let action = this._clientOptions.errorHandler.error(error, message, count);\r\n        if (action === ErrorAction.Shutdown) {\r\n            this.error('Connection to server is erroring. Shutting down server.');\r\n            this.stop();\r\n        }\r\n    }\r\n    hookConfigurationChanged(connection) {\r\n        vscode_1.workspace.onDidChangeConfiguration(() => {\r\n            this.refreshTrace(connection, true);\r\n        });\r\n    }\r\n    refreshTrace(connection, sendNotification = false) {\r\n        let config = vscode_1.workspace.getConfiguration(this._id);\r\n        let trace = vscode_languageserver_protocol_1.Trace.Off;\r\n        let traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\r\n        if (config) {\r\n            const traceConfig = config.get('trace.server', 'off');\r\n            if (typeof traceConfig === 'string') {\r\n                trace = vscode_languageserver_protocol_1.Trace.fromString(traceConfig);\r\n            }\r\n            else {\r\n                trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server.verbosity', 'off'));\r\n                traceFormat = vscode_languageserver_protocol_1.TraceFormat.fromString(config.get('trace.server.format', 'text'));\r\n            }\r\n        }\r\n        this._trace = trace;\r\n        this._traceFormat = traceFormat;\r\n        connection.trace(this._trace, this._tracer, {\r\n            sendNotification,\r\n            traceFormat: this._traceFormat\r\n        });\r\n    }\r\n    hookFileEvents(_connection) {\r\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\r\n        if (!fileEvents) {\r\n            return;\r\n        }\r\n        let watchers;\r\n        if (Is.array(fileEvents)) {\r\n            watchers = fileEvents;\r\n        }\r\n        else {\r\n            watchers = [fileEvents];\r\n        }\r\n        if (!watchers) {\r\n            return;\r\n        }\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\r\n    }\r\n    registerFeatures(features) {\r\n        for (let feature of features) {\r\n            this.registerFeature(feature);\r\n        }\r\n    }\r\n    registerFeature(feature) {\r\n        this._features.push(feature);\r\n        if (DynamicFeature.is(feature)) {\r\n            let messages = feature.messages;\r\n            if (Array.isArray(messages)) {\r\n                for (let message of messages) {\r\n                    this._method2Message.set(message.method, message);\r\n                    this._dynamicFeatures.set(message.method, feature);\r\n                }\r\n            }\r\n            else {\r\n                this._method2Message.set(messages.method, messages);\r\n                this._dynamicFeatures.set(messages.method, feature);\r\n            }\r\n        }\r\n    }\r\n    registerBuiltinFeatures() {\r\n        this.registerFeature(new ConfigurationFeature(this));\r\n        this.registerFeature(new DidOpenTextDocumentFeature(this, this._syncedDocuments));\r\n        this.registerFeature(new DidChangeTextDocumentFeature(this));\r\n        this.registerFeature(new WillSaveFeature(this));\r\n        this.registerFeature(new WillSaveWaitUntilFeature(this));\r\n        this.registerFeature(new DidSaveTextDocumentFeature(this));\r\n        this.registerFeature(new DidCloseTextDocumentFeature(this, this._syncedDocuments));\r\n        this.registerFeature(new FileSystemWatcherFeature(this, (event) => this.notifyFileEvent(event)));\r\n        this.registerFeature(new CompletionItemFeature(this));\r\n        this.registerFeature(new HoverFeature(this));\r\n        this.registerFeature(new SignatureHelpFeature(this));\r\n        this.registerFeature(new DefinitionFeature(this));\r\n        this.registerFeature(new ReferencesFeature(this));\r\n        this.registerFeature(new DocumentHighlightFeature(this));\r\n        this.registerFeature(new DocumentSymbolFeature(this));\r\n        this.registerFeature(new WorkspaceSymbolFeature(this));\r\n        this.registerFeature(new CodeActionFeature(this));\r\n        this.registerFeature(new CodeLensFeature(this));\r\n        this.registerFeature(new DocumentFormattingFeature(this));\r\n        this.registerFeature(new DocumentRangeFormattingFeature(this));\r\n        this.registerFeature(new DocumentOnTypeFormattingFeature(this));\r\n        this.registerFeature(new RenameFeature(this));\r\n        this.registerFeature(new DocumentLinkFeature(this));\r\n        this.registerFeature(new ExecuteCommandFeature(this));\r\n    }\r\n    fillInitializeParams(params) {\r\n        for (let feature of this._features) {\r\n            if (Is.func(feature.fillInitializeParams)) {\r\n                feature.fillInitializeParams(params);\r\n            }\r\n        }\r\n    }\r\n    computeClientCapabilities() {\r\n        let result = {};\r\n        ensure(result, 'workspace').applyEdit = true;\r\n        let workspaceEdit = ensure(ensure(result, 'workspace'), 'workspaceEdit');\r\n        workspaceEdit.documentChanges = true;\r\n        workspaceEdit.resourceOperations = [vscode_languageserver_protocol_1.ResourceOperationKind.Create, vscode_languageserver_protocol_1.ResourceOperationKind.Rename, vscode_languageserver_protocol_1.ResourceOperationKind.Delete];\r\n        workspaceEdit.failureHandling = vscode_languageserver_protocol_1.FailureHandlingKind.TextOnlyTransactional;\r\n        ensure(ensure(result, 'textDocument'), 'publishDiagnostics').relatedInformation = true;\r\n        for (let feature of this._features) {\r\n            feature.fillClientCapabilities(result);\r\n        }\r\n        return result;\r\n    }\r\n    initializeFeatures(_connection) {\r\n        let documentSelector = this._clientOptions.documentSelector;\r\n        for (let feature of this._features) {\r\n            feature.initialize(this._capabilities, documentSelector);\r\n        }\r\n    }\r\n    handleRegistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let registration of params.registrations) {\r\n                const feature = this._dynamicFeatures.get(registration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${registration.method} found. Registration failed.`));\r\n                    return;\r\n                }\r\n                const options = registration.registerOptions || {};\r\n                options.documentSelector = options.documentSelector || this._clientOptions.documentSelector;\r\n                const data = {\r\n                    id: registration.id,\r\n                    registerOptions: options\r\n                };\r\n                feature.register(this._method2Message.get(registration.method), data);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n    handleUnregistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let unregistration of params.unregisterations) {\r\n                const feature = this._dynamicFeatures.get(unregistration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${unregistration.method} found. Unregistration failed.`));\r\n                    return;\r\n                }\r\n                feature.unregister(unregistration.id);\r\n            }\r\n            ;\r\n            resolve();\r\n        });\r\n    }\r\n    handleApplyWorkspaceEdit(params) {\r\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\r\n        // However doing it here adds some safety since the server can lag more behind then an extension.\r\n        let workspaceEdit = params.edit;\r\n        let openTextDocuments = new Map();\r\n        vscode_1.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri.toString(), document));\r\n        let versionMismatch = false;\r\n        if (workspaceEdit.documentChanges) {\r\n            for (const change of workspaceEdit.documentChanges) {\r\n                if (vscode_languageserver_protocol_1.TextDocumentEdit.is(change) && change.textDocument.version && change.textDocument.version >= 0) {\r\n                    let textDocument = openTextDocuments.get(change.textDocument.uri);\r\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\r\n                        versionMismatch = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (versionMismatch) {\r\n            return Promise.resolve({ applied: false });\r\n        }\r\n        return vscode_1.workspace.applyEdit(this._p2c.asWorkspaceEdit(params.edit)).then((value) => { return { applied: value }; });\r\n    }\r\n    ;\r\n    logFailedRequest(type, error) {\r\n        // If we get a request cancel don't log anything.\r\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.code === vscode_languageserver_protocol_1.ErrorCodes.RequestCancelled) {\r\n            return;\r\n        }\r\n        this.error(`Request ${type.method} failed.`, error);\r\n    }\r\n}\r\nexports.BaseLanguageClient = BaseLanguageClient;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ValueUUID {\r\n    constructor(_value) {\r\n        this._value = _value;\r\n        // empty\r\n    }\r\n    asHex() {\r\n        return this._value;\r\n    }\r\n    equals(other) {\r\n        return this.asHex() === other.asHex();\r\n    }\r\n}\r\nclass V4UUID extends ValueUUID {\r\n    constructor() {\r\n        super([\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            '4',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._oneOf(V4UUID._timeHighBits),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n        ].join(''));\r\n    }\r\n    static _oneOf(array) {\r\n        return array[Math.floor(array.length * Math.random())];\r\n    }\r\n    static _randomHex() {\r\n        return V4UUID._oneOf(V4UUID._chars);\r\n    }\r\n}\r\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n/**\r\n * An empty UUID that contains only zeros.\r\n */\r\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\nfunction v4() {\r\n    return new V4UUID();\r\n}\r\nexports.v4 = v4;\r\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\nfunction isUUID(value) {\r\n    return _UUIDPattern.test(value);\r\n}\r\nexports.isUUID = isUUID;\r\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\r\nfunction parse(value) {\r\n    if (!isUUID(value)) {\r\n        throw new Error('invalid uuid');\r\n    }\r\n    return new ValueUUID(value);\r\n}\r\nexports.parse = parse;\r\nfunction generateUuid() {\r\n    return v4().asHex();\r\n}\r\nexports.generateUuid = generateUuid;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Logging = require(\"../Library/Logging\");\r\nvar DiagChannel = require(\"./diagnostic-channel/initialization\");\r\nvar CorrelationContextManager = (function () {\r\n    function CorrelationContextManager() {\r\n    }\r\n    /**\r\n     *  Provides the current Context.\r\n     *  The context is the most recent one entered into for the current\r\n     *  logical chain of execution, including across asynchronous calls.\r\n     */\r\n    CorrelationContextManager.getCurrentContext = function () {\r\n        if (!CorrelationContextManager.enabled) {\r\n            return null;\r\n        }\r\n        return Zone.current.get(\"context\");\r\n    };\r\n    /**\r\n     *  A helper to generate objects conforming to the CorrelationContext interface\r\n     */\r\n    CorrelationContextManager.generateContextObject = function (operationId, parentId, operationName, correlationContextHeader) {\r\n        parentId = parentId || operationId;\r\n        if (this.enabled) {\r\n            return {\r\n                operation: {\r\n                    name: operationName,\r\n                    id: operationId,\r\n                    parentId: parentId\r\n                },\r\n                customProperties: new CustomPropertiesImpl(correlationContextHeader)\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Runs a function inside a given Context.\r\n     *  All logical children of the execution path that entered this Context\r\n     *  will receive this Context object on calls to GetCurrentContext.\r\n     */\r\n    CorrelationContextManager.runWithContext = function (context, fn) {\r\n        if (CorrelationContextManager.enabled) {\r\n            var newZone = Zone.current.fork({\r\n                name: \"AI-\" + ((context && context.operation.parentId) || \"Unknown\"),\r\n                properties: { context: context }\r\n            });\r\n            newZone.run(fn);\r\n        }\r\n        else {\r\n            fn();\r\n        }\r\n    };\r\n    /**\r\n     *  Patches a callback to restore the correct Context when getCurrentContext\r\n     *  is run within it. This is necessary if automatic correlation fails to work\r\n     *  with user-included libraries.\r\n     *\r\n     *  The supplied callback will be given the same context that was present for\r\n     *  the call to wrapCallback.  */\r\n    CorrelationContextManager.wrapCallback = function (fn) {\r\n        if (CorrelationContextManager.enabled) {\r\n            return Zone.current.wrap(fn, \"User-wrapped method\");\r\n        }\r\n        return fn;\r\n    };\r\n    /**\r\n     *  Enables the CorrelationContextManager.\r\n     */\r\n    CorrelationContextManager.enable = function () {\r\n        if (this.enabled) {\r\n            return;\r\n        }\r\n        if (!this.isNodeVersionCompatible()) {\r\n            this.enabled = false;\r\n            return;\r\n        }\r\n        // Run patches for Zone.js\r\n        if (!CorrelationContextManager.hasEverEnabled) {\r\n            this.hasEverEnabled = true;\r\n            // Load in Zone.js\r\n            try {\r\n                // Require zone if we can't detect its presence - guarded because of issue #346\r\n                // Note that usually multiple requires of zone.js does not error - but we see reports of it happening\r\n                // in the Azure Functions environment.\r\n                // This indicates that the file is being included multiple times in the same global scope,\r\n                // averting require's cache somehow.\r\n                if (typeof Zone === \"undefined\") {\r\n                    require(\"zone.js\");\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Zone was already loaded even though we couldn't find its global variable\r\n                Logging.warn(\"Failed to require zone.js\");\r\n            }\r\n            DiagChannel.registerContextPreservation(function (cb) {\r\n                return Zone.current.wrap(cb, \"AI-ContextPreservation\");\r\n            });\r\n            this.patchError();\r\n            this.patchTimers([\"setTimeout\", \"setInterval\"]);\r\n        }\r\n        this.enabled = true;\r\n    };\r\n    /**\r\n     *  Disables the CorrelationContextManager.\r\n     */\r\n    CorrelationContextManager.disable = function () {\r\n        this.enabled = false;\r\n    };\r\n    /**\r\n     *  Reports if the CorrelationContextManager is able to run in this environment\r\n     */\r\n    CorrelationContextManager.isNodeVersionCompatible = function () {\r\n        // Unit tests warn of errors < 3.3 from timer patching. All versions before 4 were 0.x\r\n        var nodeVer = process.versions.node.split(\".\");\r\n        return parseInt(nodeVer[0]) > 3 || (parseInt(nodeVer[0]) > 2 && parseInt(nodeVer[1]) > 2);\r\n    };\r\n    // Zone.js breaks concatenation of timer return values.\r\n    // This fixes that.\r\n    CorrelationContextManager.patchTimers = function (methodNames) {\r\n        methodNames.forEach(function (methodName) {\r\n            var orig = global[methodName];\r\n            global[methodName] = function () {\r\n                var ret = orig.apply(this, arguments);\r\n                ret.toString = function () {\r\n                    if (this.data && typeof this.data.handleId !== 'undefined') {\r\n                        return this.data.handleId.toString();\r\n                    }\r\n                    else {\r\n                        return Object.prototype.toString.call(this);\r\n                    }\r\n                };\r\n                return ret;\r\n            };\r\n        });\r\n    };\r\n    // Zone.js breaks deepEqual on error objects (by making internal properties enumerable).\r\n    // This fixes that by subclassing the error object and making all properties not enumerable\r\n    CorrelationContextManager.patchError = function () {\r\n        var orig = global.Error;\r\n        // New error handler\r\n        function AppInsightsAsyncCorrelatedErrorWrapper() {\r\n            if (!(this instanceof AppInsightsAsyncCorrelatedErrorWrapper)) {\r\n                return AppInsightsAsyncCorrelatedErrorWrapper.apply(Object.create(AppInsightsAsyncCorrelatedErrorWrapper.prototype), arguments);\r\n            }\r\n            // Is this object set to rewrite the stack?\r\n            // If so, we should turn off some Zone stuff that is prone to break\r\n            var stackRewrite = orig.stackRewrite;\r\n            if (orig.prepareStackTrace) {\r\n                orig.stackRewrite = false;\r\n                var stackTrace = orig.prepareStackTrace;\r\n                orig.prepareStackTrace = function (e, s) {\r\n                    // Remove some AI and Zone methods from the stack trace\r\n                    // Otherwise we leave side-effects\r\n                    // Algorithm is to find the first frame on the stack after the first instance(s)\r\n                    // of AutoCollection/CorrelationContextManager\r\n                    // Eg. this should return the User frame on an array like below:\r\n                    //  Zone | Zone | CorrelationContextManager | CorrelationContextManager | User\r\n                    var foundOne = false;\r\n                    for (var i = 0; i < s.length; i++) {\r\n                        var fileName = s[i].getFileName();\r\n                        if (fileName) {\r\n                            if (fileName.indexOf(\"AutoCollection/CorrelationContextManager\") === -1 &&\r\n                                fileName.indexOf(\"AutoCollection\\\\CorrelationContextManager\") === -1) {\r\n                                if (foundOne) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else {\r\n                                foundOne = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Loop above goes one extra step\r\n                    i = Math.max(0, i - 1);\r\n                    if (foundOne) {\r\n                        s.splice(0, i);\r\n                    }\r\n                    return stackTrace(e, s);\r\n                };\r\n            }\r\n            // Apply the error constructor\r\n            orig.apply(this, arguments);\r\n            // Restore Zone stack rewriting settings\r\n            orig.stackRewrite = stackRewrite;\r\n            // Remove unexpected bits from stack trace\r\n            if (this.stack && typeof this.stack === \"string\") {\r\n                var stackFrames = this.stack.split(\"\\n\");\r\n                // Remove this class\r\n                if (stackFrames.length > 3) {\r\n                    if (stackFrames[2].trim().indexOf(\"at Error.AppInsightsAsyncCorrelatedErrorWrapper\") === 0) {\r\n                        stackFrames.splice(2, 1);\r\n                    }\r\n                    else if (stackFrames[1].trim().indexOf(\"at AppInsightsAsyncCorrelatedErrorWrapper.ZoneAwareError\") === 0\r\n                        && stackFrames[2].trim().indexOf(\"at new AppInsightsAsyncCorrelatedErrorWrapper\") === 0) {\r\n                        stackFrames.splice(1, 2);\r\n                    }\r\n                }\r\n                // Remove AI correlation ids\r\n                this.stack = stackFrames.map(function (v) {\r\n                    var startIndex = v.indexOf(\") [\");\r\n                    if (startIndex > -1) {\r\n                        v = v.substr(0, startIndex + 1);\r\n                    }\r\n                    return v;\r\n                }).join(\"\\n\");\r\n            }\r\n            // getOwnPropertyNames should be a superset of Object.keys...\r\n            // This appears to not always be the case\r\n            var props = Object.getOwnPropertyNames(this).concat(Object.keys(this));\r\n            // Zone.js will automatically create some hidden properties at read time.\r\n            // We need to proactively make those not enumerable as well as the currently visible properties\r\n            for (var i = 0; i < props.length; i++) {\r\n                var propertyName = props[i];\r\n                var hiddenPropertyName = Zone['__symbol__'](propertyName);\r\n                Object.defineProperty(this, propertyName, { enumerable: false });\r\n                Object.defineProperty(this, hiddenPropertyName, { enumerable: false, writable: true });\r\n            }\r\n            return this;\r\n        }\r\n        // Inherit from the Zone.js error handler\r\n        AppInsightsAsyncCorrelatedErrorWrapper.prototype = orig.prototype;\r\n        // We need this loop to copy outer methods like Error.captureStackTrace\r\n        var props = Object.getOwnPropertyNames(orig);\r\n        for (var i = 0; i < props.length; i++) {\r\n            var propertyName = props[i];\r\n            if (!AppInsightsAsyncCorrelatedErrorWrapper[propertyName]) {\r\n                Object.defineProperty(AppInsightsAsyncCorrelatedErrorWrapper, propertyName, Object.getOwnPropertyDescriptor(orig, propertyName));\r\n            }\r\n        }\r\n        // explicit cast to <any> required to avoid type error for captureStackTrace\r\n        // with latest node.d.ts (despite workaround above)\r\n        global.Error = AppInsightsAsyncCorrelatedErrorWrapper;\r\n    };\r\n    CorrelationContextManager.enabled = false;\r\n    CorrelationContextManager.hasEverEnabled = false;\r\n    return CorrelationContextManager;\r\n}());\r\nexports.CorrelationContextManager = CorrelationContextManager;\r\nvar CustomPropertiesImpl = (function () {\r\n    function CustomPropertiesImpl(header) {\r\n        this.props = [];\r\n        this.addHeaderData(header);\r\n    }\r\n    CustomPropertiesImpl.prototype.addHeaderData = function (header) {\r\n        var keyvals = header ? header.split(\", \") : [];\r\n        this.props = keyvals.map(function (keyval) {\r\n            var parts = keyval.split(\"=\");\r\n            return { key: parts[0], value: parts[1] };\r\n        }).concat(this.props);\r\n    };\r\n    CustomPropertiesImpl.prototype.serializeToHeader = function () {\r\n        return this.props.map(function (keyval) {\r\n            return keyval.key + \"=\" + keyval.value;\r\n        }).join(\", \");\r\n    };\r\n    CustomPropertiesImpl.prototype.getProperty = function (prop) {\r\n        for (var i = 0; i < this.props.length; ++i) {\r\n            var keyval = this.props[i];\r\n            if (keyval.key === prop) {\r\n                return keyval.value;\r\n            }\r\n        }\r\n        return;\r\n    };\r\n    // TODO: Strictly according to the spec, properties which are recieved from\r\n    // an incoming request should be left untouched, while we may add our own new\r\n    // properties. The logic here will need to change to track that.\r\n    CustomPropertiesImpl.prototype.setProperty = function (prop, val) {\r\n        if (CustomPropertiesImpl.bannedCharacters.test(prop) || CustomPropertiesImpl.bannedCharacters.test(val)) {\r\n            Logging.warn(\"Correlation context property keys and values must not contain ',' or '='. setProperty was called with key: \" + prop + \" and value: \" + val);\r\n            return;\r\n        }\r\n        for (var i = 0; i < this.props.length; ++i) {\r\n            var keyval = this.props[i];\r\n            if (keyval.key === prop) {\r\n                keyval.value = val;\r\n                return;\r\n            }\r\n        }\r\n        this.props.push({ key: prop, value: val });\r\n    };\r\n    CustomPropertiesImpl.bannedCharacters = /[,=]/;\r\n    return CustomPropertiesImpl;\r\n}());\r\n//# sourceMappingURL=CorrelationContextManager.js.map","module.exports = require(\"stream\");","module.exports = require(\"events\");","\"use strict\";\r\nmodule.exports = {\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    requestContextHeader: \"request-context\",\r\n    /**\r\n     * Source instrumentation header that is added by an application while making http\r\n     * requests and retrieved by the other application when processing incoming requests.\r\n     */\r\n    requestContextSourceKey: \"appId\",\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    requestContextTargetKey: \"appId\",\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    requestIdHeader: \"request-id\",\r\n    /**\r\n     * Legacy Header containing the id of the immidiate caller\r\n     */\r\n    parentIdHeader: \"x-ms-request-id\",\r\n    /**\r\n     * Legacy Header containing the correlation id that kept the same for every telemetry item\r\n     * accross transactions\r\n     */\r\n    rootIdHeader: \"x-ms-request-root-id\",\r\n    /**\r\n     * Correlation-Context header\r\n     *\r\n     * Not currently actively used, but the contents should be passed from incoming to outgoing requests\r\n     */\r\n    correlationContextHeader: \"correlation-context\"\r\n};\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","module.exports = require(\"util\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as os from 'os';\r\n\r\n// This is used for testing purposes\r\nlet Subscriber: (message: string) => void;\r\nexport function subscribeToAllLoggers(subscriber: (message: string) => void): void {\r\n    Subscriber = subscriber;\r\n}\r\n\r\nexport class Logger {\r\n    private writer: (message: string) => void;\r\n\r\n    constructor(writer: (message: string) => void) {\r\n        this.writer = writer;\r\n    }\r\n\r\n    public append(message: string): void {\r\n        this.writer(message);\r\n        if (Subscriber) {\r\n            Subscriber(message);\r\n        }\r\n    }\r\n\r\n    public appendLine(message: string): void {\r\n        this.writer(message + os.EOL);\r\n        if (Subscriber) {\r\n            Subscriber(message + os.EOL);\r\n        }\r\n    }\r\n\r\n    public showInformationMessage(message: string, items?: string[]): Thenable<string> {\r\n        this.appendLine(message);\r\n        \r\n        return vscode.window.showInformationMessage(message, ...items);\r\n    }\r\n\r\n    public showWarningMessage(message: string, items?: string[]): Thenable<string> {\r\n        this.appendLine(message);\r\n        \r\n        return vscode.window.showWarningMessage(message, ...items);\r\n    }\r\n\r\n    public showErrorMessage(message: string, items?: string[]): Thenable<string> {\r\n        this.appendLine(message);\r\n\r\n        return vscode.window.showErrorMessage(message, ...items);\r\n    }\r\n}\r\n\r\nlet outputChannel: vscode.OutputChannel;\r\n\r\nexport function getOutputChannel(): vscode.OutputChannel {\r\n    if (outputChannel === undefined) {\r\n        outputChannel = vscode.window.createOutputChannel(\"C/C++\");\r\n    }\r\n    return outputChannel;\r\n}\r\n\r\nexport function showOutputChannel(): void {\r\n    getOutputChannel().show();\r\n}\r\n\r\nlet outputChannelLogger: Logger;\r\n\r\nexport function getOutputChannelLogger(): Logger {\r\n    if (!outputChannelLogger) {\r\n        outputChannelLogger = new Logger(message => getOutputChannel().append(message));\r\n    }\r\n    return outputChannelLogger;\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode = require(\"vscode\");\r\n/**\r\n * API version information.\r\n */\r\nvar Version;\r\n(function (Version) {\r\n    Version[Version[\"v0\"] = 0] = \"v0\";\r\n    Version[Version[\"v1\"] = 1] = \"v1\";\r\n    Version[Version[\"v2\"] = 2] = \"v2\";\r\n    Version[Version[\"latest\"] = 2] = \"latest\";\r\n})(Version = exports.Version || (exports.Version = {}));\r\nfunction isCppToolsExtension(extension) {\r\n    return extension.getApi !== undefined;\r\n}\r\n/**\r\n * Helper function to get the CppToolsApi from the cpptools extension.\r\n * @param version The desired API version\r\n * @example\r\n```\r\n    import {CppToolsApi, Version, CustomConfigurationProvider, getCppToolsApi} from 'vscode-cpptools';\r\n\r\n    let api: CppToolsApi|undefined = await getCppToolsApi(Version.v1);\r\n    if (api) {\r\n        // Inform cpptools that a custom config provider\r\n        // will be able to service the current workspace.\r\n        api.registerCustomConfigurationProvider(provider);\r\n\r\n        // Do any required setup that the provider needs.\r\n\r\n        // Notify cpptools that the provider is ready to\r\n        // provide IntelliSense configurations.\r\n        api.notifyReady(provider);\r\n    }\r\n    // Dispose of the 'api' in your extension's\r\n    // deactivate() method, or whenever you want to\r\n    // unregister the provider.\r\n```\r\n */\r\nfunction getCppToolsApi(version) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let cpptools = vscode.extensions.getExtension(\"ms-vscode.cpptools\");\r\n        let extension;\r\n        let api;\r\n        if (cpptools) {\r\n            if (!cpptools.isActive) {\r\n                extension = yield cpptools.activate();\r\n            }\r\n            else {\r\n                extension = cpptools.exports;\r\n            }\r\n            if (isCppToolsExtension(extension)) {\r\n                // ms-vscode.cpptools > 0.17.5\r\n                try {\r\n                    api = extension.getApi(version);\r\n                }\r\n                catch (err) {\r\n                    // Unfortunately, ms-vscode.cpptools [0.17.6, 0.18.1] throws a RangeError if you specify a version greater than v1.\r\n                    // These versions of the extension will not be able to act on the newer interface and v2 is a superset of v1, so we can safely fall back to v1.\r\n                    let e = err;\r\n                    if (e.message && e.message.startsWith(\"Invalid version\")) {\r\n                        api = extension.getApi(Version.v1);\r\n                    }\r\n                }\r\n                if (version !== Version.v1) {\r\n                    if (!api.getVersion) {\r\n                        console.warn(`vscode-cpptools-api version ${version} requested, but is not available in the current version of the cpptools extension. Using version 1 instead.`);\r\n                    }\r\n                    else if (version !== api.getVersion()) {\r\n                        console.warn(`vscode-cpptools-api version ${version} requested, but is not available in the current version of the cpptools extension. Using version ${api.getVersion()} instead.`);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // ms-vscode.cpptools version 0.17.5\r\n                api = extension;\r\n                if (version !== Version.v0) {\r\n                    console.warn(`vscode-cpptools-api version ${version} requested, but is not available in version 0.17.5 of the cpptools extension. Using version 0 instead.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            console.warn(\"C/C++ extension is not installed\");\r\n        }\r\n        return api;\r\n    });\r\n}\r\nexports.getCppToolsApi = getCppToolsApi;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport { CommentPattern } from './languageConfig';\r\n\r\nfunction getTarget(): vscode.ConfigurationTarget {\r\n    return (vscode.workspace.workspaceFolders) ? vscode.ConfigurationTarget.WorkspaceFolder : vscode.ConfigurationTarget.Global;\r\n}\r\n\r\nclass Settings {\r\n    private readonly settings: vscode.WorkspaceConfiguration;\r\n\r\n    /**\r\n     * create the Settings object.\r\n     * @param resource The path to a resource to which the settings should apply, or undefined if global settings are desired\r\n     */\r\n    constructor(section: string, resource?: vscode.Uri) {\r\n        this.settings = vscode.workspace.getConfiguration(section, resource ? resource : null);\r\n    }\r\n\r\n    protected get Section(): vscode.WorkspaceConfiguration { return this.settings; }\r\n}\r\n\r\nexport class CppSettings extends Settings {\r\n    constructor(resource?: vscode.Uri) {\r\n        super(\"C_Cpp\", resource);\r\n    }\r\n  \r\n    public get clangFormatPath(): string { return super.Section.get<string>(\"clang_format_path\"); }\r\n    public get clangFormatStyle(): string { return super.Section.get<string>(\"clang_format_style\"); }\r\n    public get clangFormatFallbackStyle(): string { return super.Section.get<string>(\"clang_format_fallbackStyle\"); }\r\n    public get clangFormatSortIncludes(): string { return super.Section.get<string>(\"clang_format_sortIncludes\"); }\r\n    public get clangFormatOnSave(): string { return super.Section.get<string>(\"clang_format_formatOnSave\"); }\r\n    public get formatting(): string { return super.Section.get<string>(\"formatting\"); }\r\n    public get suggestSnippets(): boolean { return super.Section.get<boolean>(\"suggestSnippets\"); }\r\n    public get intelliSenseEngine(): string { return super.Section.get<string>(\"intelliSenseEngine\"); }\r\n    public get intelliSenseEngineFallback(): string { return super.Section.get<string>(\"intelliSenseEngineFallback\"); }\r\n    public get intelliSenseCachePath(): string { return super.Section.get<string>(\"intelliSenseCachePath\"); }\r\n    public get intelliSenseCacheSize(): number { return super.Section.get<number>(\"intelliSenseCacheSize\"); }\r\n    public get errorSquiggles(): string { return super.Section.get<string>(\"errorSquiggles\"); }\r\n    public get dimInactiveRegions(): boolean { return super.Section.get<boolean>(\"dimInactiveRegions\"); }\r\n    public get inactiveRegionOpacity(): number { return super.Section.get<number>(\"inactiveRegionOpacity\"); }\r\n    public get inactiveRegionForegroundColor(): string { return super.Section.get<string>(\"inactiveRegionForegroundColor\"); }\r\n    public get inactiveRegionBackgroundColor(): string { return super.Section.get<string>(\"inactiveRegionBackgroundColor\"); }\r\n    public get autoComplete(): string { return super.Section.get<string>(\"autocomplete\"); }\r\n    public get loggingLevel(): string { return super.Section.get<string>(\"loggingLevel\"); }\r\n    public get navigationLength(): number { return super.Section.get<number>(\"navigation.length\", 60); }\r\n    public get autoAddFileAssociations(): boolean { return super.Section.get<boolean>(\"autoAddFileAssociations\"); }\r\n    public get workspaceParsingPriority(): boolean { return super.Section.get<boolean>(\"workspaceParsingPriority\"); }\r\n    public get workspaceSymbols(): string { return super.Section.get<string>(\"workspaceSymbols\"); }\r\n    public get exclusionPolicy(): boolean { return super.Section.get<boolean>(\"exclusionPolicy\"); }\r\n    public get commentContinuationPatterns(): (string | CommentPattern)[] { return super.Section.get<(string | CommentPattern)[]>(\"commentContinuationPatterns\"); }\r\n    public get configurationWarnings(): string { return super.Section.get<string>(\"configurationWarnings\"); }\r\n    public get preferredPathSeparator(): string { return super.Section.get<string>(\"preferredPathSeparator\"); }\r\n    public get updateChannel(): string { return super.Section.get<string>(\"updateChannel\"); }\r\n    public get defaultIncludePath(): string[] { return super.Section.get<string[]>(\"default.includePath\"); }\r\n    public get defaultDefines(): string[] { return super.Section.get<string[]>(\"default.defines\"); }\r\n    public get defaultMacFrameworkPath(): string[] { return super.Section.get<string[]>(\"default.macFrameworkPath\"); }\r\n    public get defaultWindowsSdkVersion(): string { return super.Section.get<string>(\"default.windowsSdkVersion\"); }\r\n    public get defaultCompileCommands(): string { return super.Section.get<string>(\"default.compileCommands\"); }\r\n    public get defaultForcedInclude(): string[] { return super.Section.get<string[]>(\"default.forcedInclude\"); }\r\n    public get defaultIntelliSenseMode(): string { return super.Section.get<string>(\"default.intelliSenseMode\"); }\r\n    public get defaultCompilerPath(): string { return super.Section.get<string>(\"default.compilerPath\"); }\r\n    public get defaultCStandard(): string { return super.Section.get<string>(\"default.cStandard\"); }\r\n    public get defaultCppStandard(): string { return super.Section.get<string>(\"default.cppStandard\"); }\r\n    public get defaultConfigurationProvider(): string { return super.Section.get<string>(\"default.configurationProvider\"); }\r\n    public get defaultBrowsePath(): string[] { return super.Section.get<string[]>(\"default.browse.path\"); }\r\n    public get defaultDatabaseFilename(): string { return super.Section.get<string>(\"default.browse.databaseFilename\"); }\r\n    public get defaultLimitSymbolsToIncludedHeaders(): boolean { return super.Section.get<boolean>(\"default.browse.limitSymbolsToIncludedHeaders\"); }\r\n    public get defaultSystemIncludePath(): string[] { return super.Section.get<string[]>(\"default.systemIncludePath\"); }\r\n\r\n    public toggleSetting(name: string, value1: string, value2: string): void {\r\n        let value: string = super.Section.get<string>(name);\r\n        super.Section.update(name, value === value1 ? value2 : value1, getTarget());\r\n    }\r\n    public update<T>(name: string, value: T): void {\r\n        super.Section.update(name, value);\r\n    }\r\n}\r\n\r\nexport class OtherSettings {\r\n    private resource: vscode.Uri;\r\n\r\n    constructor(resource?: vscode.Uri) {\r\n        if (!resource) {\r\n            resource = null;\r\n        }\r\n        this.resource = resource;\r\n    }\r\n\r\n    public get editorTabSize(): vscode.WorkspaceConfiguration { return vscode.workspace.getConfiguration(\"editor\", this.resource).get(\"tabSize\"); }\r\n    public get filesAssociations(): any { return vscode.workspace.getConfiguration(\"files\", null).get(\"associations\"); }\r\n    public get filesExclude(): vscode.WorkspaceConfiguration { return vscode.workspace.getConfiguration(\"files\", this.resource).get(\"exclude\"); }\r\n    public get searchExclude(): vscode.WorkspaceConfiguration { return vscode.workspace.getConfiguration(\"search\", this.resource).get(\"exclude\"); }\r\n\r\n    public set filesAssociations(value: any) {\r\n         vscode.workspace.getConfiguration(\"files\", null).update(\"associations\", value, vscode.ConfigurationTarget.Workspace);\r\n    }\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as util from '../common';\r\nimport * as vscode from 'vscode';\r\nimport * as path from 'path';\r\n\r\nclass PersistentStateBase<T> {\r\n    private key: string;\r\n    private defaultvalue: T;\r\n    private state: vscode.Memento;\r\n\r\n    constructor(key: string, defaultValue: T, state: vscode.Memento) {\r\n        this.key = key;\r\n        this.defaultvalue = defaultValue;\r\n        this.state = state;\r\n    }\r\n\r\n    public get Value(): T {\r\n        return this.state.get<T>(this.key, this.defaultvalue);\r\n    }\r\n\r\n    public set Value(newValue: T) {\r\n        this.state.update(this.key, newValue);\r\n    }\r\n\r\n    public get DefaultValue(): T {\r\n        return this.defaultvalue;\r\n    }\r\n}\r\n\r\n// Abstraction for global state that persists across activations but is not present in a settings file\r\nexport class PersistentState<T> extends PersistentStateBase<T> {\r\n    constructor(key: string, defaultValue: T) {\r\n        super(key, defaultValue, util.extensionContext.globalState);\r\n    }\r\n}\r\n\r\nexport class PersistentWorkspaceState<T> extends PersistentStateBase<T> {\r\n    constructor(key: string, defaultValue: T) {\r\n        super(key, defaultValue, util.extensionContext.workspaceState);\r\n    }\r\n}\r\n\r\nexport class PersistentFolderState<T> extends PersistentWorkspaceState<T> {\r\n    constructor(key: string, defaultValue: T, folder: string) {\r\n        let newKey: string = key + (folder ? `-${path.basename(folder)}` : \"-untitled\");\r\n        super(newKey, defaultValue);\r\n    }\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nEmitter._noop = function () { };\r\nexports.Emitter = Emitter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as os from 'os';\r\nimport * as util from './common';\r\nimport { LinuxDistribution } from './linuxDistribution';\r\n\r\nexport class PlatformInformation {\r\n    constructor(public platform: string, public architecture: string, public distribution: LinuxDistribution) { }\r\n\r\n    public static GetPlatformInformation(): Promise<PlatformInformation> {\r\n        let platform: string = os.platform();\r\n        let architecturePromise: Promise<string>;\r\n        let distributionPromise: Promise<LinuxDistribution> = Promise.resolve<LinuxDistribution>(null);\r\n\r\n        switch (platform) {\r\n            case \"win32\":\r\n                architecturePromise = PlatformInformation.GetWindowsArchitecture();\r\n                break;\r\n\r\n            case \"linux\":\r\n                architecturePromise = PlatformInformation.GetUnixArchitecture();\r\n                distributionPromise = LinuxDistribution.GetDistroInformation();\r\n                break;\r\n\r\n            case \"darwin\":\r\n                architecturePromise = PlatformInformation.GetUnixArchitecture();\r\n                break;\r\n        }\r\n\r\n        return Promise.all<string | LinuxDistribution>([architecturePromise, distributionPromise])\r\n            .then(([arch, distro]: [string, LinuxDistribution]) => {\r\n                return new PlatformInformation(platform, arch, distro);\r\n            });\r\n    }\r\n\r\n    public static GetUnknownArchitecture(): string { return \"Unknown\"; }\r\n\r\n    private static GetWindowsArchitecture(): Promise<string> {\r\n        return util.execChildProcess('wmic os get osarchitecture', util.extensionContext.extensionPath)\r\n            .then((architecture) => {\r\n                if (architecture) {\r\n                    let archArray: string[] = architecture.split(os.EOL);\r\n                    if (archArray.length >= 2) {\r\n                        let arch: string = archArray[1].trim();\r\n\r\n                        // Note: This string can be localized. So, we'll just check to see if it contains 32 or 64.\r\n                        if (arch.indexOf('64') >= 0) {\r\n                            return \"x86_64\";\r\n                        } else if (arch.indexOf('32') >= 0) {\r\n                            return \"x86\";\r\n                        }\r\n                    }\r\n                }\r\n                return PlatformInformation.GetUnknownArchitecture();\r\n            }).catch((error) => {\r\n                return PlatformInformation.GetUnknownArchitecture();\r\n            });\r\n    }\r\n\r\n    private static GetUnixArchitecture(): Promise<string> {\r\n        return util.execChildProcess('uname -m', util.packageJson.extensionFolderPath)\r\n            .then((architecture) => {\r\n                if (architecture) {\r\n                    return architecture.trim();\r\n                }\r\n                return null;\r\n            });\r\n    }\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as util from './common';\r\nimport * as Telemetry from './telemetry';\r\nimport { PersistentState } from './LanguageServer/persistentState';\r\nimport * as fs from 'fs';\r\n\r\nconst userBucketMax: number = 100;\r\nconst userBucketString: string = \"CPP.UserBucket\";\r\nconst localConfigFile: string = \"cpptools.json\";\r\n\r\ninterface Settings {\r\n    defaultIntelliSenseEngine?: number;\r\n    recursiveIncludes?: number;\r\n    gotoDefIntelliSense?: number;\r\n}\r\n\r\nexport class ABTestSettings {\r\n    private settings: Settings;\r\n    private intelliSenseEngineDefault: PersistentState<number>;\r\n    private recursiveIncludesDefault: PersistentState<number>;\r\n    private gotoDefIntelliSenseDefault: PersistentState<number>;\r\n    private bucket: PersistentState<number>;\r\n\r\n    constructor() {\r\n        this.intelliSenseEngineDefault = new PersistentState<number>(\"ABTest.1\", 100);\r\n        this.recursiveIncludesDefault = new PersistentState<number>(\"ABTest.2\", 100);\r\n        this.gotoDefIntelliSenseDefault = new PersistentState<number>(\"ABTest.3\", 100);\r\n        this.settings = {\r\n            defaultIntelliSenseEngine: this.intelliSenseEngineDefault.Value,\r\n            recursiveIncludes: this.recursiveIncludesDefault.Value,\r\n            gotoDefIntelliSense: this.gotoDefIntelliSenseDefault.Value\r\n        };\r\n        this.bucket = new PersistentState<number>(userBucketString, -1);\r\n        if (this.bucket.Value === -1) {\r\n            this.bucket.Value = Math.floor(Math.random() * userBucketMax) + 1; // Range is [1, userBucketMax].\r\n        }\r\n\r\n        this.updateSettings();\r\n        // Redownload cpptools.json after initialization so it's not blocked.\r\n        // It'll be used the next time the extension reloads.\r\n        this.downloadCpptoolsJsonPkgAsync();\r\n\r\n        // Redownload occasionally to prevent an extra reload during long sessions.\r\n        setInterval(() => { this.downloadCpptoolsJsonPkgAsync(); }, 30 * 60 * 1000); // 30 minutes.\r\n    }\r\n\r\n    public get UseDefaultIntelliSenseEngine(): boolean {\r\n        return util.isNumber(this.settings.defaultIntelliSenseEngine) ? this.settings.defaultIntelliSenseEngine >= this.bucket.Value : true;\r\n    }\r\n\r\n    public get UseRecursiveIncludes(): boolean {\r\n        return util.isNumber(this.settings.recursiveIncludes) ? this.settings.recursiveIncludes >= this.bucket.Value : true;\r\n    }\r\n\r\n    public get UseGoToDefIntelliSense(): boolean {\r\n        return util.isNumber(this.settings.gotoDefIntelliSense) ? this.settings.gotoDefIntelliSense >= this.bucket.Value : true;\r\n    }\r\n\r\n    private updateSettings(): void {\r\n        const cpptoolsJsonFile: string = util.getExtensionFilePath(localConfigFile);\r\n\r\n        try {\r\n            const exists: boolean = fs.existsSync(cpptoolsJsonFile);\r\n            if (exists) {\r\n                const fileContent: string = fs.readFileSync(cpptoolsJsonFile).toString();\r\n                let newSettings: Settings = <Settings>JSON.parse(fileContent);\r\n                this.intelliSenseEngineDefault.Value = util.isNumber(newSettings.defaultIntelliSenseEngine) ? newSettings.defaultIntelliSenseEngine : this.intelliSenseEngineDefault.DefaultValue;\r\n                this.recursiveIncludesDefault.Value = util.isNumber(newSettings.recursiveIncludes) ? newSettings.recursiveIncludes : this.recursiveIncludesDefault.DefaultValue;\r\n                this.gotoDefIntelliSenseDefault.Value = util.isNumber(newSettings.gotoDefIntelliSense) ? newSettings.gotoDefIntelliSense : this.gotoDefIntelliSenseDefault.DefaultValue;\r\n                this.settings = {\r\n                    defaultIntelliSenseEngine: this.intelliSenseEngineDefault.Value,\r\n                    recursiveIncludes: this.recursiveIncludesDefault.Value,\r\n                    gotoDefIntelliSense: this.gotoDefIntelliSenseDefault.Value\r\n                };\r\n            }\r\n        } catch (error) {\r\n            // Ignore any cpptoolsJsonFile errors\r\n        }\r\n    }\r\n\r\n    private downloadCpptoolsJsonPkgAsync(): Promise<void> {\r\n        let hasError: boolean = false;\r\n        let telemetryProperties: { [key: string]: string } = {};\r\n        const localConfigPath: string = util.getExtensionFilePath(localConfigFile);\r\n        return util.downloadFileToDestination(\"https://go.microsoft.com/fwlink/?linkid=2026205\", localConfigPath)\r\n            .catch((error) => {\r\n                // More specific error info is not likely to be helpful, and we get detailed download data from the initial install.\r\n                hasError = true;\r\n            })\r\n            .then(() => {\r\n                this.updateSettings();\r\n                telemetryProperties['success'] = (!hasError).toString();\r\n                Telemetry.logDebuggerEvent(\"cpptoolsJsonDownload\", telemetryProperties);\r\n            });\r\n    }\r\n}\r\n\r\nlet settings: ABTestSettings;\r\n\r\nexport function getABTestSettings(): ABTestSettings {\r\n    if (!settings) {\r\n        settings = new ABTestSettings();\r\n    }\r\n    return settings;\r\n}\r\n","\"use strict\";\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IsInitialized = !process.env[\"APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL\"];\r\nif (exports.IsInitialized) {\r\n    var publishers = require(\"diagnostic-channel-publishers\");\r\n    var individualOptOuts = process.env[\"APPLICATION_INSIGHTS_NO_PATCH_MODULES\"] || \"\";\r\n    var unpatchedModules = individualOptOuts.split(\",\");\r\n    var modules = {\r\n        bunyan: publishers.bunyan,\r\n        console: publishers.console,\r\n        mongodb: publishers.mongodb,\r\n        mongodbCore: publishers.mongodbCore,\r\n        mysql: publishers.mysql,\r\n        redis: publishers.redis,\r\n        pg: publishers.pg,\r\n        pgPool: publishers.pgPool,\r\n        winston: publishers.winston\r\n    };\r\n    for (var mod in modules) {\r\n        if (unpatchedModules.indexOf(mod) === -1) {\r\n            modules[mod].enable();\r\n        }\r\n    }\r\n}\r\nfunction registerContextPreservation(cb) {\r\n    if (!exports.IsInitialized) {\r\n        return;\r\n    }\r\n    require(\"diagnostic-channel\").channel.addContextPreservation(cb);\r\n}\r\nexports.registerContextPreservation = registerContextPreservation;\r\n//# sourceMappingURL=initialization.js.map","module.exports = require(\"crypto\");","\"use strict\";\r\nvar http = require(\"http\");\r\nvar https = require(\"https\");\r\nvar Logging = require(\"../Library/Logging\");\r\nvar Util = require(\"../Library/Util\");\r\nvar RequestResponseHeaders = require(\"../Library/RequestResponseHeaders\");\r\nvar HttpDependencyParser = require(\"./HttpDependencyParser\");\r\nvar CorrelationContextManager_1 = require(\"./CorrelationContextManager\");\r\nvar DiagChannel = require(\"./diagnostic-channel/initialization\");\r\nvar AutoCollectHttpDependencies = (function () {\r\n    function AutoCollectHttpDependencies(client) {\r\n        if (!!AutoCollectHttpDependencies.INSTANCE) {\r\n            throw new Error(\"Client request tracking should be configured from the applicationInsights object\");\r\n        }\r\n        AutoCollectHttpDependencies.INSTANCE = this;\r\n        this._client = client;\r\n    }\r\n    AutoCollectHttpDependencies.prototype.enable = function (isEnabled) {\r\n        this._isEnabled = isEnabled;\r\n        if (this._isEnabled && !this._isInitialized) {\r\n            this._initialize();\r\n        }\r\n        if (DiagChannel.IsInitialized) {\r\n            require(\"./diagnostic-channel/mongodb.sub\").enable(isEnabled, this._client);\r\n            require(\"./diagnostic-channel/mysql.sub\").enable(isEnabled, this._client);\r\n            require(\"./diagnostic-channel/redis.sub\").enable(isEnabled, this._client);\r\n            require(\"./diagnostic-channel/postgres.sub\").enable(isEnabled, this._client);\r\n        }\r\n    };\r\n    AutoCollectHttpDependencies.prototype.isInitialized = function () {\r\n        return this._isInitialized;\r\n    };\r\n    AutoCollectHttpDependencies.prototype._initialize = function () {\r\n        var _this = this;\r\n        this._isInitialized = true;\r\n        var originalGet = http.get;\r\n        var originalRequest = http.request;\r\n        var originalHttpsRequest = https.request;\r\n        var clientRequestPatch = function (request, options) {\r\n            var shouldCollect = !options[AutoCollectHttpDependencies.disableCollectionRequestOption] &&\r\n                !request[AutoCollectHttpDependencies.alreadyAutoCollectedFlag];\r\n            request[AutoCollectHttpDependencies.alreadyAutoCollectedFlag] = true;\r\n            if (request && options && shouldCollect) {\r\n                AutoCollectHttpDependencies.trackRequest(_this._client, { options: options, request: request });\r\n            }\r\n        };\r\n        // On node >= v0.11.12 and < 9.0 (excluding 8.9.0) https.request just calls http.request (with additional options).\r\n        // On node < 0.11.12, 8.9.0, and 9.0 > https.request is handled separately\r\n        // Patch both and leave a flag to not double-count on versions that just call through\r\n        // We add the flag to both http and https to protect against strange double collection in other scenarios\r\n        http.request = function (options) {\r\n            var requestArgs = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                requestArgs[_i - 1] = arguments[_i];\r\n            }\r\n            var request = originalRequest.call.apply(originalRequest, [http, options].concat(requestArgs));\r\n            clientRequestPatch(request, options);\r\n            return request;\r\n        };\r\n        https.request = function (options) {\r\n            var requestArgs = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                requestArgs[_i - 1] = arguments[_i];\r\n            }\r\n            var request = originalHttpsRequest.call.apply(originalHttpsRequest, [https, options].concat(requestArgs));\r\n            clientRequestPatch(request, options);\r\n            return request;\r\n        };\r\n        // Node 8 calls http.request from http.get using a local reference!\r\n        // We have to patch .get manually in this case and can't just assume request is enough\r\n        // We have to replace the entire method in this case. We can't call the original.\r\n        // This is because calling the original will give us no chance to set headers as it internally does .end().\r\n        http.get = function (options) {\r\n            var requestArgs = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                requestArgs[_i - 1] = arguments[_i];\r\n            }\r\n            var request = (_a = http.request).call.apply(_a, [http, options].concat(requestArgs));\r\n            request.end();\r\n            return request;\r\n            var _a;\r\n        };\r\n        https.get = function (options) {\r\n            var requestArgs = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                requestArgs[_i - 1] = arguments[_i];\r\n            }\r\n            var request = (_a = https.request).call.apply(_a, [https, options].concat(requestArgs));\r\n            request.end();\r\n            return request;\r\n            var _a;\r\n        };\r\n    };\r\n    /**\r\n     * Tracks an outgoing request. Because it may set headers this method must be called before\r\n     * writing content to or ending the request.\r\n     */\r\n    AutoCollectHttpDependencies.trackRequest = function (client, telemetry) {\r\n        if (!telemetry.options || !telemetry.request || !client) {\r\n            Logging.info(\"AutoCollectHttpDependencies.trackRequest was called with invalid parameters: \", !telemetry.options, !telemetry.request, !client);\r\n            return;\r\n        }\r\n        var requestParser = new HttpDependencyParser(telemetry.options, telemetry.request);\r\n        var currentContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\r\n        var uniqueRequestId = currentContext && currentContext.operation && (currentContext.operation.parentId + AutoCollectHttpDependencies.requestNumber++ + '.');\r\n        // Add the source correlationId to the request headers, if a value was not already provided.\r\n        // The getHeader/setHeader methods aren't available on very old Node versions, and\r\n        // are not included in the v0.10 type declarations currently used. So check if the\r\n        // methods exist before invoking them.\r\n        if (Util.canIncludeCorrelationHeader(client, requestParser.getUrl()) && telemetry.request.getHeader && telemetry.request.setHeader) {\r\n            if (client.config && client.config.correlationId) {\r\n                var correlationHeader = telemetry.request.getHeader(RequestResponseHeaders.requestContextHeader);\r\n                if (correlationHeader) {\r\n                    var components = correlationHeader.split(\",\");\r\n                    var key_1 = RequestResponseHeaders.requestContextSourceKey + \"=\";\r\n                    if (!components.some(function (value) { return value.substring(0, key_1.length) === key_1; })) {\r\n                        telemetry.request.setHeader(RequestResponseHeaders.requestContextHeader, correlationHeader + \",\" + RequestResponseHeaders.requestContextSourceKey + \"=\" + client.config.correlationId);\r\n                    }\r\n                }\r\n                else {\r\n                    telemetry.request.setHeader(RequestResponseHeaders.requestContextHeader, RequestResponseHeaders.requestContextSourceKey + \"=\" + client.config.correlationId);\r\n                }\r\n            }\r\n            if (currentContext && currentContext.operation) {\r\n                telemetry.request.setHeader(RequestResponseHeaders.requestIdHeader, uniqueRequestId);\r\n                // Also set legacy headers\r\n                telemetry.request.setHeader(RequestResponseHeaders.parentIdHeader, currentContext.operation.id);\r\n                telemetry.request.setHeader(RequestResponseHeaders.rootIdHeader, uniqueRequestId);\r\n                var correlationContextHeader = currentContext.customProperties.serializeToHeader();\r\n                if (correlationContextHeader) {\r\n                    telemetry.request.setHeader(RequestResponseHeaders.correlationContextHeader, correlationContextHeader);\r\n                }\r\n            }\r\n        }\r\n        // Collect dependency telemetry about the request when it finishes.\r\n        if (telemetry.request.on) {\r\n            telemetry.request.on('response', function (response) {\r\n                requestParser.onResponse(response);\r\n                var dependencyTelemetry = requestParser.getDependencyTelemetry(telemetry, uniqueRequestId);\r\n                dependencyTelemetry.contextObjects = dependencyTelemetry.contextObjects || {};\r\n                dependencyTelemetry.contextObjects[\"http.RequestOptions\"] = telemetry.options;\r\n                dependencyTelemetry.contextObjects[\"http.ClientRequest\"] = telemetry.request;\r\n                dependencyTelemetry.contextObjects[\"http.ClientResponse\"] = response;\r\n                client.trackDependency(dependencyTelemetry);\r\n            });\r\n            telemetry.request.on('error', function (e) {\r\n                requestParser.onError(e);\r\n                var dependencyTelemetry = requestParser.getDependencyTelemetry(telemetry, uniqueRequestId);\r\n                dependencyTelemetry.contextObjects = dependencyTelemetry.contextObjects || {};\r\n                dependencyTelemetry.contextObjects[\"http.RequestOptions\"] = telemetry.options;\r\n                dependencyTelemetry.contextObjects[\"http.ClientRequest\"] = telemetry.request;\r\n                dependencyTelemetry.contextObjects[\"Error\"] = e;\r\n                client.trackDependency(dependencyTelemetry);\r\n            });\r\n        }\r\n    };\r\n    AutoCollectHttpDependencies.prototype.dispose = function () {\r\n        AutoCollectHttpDependencies.INSTANCE = null;\r\n        this.enable(false);\r\n        this._isInitialized = false;\r\n    };\r\n    AutoCollectHttpDependencies.disableCollectionRequestOption = 'disableAppInsightsAutoCollection';\r\n    AutoCollectHttpDependencies.requestNumber = 1;\r\n    AutoCollectHttpDependencies.alreadyAutoCollectedFlag = '_appInsightsAutoCollected';\r\n    return AutoCollectHttpDependencies;\r\n}());\r\nmodule.exports = AutoCollectHttpDependencies;\r\n//# sourceMappingURL=HttpDependencies.js.map","module.exports = require(\"http\");","\"use strict\";\r\nvar Util = require(\"./Util\");\r\nvar Logging = require(\"./Logging\");\r\nvar CorrelationIdManager = (function () {\r\n    function CorrelationIdManager() {\r\n    }\r\n    CorrelationIdManager.queryCorrelationId = function (config, callback) {\r\n        // GET request to `${this.endpointBase}/api/profiles/${this.instrumentationKey}/appId`\r\n        // If it 404s, the iKey is bad and we should give up\r\n        // If it fails otherwise, try again later\r\n        var appIdUrlString = config.profileQueryEndpoint + \"/api/profiles/\" + config.instrumentationKey + \"/appId\";\r\n        if (CorrelationIdManager.completedLookups.hasOwnProperty(appIdUrlString)) {\r\n            callback(CorrelationIdManager.completedLookups[appIdUrlString]);\r\n            return;\r\n        }\r\n        else if (CorrelationIdManager.pendingLookups[appIdUrlString]) {\r\n            CorrelationIdManager.pendingLookups[appIdUrlString].push(callback);\r\n            return;\r\n        }\r\n        CorrelationIdManager.pendingLookups[appIdUrlString] = [callback];\r\n        var fetchAppId = function () {\r\n            if (!CorrelationIdManager.pendingLookups[appIdUrlString]) {\r\n                // This query has been cancelled.\r\n                return;\r\n            }\r\n            var requestOptions = {\r\n                method: 'GET',\r\n                // Ensure this request is not captured by auto-collection.\r\n                // Note: we don't refer to the property in HttpDependencyParser because that would cause a cyclical dependency\r\n                disableAppInsightsAutoCollection: true\r\n            };\r\n            Logging.info(CorrelationIdManager.TAG, requestOptions);\r\n            var req = Util.makeRequest(config, appIdUrlString, requestOptions, function (res) {\r\n                if (res.statusCode === 200) {\r\n                    // Success; extract the appId from the body\r\n                    var appId_1 = \"\";\r\n                    res.setEncoding(\"utf-8\");\r\n                    res.on('data', function (data) {\r\n                        appId_1 += data;\r\n                    });\r\n                    res.on('end', function () {\r\n                        Logging.info(CorrelationIdManager.TAG, appId_1);\r\n                        var result = CorrelationIdManager.correlationIdPrefix + appId_1;\r\n                        CorrelationIdManager.completedLookups[appIdUrlString] = result;\r\n                        if (CorrelationIdManager.pendingLookups[appIdUrlString]) {\r\n                            CorrelationIdManager.pendingLookups[appIdUrlString].forEach(function (cb) { return cb(result); });\r\n                        }\r\n                        delete CorrelationIdManager.pendingLookups[appIdUrlString];\r\n                    });\r\n                }\r\n                else if (res.statusCode >= 400 && res.statusCode < 500) {\r\n                    // Not found, probably a bad key. Do not try again.\r\n                    CorrelationIdManager.completedLookups[appIdUrlString] = undefined;\r\n                    delete CorrelationIdManager.pendingLookups[appIdUrlString];\r\n                }\r\n                else {\r\n                    // Retry after timeout.\r\n                    setTimeout(fetchAppId, config.correlationIdRetryIntervalMs);\r\n                }\r\n            });\r\n            if (req) {\r\n                req.on('error', function (error) {\r\n                    // Unable to contact endpoint.\r\n                    // Do nothing for now.\r\n                    Logging.warn(CorrelationIdManager.TAG, error);\r\n                });\r\n                req.end();\r\n            }\r\n        };\r\n        setTimeout(fetchAppId, 0);\r\n    };\r\n    CorrelationIdManager.cancelCorrelationIdQuery = function (config, callback) {\r\n        var appIdUrlString = config.profileQueryEndpoint + \"/api/profiles/\" + config.instrumentationKey + \"/appId\";\r\n        var pendingLookups = CorrelationIdManager.pendingLookups[appIdUrlString];\r\n        if (pendingLookups) {\r\n            CorrelationIdManager.pendingLookups[appIdUrlString] = pendingLookups.filter(function (cb) { return cb != callback; });\r\n            if (CorrelationIdManager.pendingLookups[appIdUrlString].length == 0) {\r\n                delete CorrelationIdManager.pendingLookups[appIdUrlString];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Generate a request Id according to https://github.com/lmolkova/correlation/blob/master/hierarchical_request_id.md\r\n     * @param parentId\r\n     */\r\n    CorrelationIdManager.generateRequestId = function (parentId) {\r\n        if (parentId) {\r\n            parentId = parentId[0] == '|' ? parentId : '|' + parentId;\r\n            if (parentId[parentId.length - 1] !== '.') {\r\n                parentId += '.';\r\n            }\r\n            var suffix = (CorrelationIdManager.currentRootId++).toString(16);\r\n            return CorrelationIdManager.appendSuffix(parentId, suffix, '_');\r\n        }\r\n        else {\r\n            return CorrelationIdManager.generateRootId();\r\n        }\r\n    };\r\n    /**\r\n     * Given a hierarchical identifier of the form |X.*\r\n     * return the root identifier X\r\n     * @param id\r\n     */\r\n    CorrelationIdManager.getRootId = function (id) {\r\n        var endIndex = id.indexOf('.');\r\n        if (endIndex < 0) {\r\n            endIndex = id.length;\r\n        }\r\n        var startIndex = id[0] === '|' ? 1 : 0;\r\n        return id.substring(startIndex, endIndex);\r\n    };\r\n    CorrelationIdManager.generateRootId = function () {\r\n        return '|' + Util.w3cTraceId() + '.';\r\n    };\r\n    CorrelationIdManager.appendSuffix = function (parentId, suffix, delimiter) {\r\n        if (parentId.length + suffix.length < CorrelationIdManager.requestIdMaxLength) {\r\n            return parentId + suffix + delimiter;\r\n        }\r\n        // Combined identifier would be too long, so we must truncate it.\r\n        // We need 9 characters of space: 8 for the overflow ID, 1 for the\r\n        // overflow delimiter '#'\r\n        var trimPosition = CorrelationIdManager.requestIdMaxLength - 9;\r\n        if (parentId.length > trimPosition) {\r\n            for (; trimPosition > 1; --trimPosition) {\r\n                var c = parentId[trimPosition - 1];\r\n                if (c === '.' || c === '_') {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (trimPosition <= 1) {\r\n            // parentId is not a valid ID\r\n            return CorrelationIdManager.generateRootId();\r\n        }\r\n        suffix = Util.randomu32().toString(16);\r\n        while (suffix.length < 8) {\r\n            suffix = '0' + suffix;\r\n        }\r\n        return parentId.substring(0, trimPosition) + suffix + '#';\r\n    };\r\n    CorrelationIdManager.TAG = \"CorrelationIdManager\";\r\n    CorrelationIdManager.correlationIdPrefix = \"cid-v1:\";\r\n    // To avoid extraneous HTTP requests, we maintain a queue of callbacks waiting on a particular appId lookup,\r\n    // as well as a cache of completed lookups so future requests can be resolved immediately.\r\n    CorrelationIdManager.pendingLookups = {};\r\n    CorrelationIdManager.completedLookups = {};\r\n    CorrelationIdManager.requestIdMaxLength = 1024;\r\n    CorrelationIdManager.currentRootId = Util.randomu32();\r\n    return CorrelationIdManager;\r\n}());\r\nmodule.exports = CorrelationIdManager;\r\n//# sourceMappingURL=CorrelationIdManager.js.map","module.exports = require(\"net\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't recevied the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","\"use strict\";\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path = require(\"path\");\r\nvar semver = require(\"semver\");\r\n/* tslint:disable-next-line:no-var-requires */\r\nvar moduleModule = require(\"module\");\r\nvar nativeModules = Object.keys(process.binding(\"natives\"));\r\nvar originalRequire = moduleModule.prototype.require;\r\nfunction makePatchingRequire(knownPatches) {\r\n    var patchedModules = {};\r\n    return function patchedRequire(moduleId) {\r\n        var originalModule = originalRequire.apply(this, arguments);\r\n        if (knownPatches[moduleId]) {\r\n            // Fetch the specific path of the module\r\n            var modulePath = moduleModule._resolveFilename(moduleId, this);\r\n            if (patchedModules.hasOwnProperty(modulePath)) {\r\n                // This module has already been patched, no need to reapply\r\n                return patchedModules[modulePath];\r\n            }\r\n            var moduleVersion = void 0;\r\n            if (nativeModules.indexOf(moduleId) < 0) {\r\n                try {\r\n                    moduleVersion = originalRequire.call(this, path.join(moduleId, \"package.json\")).version;\r\n                }\r\n                catch (e) {\r\n                    // This should only happen if moduleId is actually a path rather than a module\r\n                    // This is not a supported scenario\r\n                    return originalModule;\r\n                }\r\n            }\r\n            else {\r\n                // This module is implemented natively so we cannot find a package.json\r\n                // Instead, take the version of node itself\r\n                moduleVersion = process.version.substring(1);\r\n            }\r\n            var prereleaseTagIndex = moduleVersion.indexOf(\"-\");\r\n            if (prereleaseTagIndex >= 0) {\r\n                // We ignore prerelease tags to avoid impossible to fix gaps in support\r\n                // e.g. supporting console in >= 4.0.0 would otherwise not include\r\n                // 8.0.0-pre\r\n                moduleVersion = moduleVersion.substring(0, prereleaseTagIndex);\r\n            }\r\n            var modifiedModule = originalModule;\r\n            for (var _i = 0, _a = knownPatches[moduleId]; _i < _a.length; _i++) {\r\n                var modulePatcher = _a[_i];\r\n                if (semver.satisfies(moduleVersion, modulePatcher.versionSpecifier)) {\r\n                    modifiedModule = modulePatcher.patch(modifiedModule, modulePath);\r\n                }\r\n            }\r\n            return patchedModules[modulePath] = modifiedModule;\r\n        }\r\n        return originalModule;\r\n    };\r\n}\r\nexports.makePatchingRequire = makePatchingRequire;\r\n//# sourceMappingURL=patchRequire.js.map","module.exports = require(\"module\");","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AvailabilityData = require(\"./AvailabilityData\");\r\nexports.Base = require(\"./Base\");\r\nexports.ContextTagKeys = require(\"./ContextTagKeys\");\r\nexports.Data = require(\"./Data\");\r\nexports.DataPoint = require(\"./DataPoint\");\r\nexports.DataPointType = require(\"./DataPointType\");\r\nexports.Domain = require(\"./Domain\");\r\nexports.Envelope = require(\"./Envelope\");\r\nexports.EventData = require(\"./EventData\");\r\nexports.ExceptionData = require(\"./ExceptionData\");\r\nexports.ExceptionDetails = require(\"./ExceptionDetails\");\r\nexports.MessageData = require(\"./MessageData\");\r\nexports.MetricData = require(\"./MetricData\");\r\nexports.PageViewData = require(\"./PageViewData\");\r\nexports.RemoteDependencyData = require(\"./RemoteDependencyData\");\r\nexports.RequestData = require(\"./RequestData\");\r\nexports.SeverityLevel = require(\"./SeverityLevel\");\r\nexports.StackFrame = require(\"./StackFrame\");\r\n//# sourceMappingURL=index.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\n/**\r\n * Data struct to contain only C section with custom fields.\r\n */\r\nvar Base = (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nmodule.exports = Base;\r\n//# sourceMappingURL=Base.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nvar DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\nmodule.exports = DataPointType;\r\n//# sourceMappingURL=DataPointType.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = (function (_super) {\r\n    __extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nmodule.exports = EventData;\r\n//# sourceMappingURL=EventData.js.map","\"use strict\";\r\nvar os = require(\"os\");\r\nvar Logging = require(\"../Library/Logging\");\r\nvar AutoCollectPerformance = (function () {\r\n    function AutoCollectPerformance(client) {\r\n        if (!!AutoCollectPerformance.INSTANCE) {\r\n            throw new Error(\"Performance tracking should be configured from the applicationInsights object\");\r\n        }\r\n        AutoCollectPerformance.INSTANCE = this;\r\n        this._isInitialized = false;\r\n        this._client = client;\r\n    }\r\n    AutoCollectPerformance.prototype.enable = function (isEnabled) {\r\n        var _this = this;\r\n        this._isEnabled = isEnabled;\r\n        if (this._isEnabled && !this._isInitialized) {\r\n            this._isInitialized = true;\r\n        }\r\n        if (isEnabled) {\r\n            if (!this._handle) {\r\n                this._lastCpus = os.cpus();\r\n                this._lastRequests = {\r\n                    totalRequestCount: AutoCollectPerformance._totalRequestCount,\r\n                    totalFailedRequestCount: AutoCollectPerformance._totalFailedRequestCount,\r\n                    time: +new Date\r\n                };\r\n                if (typeof process.cpuUsage === 'function') {\r\n                    this._lastAppCpuUsage = process.cpuUsage();\r\n                }\r\n                this._lastHrtime = process.hrtime();\r\n                this._handle = setInterval(function () { return _this.trackPerformance(); }, 60000);\r\n                this._handle.unref(); // Allow the app to terminate even while this loop is going on\r\n            }\r\n        }\r\n        else {\r\n            if (this._handle) {\r\n                clearInterval(this._handle);\r\n                this._handle = undefined;\r\n            }\r\n        }\r\n    };\r\n    AutoCollectPerformance.countRequest = function (request, response) {\r\n        var _this = this;\r\n        if (!AutoCollectPerformance.isEnabled()) {\r\n            return;\r\n        }\r\n        var start = +new Date;\r\n        if (!request || !response) {\r\n            Logging.warn(\"AutoCollectPerformance.countRequest was called with invalid parameters: \", !!request, !!response);\r\n            return;\r\n        }\r\n        // response listeners\r\n        if (typeof response.once === \"function\") {\r\n            response.once(\"finish\", function () {\r\n                var end = +new Date;\r\n                _this._lastRequestExecutionTime = end - start;\r\n                AutoCollectPerformance._totalRequestCount++;\r\n                if (response.statusCode >= 400) {\r\n                    AutoCollectPerformance._totalFailedRequestCount++;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    AutoCollectPerformance.prototype.isInitialized = function () {\r\n        return this._isInitialized;\r\n    };\r\n    AutoCollectPerformance.isEnabled = function () {\r\n        return AutoCollectPerformance.INSTANCE && AutoCollectPerformance.INSTANCE._isEnabled;\r\n    };\r\n    AutoCollectPerformance.prototype.trackPerformance = function () {\r\n        this._trackCpu();\r\n        this._trackMemory();\r\n        this._trackNetwork();\r\n    };\r\n    AutoCollectPerformance.prototype._trackCpu = function () {\r\n        // this reports total ms spent in each category since the OS was booted, to calculate percent it is necessary\r\n        // to find the delta since the last measurement\r\n        var cpus = os.cpus();\r\n        if (cpus && cpus.length && this._lastCpus && cpus.length === this._lastCpus.length) {\r\n            var totalUser = 0;\r\n            var totalSys = 0;\r\n            var totalNice = 0;\r\n            var totalIdle = 0;\r\n            var totalIrq = 0;\r\n            for (var i = 0; !!cpus && i < cpus.length; i++) {\r\n                var cpu = cpus[i];\r\n                var lastCpu = this._lastCpus[i];\r\n                var name = \"% cpu(\" + i + \") \";\r\n                var model = cpu.model;\r\n                var speed = cpu.speed;\r\n                var times = cpu.times;\r\n                var lastTimes = lastCpu.times;\r\n                // user cpu time (or) % CPU time spent in user space\r\n                var user = (times.user - lastTimes.user) || 0;\r\n                totalUser += user;\r\n                // system cpu time (or) % CPU time spent in kernel space\r\n                var sys = (times.sys - lastTimes.sys) || 0;\r\n                totalSys += sys;\r\n                // user nice cpu time (or) % CPU time spent on low priority processes\r\n                var nice = (times.nice - lastTimes.nice) || 0;\r\n                totalNice += nice;\r\n                // idle cpu time (or) % CPU time spent idle\r\n                var idle = (times.idle - lastTimes.idle) || 0;\r\n                totalIdle += idle;\r\n                // irq (or) % CPU time spent servicing/handling hardware interrupts\r\n                var irq = (times.irq - lastTimes.irq) || 0;\r\n                totalIrq += irq;\r\n            }\r\n            // Calculate % of total cpu time (user + system) this App Process used (Only supported by node v6.1.0+)\r\n            var appCpuPercent = undefined;\r\n            if (typeof process.cpuUsage === 'function') {\r\n                var appCpuUsage = process.cpuUsage();\r\n                var hrtime = process.hrtime();\r\n                var totalApp = ((appCpuUsage.user - this._lastAppCpuUsage.user) + (appCpuUsage.system - this._lastAppCpuUsage.system)) || 0;\r\n                if (typeof this._lastHrtime !== 'undefined' && this._lastHrtime.length === 2) {\r\n                    var elapsedTime = ((hrtime[0] - this._lastHrtime[0]) * 1e6 + (hrtime[1] - this._lastHrtime[1]) / 1e3) || 0; // convert to microseconds\r\n                    appCpuPercent = 100 * totalApp / (elapsedTime * cpus.length);\r\n                }\r\n                // Set previous\r\n                this._lastAppCpuUsage = appCpuUsage;\r\n                this._lastHrtime = hrtime;\r\n            }\r\n            var combinedTotal = (totalUser + totalSys + totalNice + totalIdle + totalIrq) || 1;\r\n            this._client.trackMetric({ name: \"\\\\Processor(_Total)\\\\% Processor Time\", value: ((combinedTotal - totalIdle) / combinedTotal) * 100 });\r\n            this._client.trackMetric({ name: \"\\\\Process(??APP_WIN32_PROC??)\\\\% Processor Time\", value: appCpuPercent || ((totalUser / combinedTotal) * 100) });\r\n        }\r\n        this._lastCpus = cpus;\r\n    };\r\n    AutoCollectPerformance.prototype._trackMemory = function () {\r\n        var freeMem = os.freemem();\r\n        var usedMem = process.memoryUsage().rss;\r\n        this._client.trackMetric({ name: \"\\\\Process(??APP_WIN32_PROC??)\\\\Private Bytes\", value: usedMem });\r\n        this._client.trackMetric({ name: \"\\\\Memory\\\\Available Bytes\", value: freeMem });\r\n    };\r\n    AutoCollectPerformance.prototype._trackNetwork = function () {\r\n        // track total request counters\r\n        var lastRequests = this._lastRequests;\r\n        var requests = {\r\n            totalRequestCount: AutoCollectPerformance._totalRequestCount,\r\n            totalFailedRequestCount: AutoCollectPerformance._totalFailedRequestCount,\r\n            time: +new Date\r\n        };\r\n        var intervalRequests = (requests.totalRequestCount - lastRequests.totalRequestCount) || 0;\r\n        var intervalFailedRequests = (requests.totalFailedRequestCount - lastRequests.totalFailedRequestCount) || 0;\r\n        var elapsedMs = requests.time - lastRequests.time;\r\n        var elapsedSeconds = elapsedMs / 1000;\r\n        if (elapsedMs > 0) {\r\n            var requestsPerSec = intervalRequests / elapsedSeconds;\r\n            var failedRequestsPerSec = intervalFailedRequests / elapsedSeconds;\r\n            this._client.trackMetric({ name: \"\\\\ASP.NET Applications(??APP_W3SVC_PROC??)\\\\Requests/Sec\", value: requestsPerSec });\r\n            this._client.trackMetric({ name: \"\\\\ASP.NET Applications(??APP_W3SVC_PROC??)\\\\Request Execution Time\", value: AutoCollectPerformance._lastRequestExecutionTime });\r\n        }\r\n        this._lastRequests = requests;\r\n    };\r\n    AutoCollectPerformance.prototype.dispose = function () {\r\n        AutoCollectPerformance.INSTANCE = null;\r\n        this.enable(false);\r\n        this._isInitialized = false;\r\n    };\r\n    AutoCollectPerformance._totalRequestCount = 0;\r\n    AutoCollectPerformance._totalFailedRequestCount = 0;\r\n    AutoCollectPerformance._lastRequestExecutionTime = 0;\r\n    return AutoCollectPerformance;\r\n}());\r\nmodule.exports = AutoCollectPerformance;\r\n//# sourceMappingURL=Performance.js.map","\"use strict\";\r\n/**\r\n * Base class for helpers that read data from HTTP requst/response objects and convert them\r\n * into the telemetry contract objects.\r\n */\r\nvar RequestParser = (function () {\r\n    function RequestParser() {\r\n    }\r\n    /**\r\n     * Gets a url parsed out from request options\r\n     */\r\n    RequestParser.prototype.getUrl = function () {\r\n        return this.url;\r\n    };\r\n    RequestParser.prototype.RequestParser = function () {\r\n        this.startTime = +new Date();\r\n    };\r\n    RequestParser.prototype._setStatus = function (status, error) {\r\n        var endTime = +new Date();\r\n        this.duration = endTime - this.startTime;\r\n        this.statusCode = status;\r\n        var properties = this.properties || {};\r\n        if (error) {\r\n            if (typeof error === \"string\") {\r\n                properties[\"error\"] = error;\r\n            }\r\n            else if (error instanceof Error) {\r\n                properties[\"error\"] = error.message;\r\n            }\r\n            else if (typeof error === \"object\") {\r\n                for (var key in error) {\r\n                    properties[key] = error[key] && error[key].toString && error[key].toString();\r\n                }\r\n            }\r\n        }\r\n        this.properties = properties;\r\n    };\r\n    RequestParser.prototype._isSuccess = function () {\r\n        return (0 < this.statusCode) && (this.statusCode < 400);\r\n    };\r\n    return RequestParser;\r\n}());\r\nmodule.exports = RequestParser;\r\n//# sourceMappingURL=RequestParser.js.map","\"use strict\";\r\nvar http = require(\"http\");\r\nvar https = require(\"https\");\r\nvar Logging = require(\"../Library/Logging\");\r\nvar Util = require(\"../Library/Util\");\r\nvar RequestResponseHeaders = require(\"../Library/RequestResponseHeaders\");\r\nvar HttpRequestParser = require(\"./HttpRequestParser\");\r\nvar CorrelationContextManager_1 = require(\"./CorrelationContextManager\");\r\nvar AutoCollectPerformance = require(\"./Performance\");\r\nvar AutoCollectHttpRequests = (function () {\r\n    function AutoCollectHttpRequests(client) {\r\n        if (!!AutoCollectHttpRequests.INSTANCE) {\r\n            throw new Error(\"Server request tracking should be configured from the applicationInsights object\");\r\n        }\r\n        AutoCollectHttpRequests.INSTANCE = this;\r\n        this._client = client;\r\n    }\r\n    AutoCollectHttpRequests.prototype.enable = function (isEnabled) {\r\n        this._isEnabled = isEnabled;\r\n        // Autocorrelation requires automatic monitoring of incoming server requests\r\n        // Disabling autocollection but enabling autocorrelation will still enable\r\n        // request monitoring but will not produce request events\r\n        if ((this._isAutoCorrelating || this._isEnabled || AutoCollectPerformance.isEnabled()) && !this._isInitialized) {\r\n            this.useAutoCorrelation(this._isAutoCorrelating);\r\n            this._initialize();\r\n        }\r\n    };\r\n    AutoCollectHttpRequests.prototype.useAutoCorrelation = function (isEnabled) {\r\n        if (isEnabled && !this._isAutoCorrelating) {\r\n            CorrelationContextManager_1.CorrelationContextManager.enable();\r\n        }\r\n        else if (!isEnabled && this._isAutoCorrelating) {\r\n            CorrelationContextManager_1.CorrelationContextManager.disable();\r\n        }\r\n        this._isAutoCorrelating = isEnabled;\r\n    };\r\n    AutoCollectHttpRequests.prototype.isInitialized = function () {\r\n        return this._isInitialized;\r\n    };\r\n    AutoCollectHttpRequests.prototype.isAutoCorrelating = function () {\r\n        return this._isAutoCorrelating;\r\n    };\r\n    AutoCollectHttpRequests.prototype._generateCorrelationContext = function (requestParser) {\r\n        if (!this._isAutoCorrelating) {\r\n            return;\r\n        }\r\n        return CorrelationContextManager_1.CorrelationContextManager.generateContextObject(requestParser.getOperationId(this._client.context.tags), requestParser.getRequestId(), requestParser.getOperationName(this._client.context.tags), requestParser.getCorrelationContextHeader());\r\n    };\r\n    AutoCollectHttpRequests.prototype._initialize = function () {\r\n        var _this = this;\r\n        this._isInitialized = true;\r\n        var wrapOnRequestHandler = function (onRequest) {\r\n            if (!onRequest) {\r\n                return undefined;\r\n            }\r\n            if (typeof onRequest !== 'function') {\r\n                throw new Error('onRequest handler must be a function');\r\n            }\r\n            return function (request, response) {\r\n                var shouldCollect = request && !request[AutoCollectHttpRequests.alreadyAutoCollectedFlag];\r\n                if (request && shouldCollect) {\r\n                    // Set up correlation context\r\n                    var requestParser_1 = new HttpRequestParser(request);\r\n                    var correlationContext = _this._generateCorrelationContext(requestParser_1);\r\n                    // Note: Check for if correlation is enabled happens within this method.\r\n                    // If not enabled, function will directly call the callback.\r\n                    CorrelationContextManager_1.CorrelationContextManager.runWithContext(correlationContext, function () {\r\n                        if (_this._isEnabled) {\r\n                            // Mark as auto collected\r\n                            request[AutoCollectHttpRequests.alreadyAutoCollectedFlag] = true;\r\n                            // Auto collect request\r\n                            AutoCollectHttpRequests.trackRequest(_this._client, { request: request, response: response }, requestParser_1);\r\n                        }\r\n                        // Add this request to the performance counter\r\n                        // Note: Check for if perf counters are enabled happens within this method.\r\n                        // TODO: Refactor common bits between trackRequest and countRequest so they can\r\n                        // be used together, even when perf counters are on, and request tracking is off\r\n                        AutoCollectPerformance.countRequest(request, response);\r\n                        if (typeof onRequest === \"function\") {\r\n                            onRequest(request, response);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    if (typeof onRequest === \"function\") {\r\n                        onRequest(request, response);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n        // The `http.createServer` function will instantiate a new http.Server object.\r\n        // Inside the Server's constructor, it is using addListener to register the\r\n        // onRequest handler. So there are two ways to inject the wrapped onRequest handler:\r\n        // 1) Overwrite Server.prototype.addListener (and .on()) globally and not patching\r\n        //    the http.createServer call. Or\r\n        // 2) Overwrite the http.createServer method and add a patched addListener to the\r\n        //    fresh server instance. This seems more stable for possible future changes as\r\n        //    it also covers the case where the Server might not use addListener to manage\r\n        //    the callback internally.\r\n        //    And also as long as the constructor uses addListener to add the handle, it is\r\n        //    ok to patch the addListener after construction only. Because if we would patch\r\n        //    the prototype one and the createServer method, we would wrap the handler twice\r\n        //    in case of the constructor call.\r\n        var wrapServerEventHandler = function (server) {\r\n            var originalAddListener = server.addListener.bind(server);\r\n            server.addListener = function (eventType, eventHandler) {\r\n                switch (eventType) {\r\n                    case 'request':\r\n                    case 'checkContinue':\r\n                        return originalAddListener(eventType, wrapOnRequestHandler(eventHandler));\r\n                    default:\r\n                        return originalAddListener(eventType, eventHandler);\r\n                }\r\n            };\r\n            // on is an alias to addListener only\r\n            server.on = server.addListener;\r\n        };\r\n        var originalHttpServer = http.createServer;\r\n        http.createServer = function (onRequest) {\r\n            // todo: get a pointer to the server so the IP address can be read from server.address\r\n            var server = originalHttpServer(wrapOnRequestHandler(onRequest));\r\n            wrapServerEventHandler(server);\r\n            return server;\r\n        };\r\n        var originalHttpsServer = https.createServer;\r\n        https.createServer = function (options, onRequest) {\r\n            var server = originalHttpsServer(options, wrapOnRequestHandler(onRequest));\r\n            wrapServerEventHandler(server);\r\n            return server;\r\n        };\r\n    };\r\n    /**\r\n     * Tracks a request synchronously (doesn't wait for response 'finish' event)\r\n     */\r\n    AutoCollectHttpRequests.trackRequestSync = function (client, telemetry) {\r\n        if (!telemetry.request || !telemetry.response || !client) {\r\n            Logging.info(\"AutoCollectHttpRequests.trackRequestSync was called with invalid parameters: \", !telemetry.request, !telemetry.response, !client);\r\n            return;\r\n        }\r\n        AutoCollectHttpRequests.addResponseCorrelationIdHeader(client, telemetry.response);\r\n        // store data about the request\r\n        var correlationContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\r\n        var requestParser = new HttpRequestParser(telemetry.request, (correlationContext && correlationContext.operation.parentId));\r\n        // Overwrite correlation context with request parser results\r\n        if (correlationContext) {\r\n            correlationContext.operation.id = requestParser.getOperationId(client.context.tags) || correlationContext.operation.id;\r\n            correlationContext.operation.name = requestParser.getOperationName(client.context.tags) || correlationContext.operation.name;\r\n            correlationContext.operation.parentId = requestParser.getRequestId() || correlationContext.operation.parentId;\r\n            correlationContext.customProperties.addHeaderData(requestParser.getCorrelationContextHeader());\r\n        }\r\n        AutoCollectHttpRequests.endRequest(client, requestParser, telemetry, telemetry.duration, telemetry.error);\r\n    };\r\n    /**\r\n     * Tracks a request by listening to the response 'finish' event\r\n     */\r\n    AutoCollectHttpRequests.trackRequest = function (client, telemetry, _requestParser) {\r\n        if (!telemetry.request || !telemetry.response || !client) {\r\n            Logging.info(\"AutoCollectHttpRequests.trackRequest was called with invalid parameters: \", !telemetry.request, !telemetry.response, !client);\r\n            return;\r\n        }\r\n        // store data about the request\r\n        var correlationContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\r\n        var requestParser = _requestParser || new HttpRequestParser(telemetry.request, correlationContext && correlationContext.operation.parentId);\r\n        if (Util.canIncludeCorrelationHeader(client, requestParser.getUrl())) {\r\n            AutoCollectHttpRequests.addResponseCorrelationIdHeader(client, telemetry.response);\r\n        }\r\n        // Overwrite correlation context with request parser results (if not an automatic track. we've already precalculated the correlation context in that case)\r\n        if (correlationContext && !_requestParser) {\r\n            correlationContext.operation.id = requestParser.getOperationId(client.context.tags) || correlationContext.operation.id;\r\n            correlationContext.operation.name = requestParser.getOperationName(client.context.tags) || correlationContext.operation.name;\r\n            correlationContext.operation.parentId = requestParser.getOperationParentId(client.context.tags) || correlationContext.operation.parentId;\r\n            correlationContext.customProperties.addHeaderData(requestParser.getCorrelationContextHeader());\r\n        }\r\n        // response listeners\r\n        if (telemetry.response.once) {\r\n            telemetry.response.once(\"finish\", function () {\r\n                AutoCollectHttpRequests.endRequest(client, requestParser, telemetry, null, null);\r\n            });\r\n        }\r\n        // track a failed request if an error is emitted\r\n        if (telemetry.request.on) {\r\n            telemetry.request.on(\"error\", function (error) {\r\n                AutoCollectHttpRequests.endRequest(client, requestParser, telemetry, null, error);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Add the target correlationId to the response headers, if not already provided.\r\n     */\r\n    AutoCollectHttpRequests.addResponseCorrelationIdHeader = function (client, response) {\r\n        if (client.config && client.config.correlationId &&\r\n            response.getHeader && response.setHeader && !response.headersSent) {\r\n            var correlationHeader = response.getHeader(RequestResponseHeaders.requestContextHeader);\r\n            if (correlationHeader) {\r\n                var components = correlationHeader.split(\",\");\r\n                var key_1 = RequestResponseHeaders.requestContextSourceKey + \"=\";\r\n                if (!components.some(function (value) { return value.substring(0, key_1.length) === key_1; })) {\r\n                    response.setHeader(RequestResponseHeaders.requestContextHeader, correlationHeader + \",\" + RequestResponseHeaders.requestContextSourceKey + \"=\" + client.config.correlationId);\r\n                }\r\n            }\r\n            else {\r\n                response.setHeader(RequestResponseHeaders.requestContextHeader, RequestResponseHeaders.requestContextSourceKey + \"=\" + client.config.correlationId);\r\n            }\r\n        }\r\n    };\r\n    AutoCollectHttpRequests.endRequest = function (client, requestParser, telemetry, ellapsedMilliseconds, error) {\r\n        if (error) {\r\n            requestParser.onError(error, ellapsedMilliseconds);\r\n        }\r\n        else {\r\n            requestParser.onResponse(telemetry.response, ellapsedMilliseconds);\r\n        }\r\n        var requestTelemetry = requestParser.getRequestTelemetry(telemetry);\r\n        requestTelemetry.tagOverrides = requestParser.getRequestTags(client.context.tags);\r\n        if (telemetry.tagOverrides) {\r\n            for (var key in telemetry.tagOverrides) {\r\n                requestTelemetry.tagOverrides[key] = telemetry.tagOverrides[key];\r\n            }\r\n        }\r\n        requestTelemetry.contextObjects = requestTelemetry.contextObjects || {};\r\n        requestTelemetry.contextObjects[\"http.ServerRequest\"] = telemetry.request;\r\n        requestTelemetry.contextObjects[\"http.ServerResponse\"] = telemetry.response;\r\n        client.trackRequest(requestTelemetry);\r\n    };\r\n    AutoCollectHttpRequests.prototype.dispose = function () {\r\n        AutoCollectHttpRequests.INSTANCE = null;\r\n        this.enable(false);\r\n        this._isInitialized = false;\r\n    };\r\n    AutoCollectHttpRequests.alreadyAutoCollectedFlag = '_appInsightsAutoCollected';\r\n    return AutoCollectHttpRequests;\r\n}());\r\nmodule.exports = AutoCollectHttpRequests;\r\n//# sourceMappingURL=HttpRequests.js.map","module.exports = require(\"zlib\");","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport { Client } from './client';\r\nimport { getCustomConfigProviders, CustomConfigurationProviderCollection } from './customProviders';\r\n\r\nlet ui: UI;\r\n\r\ninterface IndexableQuickPickItem extends vscode.QuickPickItem {\r\n    index: number;\r\n}\r\ninterface KeyedQuickPickItem extends vscode.QuickPickItem {\r\n    key: string;\r\n}\r\n\r\n// Higher numbers mean greater priority.\r\nenum ConfigurationPriority {\r\n    IncludePath = 1,\r\n    CompileCommands = 2,\r\n    CustomProvider = 3,\r\n}\r\n\r\ninterface ConfigurationResult {\r\n    configured: boolean;\r\n    priority: ConfigurationPriority;\r\n}\r\n\r\nexport class UI {\r\n    private navigationStatusBarItem: vscode.StatusBarItem;\r\n    private configStatusBarItem: vscode.StatusBarItem;\r\n    private browseEngineStatusBarItem: vscode.StatusBarItem;\r\n    private intelliSenseStatusBarItem: vscode.StatusBarItem;\r\n    private configurationUIPromise: Thenable<ConfigurationResult>;\r\n\r\n    constructor() {\r\n        // 1000 = priority, it needs to be high enough to be on the left of the Ln/Col.\r\n        this.navigationStatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 1000);\r\n        this.navigationStatusBarItem.tooltip = \"C/C++ Navigation\";\r\n        this.navigationStatusBarItem.command = \"C_Cpp.Navigate\";\r\n        this.ShowNavigation = true;\r\n\r\n        this.configStatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 2);\r\n        this.configStatusBarItem.command = \"C_Cpp.ConfigurationSelect\";\r\n        this.configStatusBarItem.tooltip = \"C/C++ Configuration\";\r\n        this.ShowConfiguration = true;\r\n\r\n        this.intelliSenseStatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 1);\r\n        this.intelliSenseStatusBarItem.text = \"\";\r\n        this.intelliSenseStatusBarItem.tooltip = \"Updating IntelliSense...\";\r\n        this.intelliSenseStatusBarItem.color = \"Red\";\r\n        this.ShowFlameIcon = true;\r\n\r\n        this.browseEngineStatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 0);\r\n        this.browseEngineStatusBarItem.text = \"\";\r\n        this.browseEngineStatusBarItem.tooltip = \"Discovering files...\";\r\n        this.browseEngineStatusBarItem.color = new vscode.ThemeColor(\"statusBar.foreground\");\r\n        this.browseEngineStatusBarItem.command = \"C_Cpp.ShowParsingCommands\";\r\n        this.ShowDBIcon = true;\r\n    }\r\n\r\n    private set NavigationLocation(location: string) {\r\n        this.navigationStatusBarItem.text = location;\r\n    }\r\n\r\n    private set ActiveConfig(label: string) {\r\n        this.configStatusBarItem.text = label;\r\n    }\r\n\r\n    private set TagParseStatus(label: string) {\r\n        this.browseEngineStatusBarItem.tooltip = label;\r\n    }\r\n\r\n    private get IsTagParsing(): boolean {\r\n        return this.browseEngineStatusBarItem.text !== \"\";\r\n    }\r\n    private set IsTagParsing(val: boolean) {\r\n        this.browseEngineStatusBarItem.text = val ? \"$(database)\" : \"\";\r\n        this.ShowDBIcon = val;\r\n    }\r\n\r\n    private get IsUpdatingIntelliSense(): boolean {\r\n        return this.intelliSenseStatusBarItem.text !== \"\";\r\n    }\r\n    private set IsUpdatingIntelliSense(val: boolean) {\r\n        this.intelliSenseStatusBarItem.text = val ? \"$(flame)\" : \"\";\r\n        this.ShowFlameIcon = val;\r\n    }\r\n\r\n    private set ShowNavigation(show: boolean) {\r\n        if (show) {\r\n            this.navigationStatusBarItem.show();\r\n        } else {\r\n            this.navigationStatusBarItem.hide();\r\n        }\r\n    }\r\n\r\n    private set ShowDBIcon(show: boolean) {\r\n        if (show && this.IsTagParsing) {\r\n            this.browseEngineStatusBarItem.show();\r\n        } else {\r\n            this.browseEngineStatusBarItem.hide();\r\n        }\r\n    }\r\n\r\n    private set ShowFlameIcon(show: boolean) {\r\n        if (show && this.IsUpdatingIntelliSense) {\r\n            this.intelliSenseStatusBarItem.show();\r\n        } else {\r\n            this.intelliSenseStatusBarItem.hide();\r\n        }\r\n    }\r\n\r\n    private set ShowConfiguration(show: boolean) {\r\n        if (show) {\r\n            this.configStatusBarItem.show();\r\n        } else {\r\n            this.configStatusBarItem.hide();\r\n        }\r\n    }\r\n\r\n    public activeDocumentChanged(): void {\r\n        let activeEditor: vscode.TextEditor = vscode.window.activeTextEditor;\r\n        let isCpp: boolean = (activeEditor && (activeEditor.document.languageId === \"cpp\" || activeEditor.document.languageId === \"c\"));\r\n\r\n        // It's sometimes desirable to see the config and icons when making settings changes.\r\n        let isSettingsJson: boolean = (activeEditor && (activeEditor.document.fileName.endsWith(\"c_cpp_properties.json\") || activeEditor.document.fileName.endsWith(\"settings.json\")));\r\n\r\n        this.ShowConfiguration = isCpp || isSettingsJson;\r\n        this.ShowDBIcon = isCpp || isSettingsJson;\r\n        this.ShowFlameIcon = isCpp || isSettingsJson;\r\n        this.ShowNavigation = isCpp;\r\n    }\r\n\r\n    public bind(client: Client): void {\r\n        client.TagParsingChanged(value => { this.IsTagParsing = value; });\r\n        client.IntelliSenseParsingChanged(value => { this.IsUpdatingIntelliSense = value; });\r\n        client.NavigationLocationChanged(value => { this.NavigationLocation = value; });\r\n        client.TagParserStatusChanged(value => { this.TagParseStatus = value; });\r\n        client.ActiveConfigChanged(value => { this.ActiveConfig = value; });\r\n    }\r\n\r\n    public showNavigationOptions(navigationList: string): void {\r\n        let options: vscode.QuickPickOptions = {};\r\n        options.placeHolder = \"Select where to navigate to\";\r\n\r\n        let items: IndexableQuickPickItem[] = [];\r\n        let navlist: string[] = navigationList.split(\";\");\r\n        for (let i: number = 0; i < navlist.length - 1; i += 2) {\r\n            items.push({ label: navlist[i], description: \"\", index: Number(navlist[i + 1]) });\r\n        }\r\n\r\n        vscode.window.showQuickPick(items, options)\r\n            .then(selection => {\r\n                if (!selection) {\r\n                    return;\r\n                }\r\n                vscode.window.activeTextEditor.revealRange(new vscode.Range(selection.index, 0, selection.index, 0), vscode.TextEditorRevealType.InCenter);\r\n                vscode.window.activeTextEditor.selection = new vscode.Selection(new vscode.Position(selection.index, 0), new vscode.Position(selection.index, 0));\r\n            });\r\n    }\r\n\r\n    public showConfigurations(configurationNames: string[]): Thenable<number> {\r\n        let options: vscode.QuickPickOptions = {};\r\n        options.placeHolder = \"Select a Configuration...\";\r\n\r\n        let items: IndexableQuickPickItem[] = [];\r\n        for (let i: number = 0; i < configurationNames.length; i++) {\r\n            items.push({ label: configurationNames[i], description: \"\", index: i });\r\n        }\r\n        items.push({ label: \"Edit Configurations...\", description: \"\", index: configurationNames.length });\r\n\r\n        return vscode.window.showQuickPick(items, options)\r\n            .then(selection => (selection) ? selection.index : -1);\r\n    }\r\n\r\n    public showConfigurationProviders(currentProvider: string|null): Thenable<string|undefined> {\r\n        let options: vscode.QuickPickOptions = {};\r\n        options.placeHolder = \"Select a Configuration Provider...\";\r\n        let providers: CustomConfigurationProviderCollection = getCustomConfigProviders();\r\n\r\n        let items: KeyedQuickPickItem[] = [];\r\n        providers.forEach(provider => {\r\n            let label: string = provider.name;\r\n            if (provider.extensionId === currentProvider) {\r\n                label += \" (active)\";\r\n            }\r\n            items.push({ label: label, description: \"\", key: provider.extensionId });\r\n        });\r\n        items.push({ label: \"(none)\", description: \"Disable the active configuration provider, if applicable.\", key: \"\" });\r\n\r\n        return vscode.window.showQuickPick(items, options)\r\n            .then(selection => (selection) ? selection.key : undefined);\r\n    }\r\n\r\n    public showCompileCommands(paths: string[]): Thenable<number> {\r\n        let options: vscode.QuickPickOptions = {};\r\n        options.placeHolder = \"Select a compile_commands.json...\";\r\n\r\n        let items: IndexableQuickPickItem[] = [];\r\n        for (let i: number = 0; i < paths.length; i++) {\r\n            items.push({label: paths[i], description: \"\", index: i});\r\n        }\r\n\r\n        return vscode.window.showQuickPick(items, options)\r\n            .then(selection => (selection) ? selection.index : -1);\r\n    }\r\n\r\n    public showWorkspaces(workspaceNames: { name: string; key: string }[]): Thenable<string> {\r\n        let options: vscode.QuickPickOptions = {};\r\n        options.placeHolder = \"Select a Workspace...\";\r\n\r\n        let items: KeyedQuickPickItem[] = [];\r\n        workspaceNames.forEach(name => items.push({ label: name.name, description: \"\", key: name.key }));\r\n\r\n        return vscode.window.showQuickPick(items, options)\r\n            .then(selection => (selection) ? selection.key : \"\");\r\n    }\r\n\r\n    public showParsingCommands(): Thenable<number> {\r\n        let options: vscode.QuickPickOptions = {};\r\n        options.placeHolder = \"Select a parsing command...\";\r\n\r\n        let items: IndexableQuickPickItem[];\r\n        items = [];\r\n        if (this.browseEngineStatusBarItem.tooltip === \"Parsing paused\") {\r\n            items.push({ label: \"Resume Parsing\", description: \"\", index: 1 });\r\n        } else {\r\n            items.push({ label: \"Pause Parsing\", description: \"\", index: 0 });\r\n        }\r\n        \r\n        return vscode.window.showQuickPick(items, options)\r\n            .then(selection => (selection) ? selection.index : -1);\r\n    }\r\n\r\n    public showConfigureIncludePathMessage(prompt: () => Thenable<boolean>, onSkip: () => void): void {\r\n        setTimeout(() => {\r\n            this.showConfigurationPrompt(ConfigurationPriority.IncludePath, prompt, onSkip);\r\n        }, 10000);\r\n    }\r\n\r\n    public showConfigureCompileCommandsMessage(prompt: () => Thenable<boolean>, onSkip: () => void): void {\r\n        setTimeout(() => {\r\n            this.showConfigurationPrompt(ConfigurationPriority.CompileCommands, prompt, onSkip);\r\n        }, 5000);\r\n    }\r\n\r\n    public showConfigureCustomProviderMessage(prompt: () => Thenable<boolean>, onSkip: () => void): void {\r\n        this.showConfigurationPrompt(ConfigurationPriority.CustomProvider, prompt, onSkip);\r\n    }\r\n\r\n    private showConfigurationPrompt(priority: ConfigurationPriority, prompt: () => Thenable<boolean>, onSkip: () => void): void {\r\n        let showPrompt: () => Thenable<ConfigurationResult> = async () => {\r\n            let configured: boolean = await prompt();\r\n            return Promise.resolve({\r\n                priority: priority,\r\n                configured: configured\r\n            });\r\n        };\r\n\r\n        if (this.configurationUIPromise) {\r\n            this.configurationUIPromise = this.configurationUIPromise.then(result => {\r\n                if (priority > result.priority) {\r\n                    return showPrompt();\r\n                } else if (!result.configured) {\r\n                    return showPrompt();\r\n                }\r\n                onSkip();\r\n                return Promise.resolve({\r\n                    priority: result.priority,\r\n                    configured: true\r\n                });\r\n            });\r\n        } else {\r\n            this.configurationUIPromise = showPrompt();\r\n        }\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.configStatusBarItem.dispose();\r\n        this.browseEngineStatusBarItem.dispose();\r\n        this.intelliSenseStatusBarItem.dispose();\r\n        this.navigationStatusBarItem.dispose();\r\n    }\r\n}\r\n\r\nexport function getUI(): UI {\r\n    if (ui === undefined) {\r\n        ui = new UI();\r\n    }\r\n    return ui;\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst fs = require(\"fs\");\r\nconst SemVer = require(\"semver\");\r\nconst client_1 = require(\"./client\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst colorProvider_1 = require(\"./colorProvider\");\r\nconst configuration_1 = require(\"./configuration\");\r\nconst implementation_1 = require(\"./implementation\");\r\nconst typeDefinition_1 = require(\"./typeDefinition\");\r\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\r\nconst foldingRange_1 = require(\"./foldingRange\");\r\nconst Is = require(\"./utils/is\");\r\nconst processes_1 = require(\"./utils/processes\");\r\n__export(require(\"./client\"));\r\nconst REQUIRED_VSCODE_VERSION = '^1.26'; // do not change format, updated by `updateVSCode` script\r\nvar Executable;\r\n(function (Executable) {\r\n    function is(value) {\r\n        return Is.string(value.command);\r\n    }\r\n    Executable.is = is;\r\n})(Executable || (Executable = {}));\r\nvar TransportKind;\r\n(function (TransportKind) {\r\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\r\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\r\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\r\n    TransportKind[TransportKind[\"socket\"] = 3] = \"socket\";\r\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\r\nvar Transport;\r\n(function (Transport) {\r\n    function isSocket(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.kind === TransportKind.socket && Is.number(candidate.port);\r\n    }\r\n    Transport.isSocket = isSocket;\r\n})(Transport || (Transport = {}));\r\nvar NodeModule;\r\n(function (NodeModule) {\r\n    function is(value) {\r\n        return Is.string(value.module);\r\n    }\r\n    NodeModule.is = is;\r\n})(NodeModule || (NodeModule = {}));\r\nvar StreamInfo;\r\n(function (StreamInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.writer !== void 0 && candidate.reader !== void 0;\r\n    }\r\n    StreamInfo.is = is;\r\n})(StreamInfo || (StreamInfo = {}));\r\nvar ChildProcessInfo;\r\n(function (ChildProcessInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.process !== void 0 && typeof candidate.detached === 'boolean';\r\n    }\r\n    ChildProcessInfo.is = is;\r\n})(ChildProcessInfo || (ChildProcessInfo = {}));\r\nclass LanguageClient extends client_1.BaseLanguageClient {\r\n    constructor(arg1, arg2, arg3, arg4, arg5) {\r\n        let id;\r\n        let name;\r\n        let serverOptions;\r\n        let clientOptions;\r\n        let forceDebug;\r\n        if (Is.string(arg2)) {\r\n            id = arg1;\r\n            name = arg2;\r\n            serverOptions = arg3;\r\n            clientOptions = arg4;\r\n            forceDebug = !!arg5;\r\n        }\r\n        else {\r\n            id = arg1.toLowerCase();\r\n            name = arg1;\r\n            serverOptions = arg2;\r\n            clientOptions = arg3;\r\n            forceDebug = arg4;\r\n        }\r\n        if (forceDebug === void 0) {\r\n            forceDebug = false;\r\n        }\r\n        super(id, name, clientOptions);\r\n        this._serverOptions = serverOptions;\r\n        this._forceDebug = forceDebug;\r\n        try {\r\n            this.checkVersion();\r\n        }\r\n        catch (error) {\r\n            if (Is.string(error.message)) {\r\n                this.outputChannel.appendLine(error.message);\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    checkVersion() {\r\n        let codeVersion = SemVer.parse(vscode_1.version);\r\n        if (!codeVersion) {\r\n            throw new Error(`No valid VS Code version detected. Version string is: ${vscode_1.version}`);\r\n        }\r\n        // Remove the insider pre-release since we stay API compatible.\r\n        if (codeVersion.prerelease && codeVersion.prerelease.length > 0) {\r\n            codeVersion.prerelease = [];\r\n        }\r\n        if (!SemVer.satisfies(codeVersion, REQUIRED_VSCODE_VERSION)) {\r\n            throw new Error(`The language client requires VS Code version ${REQUIRED_VSCODE_VERSION} but received version ${vscode_1.version}`);\r\n        }\r\n    }\r\n    stop() {\r\n        return super.stop().then(() => {\r\n            if (this._serverProcess) {\r\n                let toCheck = this._serverProcess;\r\n                this._serverProcess = undefined;\r\n                if (this._isDetached === void 0 || !this._isDetached) {\r\n                    this.checkProcessDied(toCheck);\r\n                }\r\n                this._isDetached = undefined;\r\n            }\r\n        });\r\n    }\r\n    checkProcessDied(childProcess) {\r\n        if (!childProcess) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            // Test if the process is still alive. Throws an exception if not\r\n            try {\r\n                process.kill(childProcess.pid, 0);\r\n                processes_1.terminate(childProcess);\r\n            }\r\n            catch (error) {\r\n                // All is fine.\r\n            }\r\n        }, 2000);\r\n    }\r\n    handleConnectionClosed() {\r\n        this._serverProcess = undefined;\r\n        super.handleConnectionClosed();\r\n    }\r\n    createMessageTransports(encoding) {\r\n        function getEnvironment(env) {\r\n            if (!env) {\r\n                return process.env;\r\n            }\r\n            let result = Object.create(null);\r\n            Object.keys(process.env).forEach(key => result[key] = process.env[key]);\r\n            Object.keys(env).forEach(key => result[key] = env[key]);\r\n            return result;\r\n        }\r\n        function startedInDebugMode() {\r\n            let args = process.execArgv;\r\n            if (args) {\r\n                return args.some((arg) => /^--debug=?/.test(arg) || /^--debug-brk=?/.test(arg) || /^--inspect=?/.test(arg) || /^--inspect-brk=?/.test(arg));\r\n            }\r\n            ;\r\n            return false;\r\n        }\r\n        let server = this._serverOptions;\r\n        // We got a function.\r\n        if (Is.func(server)) {\r\n            return server().then((result) => {\r\n                if (client_1.MessageTransports.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return result;\r\n                }\r\n                else if (StreamInfo.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(result.reader), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(result.writer) };\r\n                }\r\n                else {\r\n                    let cp;\r\n                    if (ChildProcessInfo.is(result)) {\r\n                        cp = result.process;\r\n                        this._isDetached = result.detached;\r\n                    }\r\n                    else {\r\n                        cp = result;\r\n                        this._isDetached = false;\r\n                    }\r\n                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(cp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(cp.stdin) };\r\n                }\r\n            });\r\n        }\r\n        let json;\r\n        let runDebug = server;\r\n        if (runDebug.run || runDebug.debug) {\r\n            // We are under debugging. So use debug as well.\r\n            if (typeof v8debug === 'object' || this._forceDebug || startedInDebugMode()) {\r\n                json = runDebug.debug;\r\n            }\r\n            else {\r\n                json = runDebug.run;\r\n            }\r\n        }\r\n        else {\r\n            json = server;\r\n        }\r\n        return this._getServerWorkingDir(json.options).then(serverWorkingDir => {\r\n            if (NodeModule.is(json) && json.module) {\r\n                let node = json;\r\n                let transport = node.transport || TransportKind.stdio;\r\n                if (node.runtime) {\r\n                    let args = [];\r\n                    let options = node.options || Object.create(null);\r\n                    if (options.execArgv) {\r\n                        options.execArgv.forEach(element => args.push(element));\r\n                    }\r\n                    args.push(node.module);\r\n                    if (node.args) {\r\n                        node.args.forEach(element => args.push(element));\r\n                    }\r\n                    let execOptions = Object.create(null);\r\n                    execOptions.cwd = serverWorkingDir;\r\n                    execOptions.env = getEnvironment(options.env);\r\n                    let pipeName = undefined;\r\n                    if (transport === TransportKind.ipc) {\r\n                        // exec options not correctly typed in lib\r\n                        execOptions.stdio = [null, null, null, 'ipc'];\r\n                        args.push('--node-ipc');\r\n                    }\r\n                    else if (transport === TransportKind.stdio) {\r\n                        args.push('--stdio');\r\n                    }\r\n                    else if (transport === TransportKind.pipe) {\r\n                        pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                        args.push(`--pipe=${pipeName}`);\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        args.push(`--socket=${transport.port}`);\r\n                    }\r\n                    args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                    if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                        let serverProcess = cp.spawn(node.runtime, args, execOptions);\r\n                        if (!serverProcess || !serverProcess.pid) {\r\n                            return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                        }\r\n                        this._serverProcess = serverProcess;\r\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                        if (transport === TransportKind.ipc) {\r\n                            serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(serverProcess) });\r\n                        }\r\n                        else {\r\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n                        }\r\n                    }\r\n                    else if (transport == TransportKind.pipe) {\r\n                        return vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                            let process = cp.spawn(node.runtime, args, execOptions);\r\n                            if (!process || !process.pid) {\r\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                            }\r\n                            this._serverProcess = process;\r\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return transport.onConnected().then((protocol) => {\r\n                                return { reader: protocol[0], writer: protocol[1] };\r\n                            });\r\n                        });\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        return vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                            let process = cp.spawn(node.runtime, args, execOptions);\r\n                            if (!process || !process.pid) {\r\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                            }\r\n                            this._serverProcess = process;\r\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return transport.onConnected().then((protocol) => {\r\n                                return { reader: protocol[0], writer: protocol[1] };\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    let pipeName = undefined;\r\n                    return new Promise((resolve, _reject) => {\r\n                        let args = node.args && node.args.slice() || [];\r\n                        if (transport === TransportKind.ipc) {\r\n                            args.push('--node-ipc');\r\n                        }\r\n                        else if (transport === TransportKind.stdio) {\r\n                            args.push('--stdio');\r\n                        }\r\n                        else if (transport === TransportKind.pipe) {\r\n                            pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                            args.push(`--pipe=${pipeName}`);\r\n                        }\r\n                        else if (Transport.isSocket(transport)) {\r\n                            args.push(`--socket=${transport.port}`);\r\n                        }\r\n                        args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                        let options = node.options || Object.create(null);\r\n                        options.execArgv = options.execArgv || [];\r\n                        options.cwd = serverWorkingDir;\r\n                        options.silent = true;\r\n                        if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                            let sp = cp.fork(node.module, args || [], options);\r\n                            this._serverProcess = sp;\r\n                            sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            if (transport === TransportKind.ipc) {\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(this._serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(this._serverProcess) });\r\n                            }\r\n                            else {\r\n                                resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(sp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(sp.stdin) });\r\n                            }\r\n                        }\r\n                        else if (transport === TransportKind.pipe) {\r\n                            vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                                let sp = cp.fork(node.module, args || [], options);\r\n                                this._serverProcess = sp;\r\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                transport.onConnected().then((protocol) => {\r\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                });\r\n                            });\r\n                        }\r\n                        else if (Transport.isSocket(transport)) {\r\n                            vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                                let sp = cp.fork(node.module, args || [], options);\r\n                                this._serverProcess = sp;\r\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                transport.onConnected().then((protocol) => {\r\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else if (Executable.is(json) && json.command) {\r\n                let command = json;\r\n                let args = command.args || [];\r\n                let options = Object.assign({}, command.options);\r\n                options.cwd = options.cwd || serverWorkingDir;\r\n                let serverProcess = cp.spawn(command.command, args, options);\r\n                if (!serverProcess || !serverProcess.pid) {\r\n                    return Promise.reject(`Launching server using command ${command.command} failed.`);\r\n                }\r\n                serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                this._serverProcess = serverProcess;\r\n                this._isDetached = !!options.detached;\r\n                return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n            }\r\n            return Promise.reject(new Error(`Unsupported server configuration ` + JSON.stringify(server, null, 4)));\r\n        });\r\n    }\r\n    registerProposedFeatures() {\r\n        this.registerFeatures(ProposedFeatures.createAll(this));\r\n    }\r\n    registerBuiltinFeatures() {\r\n        super.registerBuiltinFeatures();\r\n        this.registerFeature(new configuration_1.ConfigurationFeature(this));\r\n        this.registerFeature(new typeDefinition_1.TypeDefinitionFeature(this));\r\n        this.registerFeature(new implementation_1.ImplementationFeature(this));\r\n        this.registerFeature(new colorProvider_1.ColorProviderFeature(this));\r\n        this.registerFeature(new workspaceFolders_1.WorkspaceFoldersFeature(this));\r\n        this.registerFeature(new foldingRange_1.FoldingRangeFeature(this));\r\n    }\r\n    _mainGetRootPath() {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (!folders || folders.length === 0) {\r\n            return undefined;\r\n        }\r\n        let folder = folders[0];\r\n        if (folder.uri.scheme === 'file') {\r\n            return folder.uri.fsPath;\r\n        }\r\n        return undefined;\r\n    }\r\n    _getServerWorkingDir(options) {\r\n        let cwd = options && options.cwd;\r\n        if (!cwd) {\r\n            cwd = this.clientOptions.workspaceFolder\r\n                ? this.clientOptions.workspaceFolder.uri.fsPath\r\n                : this._mainGetRootPath();\r\n        }\r\n        if (cwd) {\r\n            // make sure the folder exists otherwise creating the process will fail\r\n            return new Promise(s => {\r\n                fs.lstat(cwd, (err, stats) => {\r\n                    s(!err && stats.isDirectory() ? cwd : undefined);\r\n                });\r\n            });\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n}\r\nexports.LanguageClient = LanguageClient;\r\nclass SettingMonitor {\r\n    constructor(_client, _setting) {\r\n        this._client = _client;\r\n        this._setting = _setting;\r\n        this._listeners = [];\r\n    }\r\n    start() {\r\n        vscode_1.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\r\n        this.onDidChangeConfiguration();\r\n        return new vscode_1.Disposable(() => {\r\n            if (this._client.needsStop()) {\r\n                this._client.stop();\r\n            }\r\n        });\r\n    }\r\n    onDidChangeConfiguration() {\r\n        let index = this._setting.indexOf('.');\r\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\r\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\r\n        let enabled = rest ? vscode_1.workspace.getConfiguration(primary).get(rest, false) : vscode_1.workspace.getConfiguration(primary);\r\n        if (enabled && this._client.needsStart()) {\r\n            this._client.start();\r\n        }\r\n        else if (!enabled && this._client.needsStop()) {\r\n            this._client.stop();\r\n        }\r\n    }\r\n}\r\nexports.SettingMonitor = SettingMonitor;\r\n// Exporting proposed protocol.\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    function createAll(_client) {\r\n        let result = [];\r\n        return result;\r\n    }\r\n    ProposedFeatures.createAll = createAll;\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCompletionItem extends code.CompletionItem {\r\n    constructor(label) {\r\n        super(label);\r\n    }\r\n}\r\nexports.default = ProtocolCompletionItem;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCodeLens extends code.CodeLens {\r\n    constructor(range) {\r\n        super(range);\r\n    }\r\n}\r\nexports.default = ProtocolCodeLens;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolDocumentLink extends code.DocumentLink {\r\n    constructor(range, target) {\r\n        super(range, target);\r\n    }\r\n}\r\nexports.default = ProtocolDocumentLink;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport { CppToolsTestHook, Status } from 'vscode-cpptools/out/testApi';\r\nimport * as vscode from 'vscode';\r\n\r\nexport class TestHook implements CppToolsTestHook {\r\n    private statusChangedEvent: vscode.EventEmitter<Status> = new vscode.EventEmitter<Status>();\r\n\r\n    public get StatusChanged(): vscode.Event<Status> {\r\n        return this.statusChangedEvent.event;\r\n    }\r\n\r\n    public get valid(): boolean {\r\n        return !!this.statusChangedEvent;\r\n    }\r\n\r\n    public updateStatus(status: Status): void {\r\n        this.statusChangedEvent.fire(status);\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.statusChangedEvent.dispose();\r\n        this.statusChangedEvent = null;\r\n    }\r\n}\r\n\r\nlet testHook: TestHook;\r\n\r\nexport function getTestHook(): TestHook {\r\n    if (!testHook || !testHook.valid) {\r\n        testHook = new TestHook();\r\n    }\r\n    return testHook;\r\n}","/*!\n * Tmp\n *\n * Copyright (c) 2011-2017 KARASZI Istvan <github@spam.raszi.hu>\n *\n * MIT Licensed\n */\n\n/*\n * Module dependencies.\n */\nconst fs = require('fs');\nconst path = require('path');\nconst crypto = require('crypto');\nconst osTmpDir = require('os-tmpdir');\nconst _c = process.binding('constants');\n\n/*\n * The working inner variables.\n */\nconst\n  /**\n   * The temporary directory.\n   * @type {string}\n   */\n  tmpDir = osTmpDir(),\n\n  // the random characters to choose from\n  RANDOM_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n\n  TEMPLATE_PATTERN = /XXXXXX/,\n\n  DEFAULT_TRIES = 3,\n\n  CREATE_FLAGS = (_c.O_CREAT || _c.fs.O_CREAT) | (_c.O_EXCL || _c.fs.O_EXCL) | (_c.O_RDWR || _c.fs.O_RDWR),\n\n  EBADF = _c.EBADF || _c.os.errno.EBADF,\n  ENOENT = _c.ENOENT || _c.os.errno.ENOENT,\n\n  DIR_MODE = 448 /* 0o700 */,\n  FILE_MODE = 384 /* 0o600 */,\n\n  // this will hold the objects need to be removed on exit\n  _removeObjects = [];\n\nvar\n  _gracefulCleanup = false,\n  _uncaughtException = false;\n\n/**\n * Random name generator based on crypto.\n * Adapted from http://blog.tompawlak.org/how-to-generate-random-values-nodejs-javascript\n *\n * @param {number} howMany\n * @returns {string} the generated random name\n * @private\n */\nfunction _randomChars(howMany) {\n  var\n    value = [],\n    rnd = null;\n\n  // make sure that we do not fail because we ran out of entropy\n  try {\n    rnd = crypto.randomBytes(howMany);\n  } catch (e) {\n    rnd = crypto.pseudoRandomBytes(howMany);\n  }\n\n  for (var i = 0; i < howMany; i++) {\n    value.push(RANDOM_CHARS[rnd[i] % RANDOM_CHARS.length]);\n  }\n\n  return value.join('');\n}\n\n/**\n * Checks whether the `obj` parameter is defined or not.\n *\n * @param {Object} obj\n * @returns {boolean} true if the object is undefined\n * @private\n */\nfunction _isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n\n/**\n * Parses the function arguments.\n *\n * This function helps to have optional arguments.\n *\n * @param {(Options|Function)} options\n * @param {Function} callback\n * @returns {Array} parsed arguments\n * @private\n */\nfunction _parseArguments(options, callback) {\n  if (typeof options == 'function') {\n    return [callback || {}, options];\n  }\n\n  if (_isUndefined(options)) {\n    return [{}, callback];\n  }\n\n  return [options, callback];\n}\n\n/**\n * Generates a new temporary name.\n *\n * @param {Object} opts\n * @returns {string} the new random name according to opts\n * @private\n */\nfunction _generateTmpName(opts) {\n  if (opts.name) {\n    return path.join(opts.dir || tmpDir, opts.name);\n  }\n\n  // mkstemps like template\n  if (opts.template) {\n    return opts.template.replace(TEMPLATE_PATTERN, _randomChars(6));\n  }\n\n  // prefix and postfix\n  const name = [\n    opts.prefix || 'tmp-',\n    process.pid,\n    _randomChars(12),\n    opts.postfix || ''\n  ].join('');\n\n  return path.join(opts.dir || tmpDir, name);\n}\n\n/**\n * Gets a temporary file name.\n *\n * @param {(Options|tmpNameCallback)} options options or callback\n * @param {?tmpNameCallback} callback the callback function\n */\nfunction tmpName(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1],\n    tries = opts.name ? 1 : opts.tries || DEFAULT_TRIES;\n\n  if (isNaN(tries) || tries < 0)\n    return cb(new Error('Invalid tries'));\n\n  if (opts.template && !opts.template.match(TEMPLATE_PATTERN))\n    return cb(new Error('Invalid template provided'));\n\n  (function _getUniqueName() {\n    const name = _generateTmpName(opts);\n\n    // check whether the path exists then retry if needed\n    fs.stat(name, function (err) {\n      if (!err) {\n        if (tries-- > 0) return _getUniqueName();\n\n        return cb(new Error('Could not get a unique tmp filename, max tries reached ' + name));\n      }\n\n      cb(null, name);\n    });\n  }());\n}\n\n/**\n * Synchronous version of tmpName.\n *\n * @param {Object} options\n * @returns {string} the generated random name\n * @throws {Error} if the options are invalid or could not generate a filename\n */\nfunction tmpNameSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0],\n    tries = opts.name ? 1 : opts.tries || DEFAULT_TRIES;\n\n  if (isNaN(tries) || tries < 0)\n    throw new Error('Invalid tries');\n\n  if (opts.template && !opts.template.match(TEMPLATE_PATTERN))\n    throw new Error('Invalid template provided');\n\n  do {\n    const name = _generateTmpName(opts);\n    try {\n      fs.statSync(name);\n    } catch (e) {\n      return name;\n    }\n  } while (tries-- > 0);\n\n  throw new Error('Could not get a unique tmp filename, max tries reached');\n}\n\n/**\n * Creates and opens a temporary file.\n *\n * @param {(Options|fileCallback)} options the config options or the callback function\n * @param {?fileCallback} callback\n */\nfunction file(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1];\n\n  opts.postfix = (_isUndefined(opts.postfix)) ? '.tmp' : opts.postfix;\n\n  // gets a temporary filename\n  tmpName(opts, function _tmpNameCreated(err, name) {\n    if (err) return cb(err);\n\n    // create and open the file\n    fs.open(name, CREATE_FLAGS, opts.mode || FILE_MODE, function _fileCreated(err, fd) {\n      if (err) return cb(err);\n\n      if (opts.discardDescriptor) {\n        return fs.close(fd, function _discardCallback(err) {\n          if (err) {\n            // Low probability, and the file exists, so this could be\n            // ignored.  If it isn't we certainly need to unlink the\n            // file, and if that fails too its error is more\n            // important.\n            try {\n              fs.unlinkSync(name);\n            } catch (e) {\n              if (!isENOENT(e)) {\n                err = e;\n              }\n            }\n            return cb(err);\n          }\n          cb(null, name, undefined, _prepareTmpFileRemoveCallback(name, -1, opts));\n        });\n      }\n      if (opts.detachDescriptor) {\n        return cb(null, name, fd, _prepareTmpFileRemoveCallback(name, -1, opts));\n      }\n      cb(null, name, fd, _prepareTmpFileRemoveCallback(name, fd, opts));\n    });\n  });\n}\n\n/**\n * Synchronous version of file.\n *\n * @param {Options} options\n * @returns {FileSyncObject} object consists of name, fd and removeCallback\n * @throws {Error} if cannot create a file\n */\nfunction fileSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0];\n\n  opts.postfix = opts.postfix || '.tmp';\n\n  const discardOrDetachDescriptor = opts.discardDescriptor || opts.detachDescriptor;\n  const name = tmpNameSync(opts);\n  var fd = fs.openSync(name, CREATE_FLAGS, opts.mode || FILE_MODE);\n  if (opts.discardDescriptor) {\n    fs.closeSync(fd); \n    fd = undefined;\n  }\n\n  return {\n    name: name,\n    fd: fd,\n    removeCallback: _prepareTmpFileRemoveCallback(name, discardOrDetachDescriptor ? -1 : fd, opts)\n  };\n}\n\n/**\n * Removes files and folders in a directory recursively.\n *\n * @param {string} root\n * @private\n */\nfunction _rmdirRecursiveSync(root) {\n  const dirs = [root];\n\n  do {\n    var\n      dir = dirs.pop(),\n      deferred = false,\n      files = fs.readdirSync(dir);\n\n    for (var i = 0, length = files.length; i < length; i++) {\n      var\n        file = path.join(dir, files[i]),\n        stat = fs.lstatSync(file); // lstat so we don't recurse into symlinked directories\n\n      if (stat.isDirectory()) {\n        if (!deferred) {\n          deferred = true;\n          dirs.push(dir);\n        }\n        dirs.push(file);\n      } else {\n        fs.unlinkSync(file);\n      }\n    }\n\n    if (!deferred) {\n      fs.rmdirSync(dir);\n    }\n  } while (dirs.length !== 0);\n}\n\n/**\n * Creates a temporary directory.\n *\n * @param {(Options|dirCallback)} options the options or the callback function\n * @param {?dirCallback} callback\n */\nfunction dir(options, callback) {\n  var\n    args = _parseArguments(options, callback),\n    opts = args[0],\n    cb = args[1];\n\n  // gets a temporary filename\n  tmpName(opts, function _tmpNameCreated(err, name) {\n    if (err) return cb(err);\n\n    // create the directory\n    fs.mkdir(name, opts.mode || DIR_MODE, function _dirCreated(err) {\n      if (err) return cb(err);\n\n      cb(null, name, _prepareTmpDirRemoveCallback(name, opts));\n    });\n  });\n}\n\n/**\n * Synchronous version of dir.\n *\n * @param {Options} options\n * @returns {DirSyncObject} object consists of name and removeCallback\n * @throws {Error} if it cannot create a directory\n */\nfunction dirSync(options) {\n  var\n    args = _parseArguments(options),\n    opts = args[0];\n\n  const name = tmpNameSync(opts);\n  fs.mkdirSync(name, opts.mode || DIR_MODE);\n\n  return {\n    name: name,\n    removeCallback: _prepareTmpDirRemoveCallback(name, opts)\n  };\n}\n\n/**\n * Prepares the callback for removal of the temporary file.\n *\n * @param {string} name the path of the file\n * @param {number} fd file descriptor\n * @param {Object} opts\n * @returns {fileCallback}\n * @private\n */\nfunction _prepareTmpFileRemoveCallback(name, fd, opts) {\n  const removeCallback = _prepareRemoveCallback(function _removeCallback(fdPath) {\n    try {\n      if (0 <= fdPath[0]) {\n        fs.closeSync(fdPath[0]);\n      }\n    }\n    catch (e) {\n      // under some node/windows related circumstances, a temporary file\n      // may have not be created as expected or the file was already closed\n      // by the user, in which case we will simply ignore the error\n      if (!isEBADF(e) && !isENOENT(e)) {\n        // reraise any unanticipated error\n        throw e;\n      }\n    }\n    try {\n      fs.unlinkSync(fdPath[1]);\n    }\n    catch (e) {\n      if (!isENOENT(e)) {\n        // reraise any unanticipated error\n        throw e;\n      }\n    }\n  }, [fd, name]);\n\n  if (!opts.keep) {\n    _removeObjects.unshift(removeCallback);\n  }\n\n  return removeCallback;\n}\n\n/**\n * Prepares the callback for removal of the temporary directory.\n *\n * @param {string} name\n * @param {Object} opts\n * @returns {Function} the callback\n * @private\n */\nfunction _prepareTmpDirRemoveCallback(name, opts) {\n  const removeFunction = opts.unsafeCleanup ? _rmdirRecursiveSync : fs.rmdirSync.bind(fs);\n  const removeCallback = _prepareRemoveCallback(removeFunction, name);\n\n  if (!opts.keep) {\n    _removeObjects.unshift(removeCallback);\n  }\n\n  return removeCallback;\n}\n\n/**\n * Creates a guarded function wrapping the removeFunction call.\n *\n * @param {Function} removeFunction\n * @param {Object} arg\n * @returns {Function}\n * @private\n */\nfunction _prepareRemoveCallback(removeFunction, arg) {\n  var called = false;\n\n  return function _cleanupCallback(next) {\n    if (!called) {\n      const index = _removeObjects.indexOf(_cleanupCallback);\n      if (index >= 0) {\n        _removeObjects.splice(index, 1);\n      }\n\n      called = true;\n      removeFunction(arg);\n    }\n\n    if (next) next(null);\n  };\n}\n\n/**\n * The garbage collector.\n *\n * @private\n */\nfunction _garbageCollector() {\n  if (_uncaughtException && !_gracefulCleanup) {\n    return;\n  }\n\n  // the function being called removes itself from _removeObjects,\n  // loop until _removeObjects is empty\n  while (_removeObjects.length) {\n    try {\n      _removeObjects[0].call(null);\n    } catch (e) {\n      // already removed?\n    }\n  }\n}\n\n/**\n * Helper for testing against EBADF to compensate changes made to Node 7.x under Windows.\n */\nfunction isEBADF(error) {\n  return isExpectedError(error, -EBADF, 'EBADF');\n}\n\n/**\n * Helper for testing against ENOENT to compensate changes made to Node 7.x under Windows.\n */\nfunction isENOENT(error) {\n  return isExpectedError(error, -ENOENT, 'ENOENT');\n}\n\n/**\n * Helper to determine whether the expected error code matches the actual code and errno,\n * which will differ between the supported node versions.\n *\n * - Node >= 7.0:\n *   error.code {String}\n *   error.errno {String|Number} any numerical value will be negated\n *\n * - Node >= 6.0 < 7.0:\n *   error.code {String}\n *   error.errno {Number} negated\n *\n * - Node >= 4.0 < 6.0: introduces SystemError\n *   error.code {String}\n *   error.errno {Number} negated\n *\n * - Node >= 0.10 < 4.0:\n *   error.code {Number} negated\n *   error.errno n/a\n */\nfunction isExpectedError(error, code, errno) {\n  return error.code == code || error.code == errno;\n}\n\n/**\n * Sets the graceful cleanup.\n *\n * Also removes the created files and directories when an uncaught exception occurs.\n */\nfunction setGracefulCleanup() {\n  _gracefulCleanup = true;\n}\n\nconst version = process.versions.node.split('.').map(function (value) {\n  return parseInt(value, 10);\n});\n\nif (version[0] === 0 && (version[1] < 9 || version[1] === 9 && version[2] < 5)) {\n  process.addListener('uncaughtException', function _uncaughtExceptionThrown(err) {\n    _uncaughtException = true;\n    _garbageCollector();\n\n    throw err;\n  });\n}\n\nprocess.addListener('exit', function _exit(code) {\n  if (code) _uncaughtException = true;\n  _garbageCollector();\n});\n\n/**\n * Configuration options.\n *\n * @typedef {Object} Options\n * @property {?number} tries the number of tries before give up the name generation\n * @property {?string} template the \"mkstemp\" like filename template\n * @property {?string} name fix name\n * @property {?string} dir the tmp directory to use\n * @property {?string} prefix prefix for the generated name\n * @property {?string} postfix postfix for the generated name\n */\n\n/**\n * @typedef {Object} FileSyncObject\n * @property {string} name the name of the file\n * @property {string} fd the file descriptor\n * @property {fileCallback} removeCallback the callback function to remove the file\n */\n\n/**\n * @typedef {Object} DirSyncObject\n * @property {string} name the name of the directory\n * @property {fileCallback} removeCallback the callback function to remove the directory\n */\n\n/**\n * @callback tmpNameCallback\n * @param {?Error} err the error object if anything goes wrong\n * @param {string} name the temporary file name\n */\n\n/**\n * @callback fileCallback\n * @param {?Error} err the error object if anything goes wrong\n * @param {string} name the temporary file name\n * @param {number} fd the file descriptor\n * @param {cleanupCallback} fn the cleanup callback function\n */\n\n/**\n * @callback dirCallback\n * @param {?Error} err the error object if anything goes wrong\n * @param {string} name the temporary file name\n * @param {cleanupCallback} fn the cleanup callback function\n */\n\n/**\n * Removes the temporary created file or directory.\n *\n * @callback cleanupCallback\n * @param {simpleCallback} [next] function to call after entry was removed\n */\n\n/**\n * Callback function for function composition.\n * @see {@link https://github.com/raszi/node-tmp/issues/57|raszi/node-tmp#57}\n *\n * @callback simpleCallback\n */\n\n// exporting all the needed methods\nmodule.exports.tmpdir = tmpDir;\n\nmodule.exports.dir = dir;\nmodule.exports.dirSync = dirSync;\n\nmodule.exports.file = file;\nmodule.exports.fileSync = fileSync;\n\nmodule.exports.tmpName = tmpName;\nmodule.exports.tmpNameSync = tmpNameSync;\n\nmodule.exports.setGracefulCleanup = setGracefulCleanup;\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nexport class PackageVersion {\r\n    major: number;\r\n    minor: number;\r\n    patch: number;\r\n    suffix?: string;\r\n    suffixVersion: number;\r\n\r\n    constructor(version: string) {\r\n        const tokens: string[] = version.split(new RegExp('[-\\\\.]', 'g')); // Match against dots and dashes\r\n        if (tokens.length < 3) {\r\n            throw new Error('Failed to parse version string: ' + version);\r\n        }\r\n\r\n        this.major = parseInt(tokens[0]);\r\n        this.minor = parseInt(tokens[1]);\r\n        this.patch = parseInt(tokens[2]);\r\n\r\n        if (tokens.length > 3) {\r\n            const firstDigitOffset: number = tokens[3].search(new RegExp(/(\\d)/)); // Find first occurrence of 0-9\r\n            if (firstDigitOffset !== -1) {\r\n                this.suffix = tokens[3].substring(0, firstDigitOffset);\r\n                this.suffixVersion = parseInt(tokens[3].substring(firstDigitOffset));\r\n            } else {\r\n                this.suffix = tokens[3];\r\n                this.suffixVersion = 1;\r\n            }\r\n        } else {\r\n            this.suffix = undefined;\r\n            this.suffixVersion = 0;\r\n        }\r\n\r\n        if (this.major === undefined || this.minor === undefined || this.patch === undefined) {\r\n            throw new Error('Failed to parse version string: ' + version);\r\n        }\r\n    }\r\n\r\n    public isGreaterThan(other: PackageVersion, suffixStr: string = 'insiders'): boolean {\r\n        if ((this.suffix && !this.suffix.startsWith(suffixStr)) || (other.suffix && !other.suffix.startsWith(suffixStr))) {\r\n            return false;\r\n        }\r\n\r\n        let diff: number = this.major - other.major;\r\n        if (diff) {\r\n            return diff > 0;\r\n        } else if (diff = this.minor - other.minor) {\r\n            return diff > 0;\r\n        } else if (diff = this.patch - other.patch) {\r\n            return diff > 0;\r\n        } else if (this.suffix) {\r\n            return (other.suffix && this.suffixVersion > other.suffixVersion);\r\n        } else {\r\n            return other.suffix ? true : false;\r\n        }\r\n    }\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as LanguageServer from './LanguageServer/extension';\r\n\r\nclass TemporaryCommandRegistrar {\r\n    // Used to save/re-execute commands used before the extension has activated (e.g. delayed by dependency downloading).\r\n    private delayedCommandsToExecute: Set<string>;\r\n    private tempCommands: vscode.Disposable[]; // Need to save this to unregister/dispose the temporary commands.\r\n    private isLanguageServerDisabled: boolean = false;\r\n    private isActivationReady: boolean = false;\r\n\r\n    private commandsToRegister: string[] = [\r\n        \"C_Cpp.ConfigurationEdit\",\r\n        \"C_Cpp.ConfigurationSelect\",\r\n        \"C_Cpp.ConfigurationProviderSelect\",\r\n        \"C_Cpp.SwitchHeaderSource\",\r\n        \"C_Cpp.Navigate\",\r\n        \"C_Cpp.GoToDeclaration\",\r\n        \"C_Cpp.PeekDeclaration\",\r\n        \"C_Cpp.ToggleErrorSquiggles\",\r\n        \"C_Cpp.ToggleIncludeFallback\",\r\n        \"C_Cpp.ToggleDimInactiveRegions\",\r\n        \"C_Cpp.ShowReleaseNotes\",\r\n        \"C_Cpp.ResetDatabase\",\r\n        \"C_Cpp.PauseParsing\",\r\n        \"C_Cpp.ResumeParsing\",\r\n        \"C_Cpp.ShowParsingCommands\",\r\n        \"C_Cpp.TakeSurvey\"\r\n    ];\r\n\r\n    constructor() {\r\n        this.tempCommands = [];\r\n        this.delayedCommandsToExecute = new Set<string>();\r\n\r\n        // Add temp commands that invoke the real commands after download/install is complete (preventing an error message)\r\n        this.commandsToRegister.forEach(command => {\r\n            this.registerTempCommand(command);\r\n        });\r\n    }\r\n\r\n    public registerTempCommand(command: string): void {\r\n        this.tempCommands.push(vscode.commands.registerCommand(command, () => {\r\n            if (this.isLanguageServerDisabled) {\r\n                vscode.window.showInformationMessage(\"The command is disabled because \\\"C_Cpp.intelliSenseEngine\\\" is set to \\\"Disabled\\\".\");\r\n                return;\r\n            }\r\n            this.delayedCommandsToExecute.add(command);\r\n            if (this.isActivationReady) {\r\n                LanguageServer.activate(true);\r\n            }\r\n        }));\r\n    }\r\n\r\n    public disableLanguageServer(): void {\r\n        this.isLanguageServerDisabled = true;\r\n    }\r\n\r\n    public activateLanguageServer(): void {\r\n        // Main activation code.\r\n        LanguageServer.activate(this.delayedCommandsToExecute.size > 0);\r\n        this.isActivationReady = true;\r\n    }\r\n    \r\n    public clearTempCommands(): void {\r\n        this.tempCommands.forEach((command) => {\r\n            command.dispose();\r\n        });\r\n        this.tempCommands = [];\r\n    }\r\n\r\n    public executeDelayedCommands(): void {\r\n        this.delayedCommandsToExecute.forEach((command) => {\r\n            vscode.commands.executeCommand(command);\r\n        });\r\n        this.delayedCommandsToExecute.clear();\r\n    }\r\n}\r\n\r\nlet tempCommandRegistrar: TemporaryCommandRegistrar;\r\n\r\nexport function initializeTemporaryCommandRegistrar(): void {\r\n    tempCommandRegistrar = new TemporaryCommandRegistrar();\r\n}\r\n\r\nexport function getTemporaryCommandRegistrarInstance(): TemporaryCommandRegistrar {\r\n    return tempCommandRegistrar;\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as os from 'os';\r\nimport { AttachPicker, RemoteAttachPicker, AttachItemsProvider } from './attachToProcess';\r\nimport { NativeAttachItemsProviderFactory } from './nativeAttach';\r\nimport { QuickPickConfigurationProvider, ConfigurationAssetProviderFactory, CppVsDbgConfigurationProvider, CppDbgConfigurationProvider, ConfigurationSnippetProvider, IConfigurationAssetProvider } from './configurationProvider';\r\nimport { CppdbgDebugAdapterDescriptorFactory, CppvsdbgDebugAdapterDescriptorFactory } from './debugAdapterDescriptorFactory';\r\nimport * as util from '../common';\r\nimport * as Telemetry from '../telemetry';\r\n\r\n// The extension deactivate method is asynchronous, so we handle the disposables ourselves instead of using extensonContext.subscriptions.\r\nlet disposables: vscode.Disposable[] = [];\r\n\r\nexport function buildAndDebugActiveFileStr(): string {\r\n    return \" build and debug active file\";\r\n}\r\n\r\nexport function initialize(context: vscode.ExtensionContext): void {\r\n    // Activate Process Picker Commands\r\n    let attachItemsProvider: AttachItemsProvider = NativeAttachItemsProviderFactory.Get();\r\n    let attacher: AttachPicker = new AttachPicker(attachItemsProvider);\r\n    disposables.push(vscode.commands.registerCommand('extension.pickNativeProcess', () => attacher.ShowAttachEntries()));\r\n    let remoteAttacher: RemoteAttachPicker = new RemoteAttachPicker();\r\n    disposables.push(vscode.commands.registerCommand('extension.pickRemoteNativeProcess', (any) => remoteAttacher.ShowAttachEntries(any)));\r\n\r\n    // Activate ConfigurationProvider\r\n    let configurationProvider: IConfigurationAssetProvider = ConfigurationAssetProviderFactory.getConfigurationProvider();\r\n    // On non-windows platforms, the cppvsdbg debugger will not be registered for initial configurations.\r\n    // This will cause it to not show up on the dropdown list.\r\n    let vsdbgProvider: CppVsDbgConfigurationProvider = null;\r\n    if (os.platform() === 'win32') {\r\n        vsdbgProvider = new CppVsDbgConfigurationProvider(configurationProvider);\r\n        disposables.push(vscode.debug.registerDebugConfigurationProvider('cppvsdbg', new QuickPickConfigurationProvider(vsdbgProvider)));\r\n    }\r\n    const provider: CppDbgConfigurationProvider = new CppDbgConfigurationProvider(configurationProvider);\r\n    disposables.push(vscode.debug.registerDebugConfigurationProvider('cppdbg', new QuickPickConfigurationProvider(provider)));\r\n\r\n    disposables.push(vscode.commands.registerTextEditorCommand(\"C_Cpp.BuildAndDebugActiveFile\", async (textEditor: vscode.TextEditor, edit: vscode.TextEditorEdit, ...args: any[]) => {\r\n        const folder: vscode.WorkspaceFolder = vscode.workspace.getWorkspaceFolder(textEditor.document.uri);\r\n        if (!folder) {\r\n            // Not enabled because we do not react to single-file mode correctly yet.\r\n            // We get an ENOENT when the user's c_cpp_properties.json is attempted to be parsed.\r\n            // The DefaultClient will also have its configuration accessed, but since it doesn't exist it errors out.\r\n            vscode.window.showErrorMessage('This command is not yet available for single-file mode.');\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (!util.fileIsCOrCppSource(textEditor.document.uri.fsPath)) {\r\n            vscode.window.showErrorMessage('Cannot build and debug because the active file is not a C or C++ source file.');\r\n            return Promise.resolve();\r\n        }\r\n        \r\n        let configs: vscode.DebugConfiguration[] = (await provider.provideDebugConfigurations(folder)).filter(config => {\r\n            return config.name.indexOf(buildAndDebugActiveFileStr()) !== -1;\r\n        });\r\n\r\n        if (vsdbgProvider) {\r\n            let vsdbgConfigs: vscode.DebugConfiguration[] = (await vsdbgProvider.provideDebugConfigurations(folder)).filter(config => {\r\n                return config.name.indexOf(buildAndDebugActiveFileStr()) !== -1;\r\n            });\r\n            if (vsdbgConfigs) {\r\n                configs.push(...vsdbgConfigs);\r\n            }\r\n        }\r\n\r\n        interface MenuItem extends vscode.QuickPickItem {\r\n            configuration: vscode.DebugConfiguration;\r\n        }\r\n\r\n        const items: MenuItem[] = configs.map<MenuItem>(config => {\r\n            return {label: config.name, configuration: config};\r\n        });\r\n\r\n        vscode.window.showQuickPick(items, {placeHolder: (items.length === 0 ? \"No compiler found\" : \"Select a compiler\" )}).then(async selection => {\r\n            if (!selection) {\r\n                return; // User canceled it.\r\n            }\r\n            if (selection.label.startsWith(\"cl.exe\")) {\r\n                if (!process.env.DevEnvDir || process.env.DevEnvDir.length === 0) {\r\n                    vscode.window.showErrorMessage('cl.exe build and debug is only usable when VS Code is run from the Developer Command Prompt for VS.');\r\n                    return;\r\n                }\r\n            }\r\n            if (selection.configuration.preLaunchTask) {\r\n                if (folder) {\r\n                    try {\r\n                        await util.ensureBuildTaskExists(selection.configuration.preLaunchTask);\r\n                        Telemetry.logDebuggerEvent(\"buildAndDebug\", { \"success\": \"false\" });\r\n                    } catch (e) {\r\n                        return Promise.resolve();\r\n                    }\r\n                } else {\r\n                    return Promise.resolve();\r\n                    // TODO uncomment this when single file mode works correctly.\r\n                    // const buildTasks: vscode.Task[] = await getBuildTasks();\r\n                    // const task: vscode.Task = buildTasks.find(task => task.name === selection.configuration.preLaunchTask);\r\n                    // await vscode.tasks.executeTask(task);\r\n                    // delete selection.configuration.preLaunchTask;\r\n                }\r\n            }\r\n\r\n            // Attempt to use the user's (possibly) modified configuration before using the generated one.\r\n            try {\r\n                await vscode.debug.startDebugging(folder, selection.configuration.name);\r\n                Telemetry.logDebuggerEvent(\"buildAndDebug\", { \"success\": \"true\" });\r\n            } catch (e) {\r\n                try {\r\n                    vscode.debug.startDebugging(folder, selection.configuration);\r\n                } catch (e) {\r\n                    Telemetry.logDebuggerEvent(\"buildAndDebug\", { \"success\": \"false\" });\r\n                }\r\n            }\r\n        });\r\n    }));\r\n\r\n    configurationProvider.getConfigurationSnippets();\r\n\r\n    const launchJsonDocumentSelector: vscode.DocumentSelector = [{\r\n        scheme: 'file',\r\n        language: 'jsonc',\r\n        pattern: '**/launch.json'\r\n    }];\r\n\r\n    // ConfigurationSnippetProvider needs to be initiallized after configurationProvider calls getConfigurationSnippets.\r\n    disposables.push(vscode.languages.registerCompletionItemProvider(launchJsonDocumentSelector, new ConfigurationSnippetProvider(configurationProvider)));\r\n\r\n    // Register Debug Adapters\r\n    disposables.push(vscode.debug.registerDebugAdapterDescriptorFactory(CppvsdbgDebugAdapterDescriptorFactory.DEBUG_TYPE, new CppvsdbgDebugAdapterDescriptorFactory(context)));\r\n    disposables.push(vscode.debug.registerDebugAdapterDescriptorFactory(CppdbgDebugAdapterDescriptorFactory.DEBUG_TYPE, new CppdbgDebugAdapterDescriptorFactory(context)));\r\n\r\n    vscode.Disposable.from(...disposables);\r\n}\r\n\r\nexport function dispose(): void {\r\n    disposables.forEach(d => d.dispose());\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as child_process from 'child_process';\r\nimport * as os from 'os';\r\nimport { AttachItemsProvider } from './attachToProcess';\r\nimport { AttachItem } from './attachQuickPick';\r\n\r\nclass Process {\r\n    constructor(public name: string, public pid: string, public commandLine: string) { }\r\n\r\n    public toAttachItem(): AttachItem {\r\n        return {\r\n            label: this.name,\r\n            description: this.pid,\r\n            detail: this.commandLine,\r\n            id: this.pid\r\n        };\r\n    }\r\n}\r\n\r\nexport class NativeAttachItemsProviderFactory {\r\n    static Get(): AttachItemsProvider {\r\n        if (os.platform() === 'win32') {\r\n            return new WmicAttachItemsProvider();\r\n        } else {\r\n            return new PsAttachItemsProvider();\r\n        }\r\n    }\r\n}\r\n\r\nabstract class NativeAttachItemsProvider implements AttachItemsProvider {\r\n    protected abstract getInternalProcessEntries(): Promise<Process[]>;\r\n\r\n    getAttachItems(): Promise<AttachItem[]> {\r\n        return this.getInternalProcessEntries().then(processEntries => {\r\n            // localeCompare is significantly slower than < and > (2000 ms vs 80 ms for 10,000 elements)\r\n            // We can change to localeCompare if this becomes an issue\r\n            processEntries.sort((a, b) => {\r\n                if (a.name === undefined) {\r\n                    if (b.name === undefined) {\r\n                        return 0;\r\n                    }\r\n                    return 1;\r\n                }\r\n                if (b.name === undefined) {\r\n                    return -1;\r\n                }\r\n                let aLower: string = a.name.toLowerCase();\r\n                let bLower: string = b.name.toLowerCase();\r\n                if (aLower === bLower) {\r\n                    return 0;\r\n                }\r\n                return aLower < bLower ? -1 : 1;\r\n            });\r\n            let attachItems: AttachItem[] = processEntries.map(p => p.toAttachItem());\r\n            return attachItems;\r\n        });\r\n    }\r\n}\r\n\r\nexport class PsAttachItemsProvider extends NativeAttachItemsProvider {\r\n    // Perf numbers:\r\n    // OS X 10.10\r\n    // | # of processes | Time (ms) |\r\n    // |----------------+-----------|\r\n    // |            272 |        52 |\r\n    // |            296 |        49 |\r\n    // |            384 |        53 |\r\n    // |            784 |       116 |\r\n    //\r\n    // Ubuntu 16.04\r\n    // | # of processes | Time (ms) |\r\n    // |----------------+-----------|\r\n    // |            232 |        26 |\r\n    // |            336 |        34 |\r\n    // |            736 |        62 |\r\n    // |           1039 |       115 |\r\n    // |           1239 |       182 |\r\n\r\n    // ps outputs as a table. With the option \"ww\", ps will use as much width as necessary.\r\n    // However, that only applies to the right-most column. Here we use a hack of setting\r\n    // the column header to 50 a's so that the second column will have at least that many\r\n    // characters. 50 was chosen because that's the maximum length of a \"label\" in the\r\n    // QuickPick UI in VSCode.\r\n\r\n    protected getInternalProcessEntries(): Promise<Process[]> {\r\n        let processCmd: string = '';\r\n        switch (os.platform()) {\r\n            case 'darwin':\r\n                processCmd = PsProcessParser.psDarwinCommand;\r\n                break;\r\n            case 'linux':\r\n                processCmd = PsProcessParser.psLinuxCommand;\r\n                break;\r\n            default:\r\n                return Promise.reject<Process[]>(new Error(`Operating system \"${os.platform()}\" not support.`));\r\n        }\r\n        return execChildProcess(processCmd, null).then(processes => {\r\n            return PsProcessParser.ParseProcessFromPs(processes);\r\n        });\r\n    }\r\n}\r\n\r\nexport class PsProcessParser {\r\n    private static get secondColumnCharacters(): number { return 50; }\r\n    private static get commColumnTitle(): string { return Array(PsProcessParser.secondColumnCharacters).join(\"a\"); }\r\n    // the BSD version of ps uses '-c' to have 'comm' only output the executable name and not\r\n    // the full path. The Linux version of ps has 'comm' to only display the name of the executable\r\n    // Note that comm on Linux systems is truncated to 16 characters:\r\n    // https://bugzilla.redhat.com/show_bug.cgi?id=429565\r\n    // Since 'args' contains the full path to the executable, even if truncated, searching will work as desired.\r\n    public static get psLinuxCommand(): string { return `ps axww -o pid=,comm=${PsProcessParser.commColumnTitle},args=`; }\r\n    public static get psDarwinCommand(): string { return `ps axww -o pid=,comm=${PsProcessParser.commColumnTitle},args= -c`; }\r\n\r\n    // Only public for tests.\r\n    public static ParseProcessFromPs(processes: string): Process[] {\r\n        let lines: string[] = processes.split(os.EOL);\r\n        return PsProcessParser.ParseProcessFromPsArray(lines);\r\n    }\r\n\r\n    public static ParseProcessFromPsArray(processArray: string[]): Process[] {\r\n        let processEntries: Process[] = [];\r\n\r\n        // lines[0] is the header of the table\r\n        for (let i: number = 1; i < processArray.length; i++) {\r\n            let line: string = processArray[i];\r\n            if (!line) {\r\n                continue;\r\n            }\r\n\r\n            let processEntry: Process = PsProcessParser.parseLineFromPs(line);\r\n            processEntries.push(processEntry);\r\n        }\r\n\r\n        return processEntries;\r\n    }\r\n\r\n    private static parseLineFromPs(line: string): Process {\r\n        // Explanation of the regex:\r\n        //   - any leading whitespace\r\n        //   - PID\r\n        //   - whitespace\r\n        //   - executable name --> this is PsAttachItemsProvider.secondColumnCharacters - 1 because ps reserves one character\r\n        //     for the whitespace separator\r\n        //   - whitespace\r\n        //   - args (might be empty)\r\n        const psEntry: RegExp = new RegExp(`^\\\\s*([0-9]+)\\\\s+(.{${PsProcessParser.secondColumnCharacters - 1}})\\\\s+(.*)$`);\r\n        const matches: RegExpExecArray = psEntry.exec(line);\r\n        if (matches && matches.length === 4) {\r\n            const pid: string = matches[1].trim();\r\n            const executable: string = matches[2].trim();\r\n            const cmdline: string = matches[3].trim();\r\n            return new Process(executable, pid, cmdline);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Originally from common.ts. Due to test code not having vscode, it was refactored to not have vscode.OutputChannel.\r\n */\r\nfunction execChildProcess(process: string, workingDirectory: string): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n        child_process.exec(process, { cwd: workingDirectory, maxBuffer: 500 * 1024 }, (error: Error, stdout: string, stderr: string) => {\r\n\r\n            if (error) {\r\n                reject(error);\r\n                return;\r\n            }\r\n\r\n            if (stderr && stderr.length > 0) {\r\n                reject(new Error(stderr));\r\n                return;\r\n            }\r\n\r\n            resolve(stdout);\r\n        });\r\n    });\r\n}\r\n\r\nexport class WmicAttachItemsProvider extends NativeAttachItemsProvider {\r\n    // Perf numbers on Win10:\r\n    // | # of processes | Time (ms) |\r\n    // |----------------+-----------|\r\n    // |            309 |       413 |\r\n    // |            407 |       463 |\r\n    // |            887 |       746 |\r\n    // |           1308 |      1132 |\r\n\r\n    protected getInternalProcessEntries(): Promise<Process[]> {\r\n        const wmicCommand: string = 'wmic process get Name,ProcessId,CommandLine /FORMAT:list';\r\n        return execChildProcess(wmicCommand, null).then(processes => {\r\n            return WmicProcessParser.ParseProcessFromWmic(processes);\r\n        });\r\n    }\r\n}\r\n\r\nexport class WmicProcessParser {\r\n    private static get wmicNameTitle(): string { return 'Name'; }\r\n    private static get wmicCommandLineTitle(): string { return 'CommandLine'; }\r\n    private static get wmicPidTitle(): string { return 'ProcessId'; }\r\n\r\n    // Only public for tests.\r\n    public static ParseProcessFromWmic(processes: string): Process[] {\r\n        let lines: string[] = processes.split(os.EOL);\r\n        let currentProcess: Process = new Process(null, null, null);\r\n        let processEntries: Process[] = [];\r\n\r\n        for (let i: number = 0; i < lines.length; i++) {\r\n            let line: string = lines[i];\r\n            if (!line) {\r\n                continue;\r\n            }\r\n\r\n            WmicProcessParser.parseLineFromWmic(line, currentProcess);\r\n\r\n            // Each entry of processes has ProcessId as the last line\r\n            if (line.lastIndexOf(WmicProcessParser.wmicPidTitle, 0) === 0) {\r\n                processEntries.push(currentProcess);\r\n                currentProcess = new Process(null, null, null);\r\n            }\r\n        }\r\n\r\n        return processEntries;\r\n    }\r\n\r\n    private static parseLineFromWmic(line: string, process: Process): void {\r\n        let splitter: number = line.indexOf('=');\r\n        if (splitter >= 0) {\r\n            let key: string = line.slice(0, line.indexOf('=')).trim();\r\n            let value: string = line.slice(line.indexOf('=') + 1).trim();\r\n            if (key === WmicProcessParser.wmicNameTitle) {\r\n                process.name = value;\r\n            } else if (key === WmicProcessParser.wmicPidTitle) {\r\n                process.pid = value;\r\n            } else if (key === WmicProcessParser.wmicCommandLineTitle) {\r\n                const extendedLengthPath: string = '\\\\??\\\\';\r\n                if (value.lastIndexOf(extendedLengthPath, 0) === 0) {\r\n                    value = value.slice(extendedLengthPath.length);\r\n                }\r\n\r\n                process.commandLine = value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nexport enum ArchType {\r\n    ia32,\r\n    x64\r\n}\r\n\r\nexport class ArchitectureReplacer {\r\n    public static checkAndReplaceWSLPipeProgram(pipeProgramStr: string, expectedArch: ArchType): string {\r\n        let replacedPipeProgram: string = null;\r\n        const winDir: string = process.env.WINDIR ? process.env.WINDIR.toLowerCase() : null;\r\n        const winDirAltDirSep: string =  process.env.WINDIR ? process.env.WINDIR.replace('\\\\', '/').toLowerCase() : null;\r\n        const winDirEnv: string = \"${env:windir}\";\r\n\r\n        if (winDir && winDirAltDirSep && (pipeProgramStr.indexOf(winDir) === 0 || pipeProgramStr.indexOf(winDirAltDirSep) === 0 || pipeProgramStr.indexOf(winDirEnv) === 0)) {\r\n            if (expectedArch === ArchType.x64) {\r\n                const pathSep: string = ArchitectureReplacer.checkForFolderInPath(pipeProgramStr, \"sysnative\");\r\n                if (pathSep) {\r\n                    // User has sysnative but we expect 64 bit. Should be using System32 since sysnative is a 32bit concept.\r\n                    replacedPipeProgram = pipeProgramStr.replace(`${pathSep}sysnative${pathSep}`, `${pathSep}system32${pathSep}`);\r\n                }\r\n            } else if (expectedArch === ArchType.ia32) {\r\n                const pathSep: string = ArchitectureReplacer.checkForFolderInPath(pipeProgramStr, \"system32\");\r\n                if (pathSep) {\r\n                    // User has System32 but we expect 32 bit. Should be using sysnative\r\n                    replacedPipeProgram = pipeProgramStr.replace(`${pathSep}system32${pathSep}`, `${pathSep}sysnative${pathSep}`);\r\n                }\r\n            }\r\n        }\r\n\r\n        return replacedPipeProgram;\r\n    }\r\n\r\n    // Checks to see if the folder name is in the path using both win and unix style path seperators.\r\n    // Returns the path seperator it detected if the folder is in the path. \r\n    // Or else it returns empty string to indicate it did not find it in the path.\r\n    public static checkForFolderInPath(path: string, folder: string): string {\r\n        if (path.indexOf(`/${folder}/`) >= 0) {\r\n            return '/';\r\n        } else if (path.indexOf(`\\\\${folder}\\\\`) >= 0) {\r\n            return '\\\\';\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as cpptoolsJsonUtils from './abTesting';\r\nimport * as DebuggerExtension from './Debugger/extension';\r\nimport * as fs from 'fs';\r\nimport * as LanguageServer from './LanguageServer/extension';\r\nimport * as os from 'os';\r\nimport * as Telemetry from './telemetry';\r\nimport * as util from './common';\r\nimport * as vscode from 'vscode';\r\n\r\nimport { CppToolsApi, CppToolsExtension } from 'vscode-cpptools';\r\nimport { getTemporaryCommandRegistrarInstance, initializeTemporaryCommandRegistrar } from './commands';\r\nimport { PlatformInformation } from './platform';\r\nimport { PackageManager, PackageManagerError, IPackage } from './packageManager';\r\nimport { PersistentState } from './LanguageServer/persistentState';\r\nimport { getInstallationInformation, InstallationInformation, setInstallationStage } from './installationInformation';\r\nimport { Logger, getOutputChannelLogger, showOutputChannel } from './logger';\r\nimport { CppTools1 } from './cppTools1';\r\n\r\nconst releaseNotesVersion: number = 3;\r\nconst cppTools: CppTools1 = new CppTools1();\r\nlet languageServiceDisabled: boolean = false;\r\nlet reloadMessageShown: boolean = false;\r\nlet disposables: vscode.Disposable[] = [];\r\n\r\nexport async function activate(context: vscode.ExtensionContext): Promise<CppToolsApi & CppToolsExtension> {\r\n    initializeTemporaryCommandRegistrar();\r\n    util.setExtensionContext(context);\r\n    Telemetry.activate();\r\n    util.setProgress(0);\r\n\r\n    // Initialize the DebuggerExtension and register the related commands and providers.\r\n    DebuggerExtension.initialize(context);\r\n\r\n    await processRuntimeDependencies();\r\n\r\n    return cppTools;\r\n}\r\n\r\nexport function deactivate(): Thenable<void> {\r\n    DebuggerExtension.dispose();\r\n    Telemetry.deactivate();\r\n    disposables.forEach(d => d.dispose());\r\n\r\n    if (languageServiceDisabled) {\r\n        return;\r\n    }\r\n    return LanguageServer.deactivate();\r\n}\r\n\r\nasync function processRuntimeDependencies(): Promise<void> {\r\n    const installLockExists: boolean = await util.checkInstallLockFile();\r\n\r\n    if (installLockExists) {\r\n        // Offline Scenario: Lock file exists but package.json has not had its activationEvents rewritten.\r\n        if (util.packageJson.activationEvents && util.packageJson.activationEvents.length === 1) {\r\n            try {\r\n                await offlineInstallation();\r\n            } catch (error) {\r\n                getOutputChannelLogger().showErrorMessage('The installation of the C/C++ extension failed. Please see the output window for more information.');\r\n                showOutputChannel();\r\n\r\n                // Send the failure telemetry since postInstall will not be called.\r\n                sendTelemetry(await PlatformInformation.GetPlatformInformation());\r\n            }\r\n        // The extension have been installed and activated before.\r\n        } else {\r\n            await finalizeExtensionActivation();\r\n        }\r\n    // No lock file, need to download and install dependencies.\r\n    } else {\r\n        try {\r\n            await onlineInstallation();\r\n        } catch (error) {\r\n            handleError(error);\r\n            \r\n            // Send the failure telemetry since postInstall will not be called.\r\n            sendTelemetry(await PlatformInformation.GetPlatformInformation());\r\n        }\r\n    }\r\n}\r\n\r\nasync function offlineInstallation(): Promise<void> {\r\n    setInstallationStage('getPlatformInfo');\r\n    const info: PlatformInformation = await PlatformInformation.GetPlatformInformation();\r\n\r\n    setInstallationStage('makeBinariesExecutable');\r\n    await makeBinariesExecutable();\r\n\r\n    setInstallationStage('makeOfflineBinariesExecutable');\r\n    await makeOfflineBinariesExecutable(info);\r\n\r\n    setInstallationStage('removeUnnecessaryFile');\r\n    await removeUnnecessaryFile();\r\n\r\n    setInstallationStage('rewriteManifest');\r\n    await rewriteManifest();\r\n\r\n    setInstallationStage('postInstall');\r\n    await postInstall(info);\r\n}\r\n\r\nasync function onlineInstallation(): Promise<void> {\r\n    setInstallationStage('getPlatformInfo');\r\n    const info: PlatformInformation = await PlatformInformation.GetPlatformInformation();\r\n\r\n    await downloadAndInstallPackages(info);\r\n\r\n    setInstallationStage('makeBinariesExecutable');\r\n    await makeBinariesExecutable();\r\n\r\n    setInstallationStage('removeUnnecessaryFile');\r\n    await removeUnnecessaryFile();\r\n\r\n    setInstallationStage('rewriteManifest');\r\n    await rewriteManifest();\r\n\r\n    setInstallationStage('touchInstallLockFile');\r\n    await touchInstallLockFile();\r\n\r\n    setInstallationStage('postInstall');\r\n    await postInstall(info);\r\n}\r\n\r\nasync function downloadAndInstallPackages(info: PlatformInformation): Promise<void> {\r\n    let outputChannelLogger: Logger = getOutputChannelLogger();\r\n    outputChannelLogger.appendLine(\"Updating C/C++ dependencies...\");\r\n\r\n    let packageManager: PackageManager = new PackageManager(info, outputChannelLogger);\r\n\r\n    return vscode.window.withProgress({\r\n        location: vscode.ProgressLocation.Notification,\r\n        title: \"C/C++ Extension\",\r\n        cancellable: false\r\n    }, async (progress, token) => {\r\n\r\n        outputChannelLogger.appendLine('');\r\n        setInstallationStage('downloadPackages');\r\n        await packageManager.DownloadPackages(progress);\r\n\r\n        outputChannelLogger.appendLine('');\r\n        setInstallationStage('installPackages');\r\n        await packageManager.InstallPackages(progress);\r\n    });\r\n}\r\n\r\nfunction makeBinariesExecutable(): Promise<void> {\r\n    return util.allowExecution(util.getDebugAdaptersPath(\"OpenDebugAD7\"));\r\n}\r\n\r\nfunction makeOfflineBinariesExecutable(info: PlatformInformation): Promise<void> {\r\n    let promises: Thenable<void>[] = [];\r\n    let packages: IPackage[] = util.packageJson[\"runtimeDependencies\"];\r\n    packages.forEach(p => {\r\n        if (p.binaries && p.binaries.length > 0 &&\r\n            p.platforms.findIndex(plat => plat === info.platform) !== -1 &&\r\n            (p.architectures === undefined || p.architectures.findIndex(arch => arch === info.architecture) !== - 1)) {\r\n            p.binaries.forEach(binary => promises.push(util.allowExecution(util.getExtensionFilePath(binary))));\r\n        }\r\n    });\r\n    return Promise.all(promises).then(() => { });\r\n}\r\n\r\nfunction removeUnnecessaryFile(): Promise<void> {\r\n    if (os.platform() !== 'win32') {\r\n        let sourcePath: string = util.getDebugAdaptersPath(\"bin/OpenDebugAD7.exe.config\");\r\n        if (fs.existsSync(sourcePath)) {\r\n            fs.rename(sourcePath, util.getDebugAdaptersPath(\"bin/OpenDebugAD7.exe.config.unused\"), (err: NodeJS.ErrnoException) => {\r\n                if (err) {\r\n                    getOutputChannelLogger().appendLine(`ERROR: fs.rename failed with \"${err.message}\". Delete ${sourcePath} manually to enable debugging.`);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return Promise.resolve();\r\n}\r\n\r\nfunction touchInstallLockFile(): Promise<void> {\r\n    return util.touchInstallLockFile();\r\n}\r\n\r\nfunction handleError(error: any): void {\r\n    let installationInformation: InstallationInformation = getInstallationInformation();\r\n    installationInformation.hasError = true;\r\n    installationInformation.telemetryProperties['stage'] = installationInformation.stage;\r\n    let errorMessage: string;\r\n\r\n    if (error instanceof PackageManagerError) {\r\n        let packageError: PackageManagerError = error;\r\n\r\n        installationInformation.telemetryProperties['error.methodName'] = packageError.methodName;\r\n        installationInformation.telemetryProperties['error.message'] = packageError.message;\r\n\r\n        if (packageError.innerError) {\r\n            errorMessage = packageError.innerError.toString();\r\n            installationInformation.telemetryProperties['error.innerError'] = util.removePotentialPII(errorMessage);\r\n        } else {\r\n            errorMessage = packageError.message;\r\n        }\r\n\r\n        if (packageError.pkg) {\r\n            installationInformation.telemetryProperties['error.packageName'] = packageError.pkg.description;\r\n            installationInformation.telemetryProperties['error.packageUrl'] = packageError.pkg.url;\r\n        }\r\n\r\n        if (packageError.errorCode) {\r\n            installationInformation.telemetryProperties['error.errorCode'] = util.removePotentialPII(packageError.errorCode);\r\n        }\r\n    } else {\r\n        errorMessage = error.toString();\r\n        installationInformation.telemetryProperties['error.toString'] = util.removePotentialPII(errorMessage);\r\n    }\r\n\r\n    let outputChannelLogger: Logger = getOutputChannelLogger();\r\n    if (installationInformation.stage === 'downloadPackages') {\r\n        outputChannelLogger.appendLine(\"\");\r\n    }\r\n    // Show the actual message and not the sanitized one\r\n    outputChannelLogger.appendLine(`Failed at stage: ${installationInformation.stage}`);\r\n    outputChannelLogger.appendLine(errorMessage);\r\n    outputChannelLogger.appendLine(\"\");\r\n    outputChannelLogger.appendLine(`If you work in an offline environment or repeatedly see this error, try downloading a version of the extension with all the dependencies pre-included from https://github.com/Microsoft/vscode-cpptools/releases, then use the \"Install from VSIX\" command in VS Code to install it.`);\r\n    showOutputChannel();\r\n}\r\n\r\nfunction sendTelemetry(info: PlatformInformation): boolean {\r\n    let installBlob: InstallationInformation = getInstallationInformation();\r\n    const success: boolean = !installBlob.hasError;\r\n\r\n    installBlob.telemetryProperties['success'] = success.toString();\r\n\r\n    if (info.distribution) {\r\n        installBlob.telemetryProperties['linuxDistroName'] = info.distribution.name;\r\n        installBlob.telemetryProperties['linuxDistroVersion'] = info.distribution.version;\r\n    }\r\n\r\n    if (success) {\r\n        util.setProgress(util.getProgressInstallSuccess());\r\n        let versionShown: PersistentState<number> = new PersistentState<number>(\"CPP.ReleaseNotesVersion\", -1);\r\n        if (versionShown.Value < releaseNotesVersion) {\r\n            util.showReleaseNotes();\r\n            versionShown.Value = releaseNotesVersion;\r\n        }\r\n    }\r\n\r\n    installBlob.telemetryProperties['osArchitecture'] = info.architecture;\r\n\r\n    Telemetry.logDebuggerEvent(\"acquisition\", installBlob.telemetryProperties);\r\n\r\n    return success;\r\n}\r\n\r\nasync function postInstall(info: PlatformInformation): Promise<void> {\r\n    let outputChannelLogger: Logger = getOutputChannelLogger();\r\n    outputChannelLogger.appendLine(\"\");\r\n    outputChannelLogger.appendLine(\"Finished installing dependencies\");\r\n    outputChannelLogger.appendLine(\"\");\r\n\r\n    const installSuccess: boolean = sendTelemetry(info);\r\n\r\n    // If there is a download failure, we shouldn't continue activating the extension in some broken state.\r\n    if (!installSuccess) {\r\n        return Promise.reject<void>(\"\");\r\n    } else {\r\n        // Notify user's if debugging may not be supported on their OS.\r\n        util.checkDistro(info);\r\n\r\n        return finalizeExtensionActivation();\r\n    }\r\n}\r\n\r\nasync function finalizeExtensionActivation(): Promise<void> {\r\n    if (vscode.workspace.getConfiguration(\"C_Cpp\", null).get<string>(\"intelliSenseEngine\") === \"Disabled\") {\r\n        languageServiceDisabled = true;\r\n        getTemporaryCommandRegistrarInstance().disableLanguageServer();\r\n        disposables.push(vscode.workspace.onDidChangeConfiguration(() => {\r\n            if (!reloadMessageShown && vscode.workspace.getConfiguration(\"C_Cpp\", null).get<string>(\"intelliSenseEngine\") !== \"Disabled\") {\r\n                reloadMessageShown = true;\r\n                util.promptForReloadWindowDueToSettingsChange();\r\n            }\r\n        }));\r\n        return;\r\n    }\r\n    disposables.push(vscode.workspace.onDidChangeConfiguration(() => {\r\n        if (!reloadMessageShown && vscode.workspace.getConfiguration(\"C_Cpp\", null).get<string>(\"intelliSenseEngine\") === \"Disabled\") {\r\n            reloadMessageShown = true;\r\n            util.promptForReloadWindowDueToSettingsChange();\r\n        }\r\n    }));\r\n    getTemporaryCommandRegistrarInstance().activateLanguageServer();\r\n\r\n    // Update default for C_Cpp.intelliSenseEngine based on A/B testing settings.\r\n    // (this may result in rewriting the package.json file)\r\n    \r\n    let packageJsonPath: string = util.getExtensionFilePath(\"package.json\");\r\n    if (!packageJsonPath.includes(\".vscode-insiders\") && !packageJsonPath.includes(\".vscode-exploration\")) {\r\n        let abTestSettings: cpptoolsJsonUtils.ABTestSettings = cpptoolsJsonUtils.getABTestSettings();\r\n        let packageJson: any = util.getRawPackageJson();\r\n        let prevIntelliSenseEngineDefault: any = packageJson.contributes.configuration.properties[\"C_Cpp.intelliSenseEngine\"].default;\r\n        if (abTestSettings.UseDefaultIntelliSenseEngine) {\r\n            packageJson.contributes.configuration.properties[\"C_Cpp.intelliSenseEngine\"].default = \"Default\";\r\n        } else {\r\n            packageJson.contributes.configuration.properties[\"C_Cpp.intelliSenseEngine\"].default = \"Tag Parser\";\r\n        }\r\n        if (prevIntelliSenseEngineDefault !== packageJson.contributes.configuration.properties[\"C_Cpp.intelliSenseEngine\"].default) {\r\n            return util.writeFileText(util.getPackageJsonPath(), util.stringifyPackageJson(packageJson));\r\n        }\r\n    } else {\r\n        let packageJson: any = util.getRawPackageJson();\r\n        if (packageJson.contributes.configuration.properties['C_Cpp.updateChannel'].default === 'Default') {\r\n            packageJson.contributes.configuration.properties['C_Cpp.updateChannel'].default = 'Insiders';\r\n            return util.writeFileText(util.getPackageJsonPath(), util.stringifyPackageJson(packageJson));\r\n        }\r\n    }\r\n}\r\n\r\nfunction rewriteManifest(): Promise<void> {\r\n    // Replace activationEvents with the events that the extension should be activated for subsequent sessions.\r\n    let packageJson: any = util.getRawPackageJson();\r\n    \r\n    packageJson.activationEvents = [\r\n        \"onLanguage:cpp\",\r\n        \"onLanguage:c\",\r\n        \"onCommand:extension.pickNativeProcess\",\r\n        \"onCommand:extension.pickRemoteNativeProcess\",\r\n        \"onCommand:C_Cpp.BuildAndDebugActiveFile\",\r\n        \"onCommand:C_Cpp.ConfigurationEdit\",\r\n        \"onCommand:C_Cpp.ConfigurationSelect\",\r\n        \"onCommand:C_Cpp.ConfigurationProviderSelect\",\r\n        \"onCommand:C_Cpp.SwitchHeaderSource\",\r\n        \"onCommand:C_Cpp.Navigate\",\r\n        \"onCommand:C_Cpp.GoToDeclaration\",\r\n        \"onCommand:C_Cpp.PeekDeclaration\",\r\n        \"onCommand:C_Cpp.ToggleErrorSquiggles\",\r\n        \"onCommand:C_Cpp.ToggleIncludeFallback\",\r\n        \"onCommand:C_Cpp.ToggleDimInactiveRegions\",\r\n        \"onCommand:C_Cpp.ShowReleaseNotes\",\r\n        \"onCommand:C_Cpp.ResetDatabase\",\r\n        \"onCommand:C_Cpp.PauseParsing\",\r\n        \"onCommand:C_Cpp.ResumeParsing\",\r\n        \"onCommand:C_Cpp.ShowParsingCommands\",\r\n        \"onCommand:C_Cpp.TakeSurvey\",\r\n        \"onDebug\",\r\n        \"workspaceContains:/.vscode/c_cpp_properties.json\"\r\n    ];\r\n\r\n    return util.writeFileText(util.getPackageJsonPath(), util.stringifyPackageJson(packageJson));\r\n}\r\n","/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nprocess.env['APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL'] = true;\nvar fs = require(\"fs\");\nvar os = require(\"os\");\nvar path = require(\"path\");\nvar vscode = require(\"vscode\");\nvar appInsights = require(\"applicationinsights\");\nvar TelemetryReporter = /** @class */ (function () {\n    // tslint:disable-next-line\n    function TelemetryReporter(extensionId, extensionVersion, key) {\n        var _this = this;\n        this.extensionId = extensionId;\n        this.extensionVersion = extensionVersion;\n        this.userOptIn = false;\n        var logFilePath = process.env['VSCODE_LOGS'] || '';\n        if (logFilePath && extensionId && process.env['VSCODE_LOG_LEVEL'] === 'trace') {\n            logFilePath = path.join(logFilePath, extensionId + \".txt\");\n            this.logStream = fs.createWriteStream(logFilePath, { flags: 'a', encoding: 'utf8', autoClose: true });\n        }\n        this.updateUserOptIn(key);\n        this.configListener = vscode.workspace.onDidChangeConfiguration(function () { return _this.updateUserOptIn(key); });\n    }\n    TelemetryReporter.prototype.updateUserOptIn = function (key) {\n        var config = vscode.workspace.getConfiguration(TelemetryReporter.TELEMETRY_CONFIG_ID);\n        if (this.userOptIn !== config.get(TelemetryReporter.TELEMETRY_CONFIG_ENABLED_ID, true)) {\n            this.userOptIn = config.get(TelemetryReporter.TELEMETRY_CONFIG_ENABLED_ID, true);\n            if (this.userOptIn) {\n                this.createAppInsightsClient(key);\n            }\n            else {\n                this.dispose();\n            }\n        }\n    };\n    TelemetryReporter.prototype.createAppInsightsClient = function (key) {\n        //check if another instance is already initialized\n        if (appInsights.defaultClient) {\n            this.appInsightsClient = new appInsights.TelemetryClient(key);\n            // no other way to enable offline mode\n            this.appInsightsClient.channel.setUseDiskRetryCaching(true);\n        }\n        else {\n            appInsights.setup(key)\n                .setAutoCollectRequests(false)\n                .setAutoCollectPerformance(false)\n                .setAutoCollectExceptions(false)\n                .setAutoCollectDependencies(false)\n                .setAutoDependencyCorrelation(false)\n                .setAutoCollectConsole(false)\n                .setUseDiskRetryCaching(true)\n                .start();\n            this.appInsightsClient = appInsights.defaultClient;\n        }\n        this.appInsightsClient.commonProperties = this.getCommonProperties();\n        if (vscode && vscode.env) {\n            this.appInsightsClient.context.tags[this.appInsightsClient.context.keys.userId] = vscode.env.machineId;\n            this.appInsightsClient.context.tags[this.appInsightsClient.context.keys.sessionId] = vscode.env.sessionId;\n        }\n        //check if it's an Asimov key to change the endpoint\n        if (key && key.indexOf('AIF-') === 0) {\n            this.appInsightsClient.config.endpointUrl = \"https://vortex.data.microsoft.com/collect/v1\";\n        }\n    };\n    // __GDPR__COMMON__ \"common.os\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.platformversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.extname\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.extversion\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodemachineid\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodesessionid\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodeversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    TelemetryReporter.prototype.getCommonProperties = function () {\n        var commonProperties = Object.create(null);\n        commonProperties['common.os'] = os.platform();\n        commonProperties['common.platformversion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n        commonProperties['common.extname'] = this.extensionId;\n        commonProperties['common.extversion'] = this.extensionVersion;\n        if (vscode && vscode.env) {\n            commonProperties['common.vscodemachineid'] = vscode.env.machineId;\n            commonProperties['common.vscodesessionid'] = vscode.env.sessionId;\n            commonProperties['common.vscodeversion'] = vscode.version;\n        }\n        return commonProperties;\n    };\n    TelemetryReporter.prototype.sendTelemetryEvent = function (eventName, properties, measurements) {\n        if (this.userOptIn && eventName && this.appInsightsClient) {\n            this.appInsightsClient.trackEvent({\n                name: this.extensionId + \"/\" + eventName,\n                properties: properties,\n                measurements: measurements\n            });\n            if (this.logStream) {\n                this.logStream.write(\"telemetry/\" + eventName + \" \" + JSON.stringify({ properties: properties, measurements: measurements }) + \"\\n\");\n            }\n        }\n    };\n    TelemetryReporter.prototype.dispose = function () {\n        var _this = this;\n        this.configListener.dispose();\n        var flushEventsToLogger = new Promise(function (resolve) {\n            if (!_this.logStream) {\n                return resolve(void 0);\n            }\n            _this.logStream.on('finish', resolve);\n            _this.logStream.end();\n        });\n        var flushEventsToAI = new Promise(function (resolve) {\n            if (_this.appInsightsClient) {\n                _this.appInsightsClient.flush({\n                    callback: function () {\n                        // all data flushed\n                        _this.appInsightsClient = undefined;\n                        resolve(void 0);\n                    }\n                });\n            }\n            else {\n                resolve(void 0);\n            }\n        });\n        return Promise.all([flushEventsToAI, flushEventsToLogger]);\n    };\n    TelemetryReporter.TELEMETRY_CONFIG_ID = 'telemetry';\n    TelemetryReporter.TELEMETRY_CONFIG_ENABLED_ID = 'enableTelemetry';\n    return TelemetryReporter;\n}());\nexports.default = TelemetryReporter;\n//# sourceMappingURL=telemetryReporter.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CorrelationContextManager = require(\"./AutoCollection/CorrelationContextManager\"); // Keep this first\r\nvar AutoCollectConsole = require(\"./AutoCollection/Console\");\r\nvar AutoCollectExceptions = require(\"./AutoCollection/Exceptions\");\r\nvar AutoCollectPerformance = require(\"./AutoCollection/Performance\");\r\nvar AutoCollectHttpDependencies = require(\"./AutoCollection/HttpDependencies\");\r\nvar AutoCollectHttpRequests = require(\"./AutoCollection/HttpRequests\");\r\nvar Logging = require(\"./Library/Logging\");\r\n// We export these imports so that SDK users may use these classes directly.\r\n// They're exposed using \"export import\" so that types are passed along as expected\r\nexports.TelemetryClient = require(\"./Library/NodeClient\");\r\nexports.Contracts = require(\"./Declarations/Contracts\");\r\n// Default autocollection configuration\r\nvar _isConsole = true;\r\nvar _isConsoleLog = false;\r\nvar _isExceptions = true;\r\nvar _isPerformance = true;\r\nvar _isRequests = true;\r\nvar _isDependencies = true;\r\nvar _isDiskRetry = true;\r\nvar _isCorrelating = true;\r\nvar _diskRetryInterval = undefined;\r\nvar _diskRetryMaxBytes = undefined;\r\nvar _console;\r\nvar _exceptions;\r\nvar _performance;\r\nvar _serverRequests;\r\nvar _clientRequests;\r\nvar _isStarted = false;\r\n/**\r\n * Initializes the default client. Should be called after setting\r\n * configuration options.\r\n *\r\n * @param instrumentationKey the instrumentation key to use. Optional, if\r\n * this is not specified, the value will be read from the environment\r\n * variable APPINSIGHTS_INSTRUMENTATIONKEY.\r\n * @returns {Configuration} the configuration class to initialize\r\n * and start the SDK.\r\n */\r\nfunction setup(instrumentationKey) {\r\n    if (!exports.defaultClient) {\r\n        exports.defaultClient = new exports.TelemetryClient(instrumentationKey);\r\n        _console = new AutoCollectConsole(exports.defaultClient);\r\n        _exceptions = new AutoCollectExceptions(exports.defaultClient);\r\n        _performance = new AutoCollectPerformance(exports.defaultClient);\r\n        _serverRequests = new AutoCollectHttpRequests(exports.defaultClient);\r\n        _clientRequests = new AutoCollectHttpDependencies(exports.defaultClient);\r\n    }\r\n    else {\r\n        Logging.info(\"The default client is already setup\");\r\n    }\r\n    if (exports.defaultClient && exports.defaultClient.channel) {\r\n        exports.defaultClient.channel.setUseDiskRetryCaching(_isDiskRetry, _diskRetryInterval, _diskRetryMaxBytes);\r\n    }\r\n    return Configuration;\r\n}\r\nexports.setup = setup;\r\n/**\r\n * Starts automatic collection of telemetry. Prior to calling start no\r\n * telemetry will be *automatically* collected, though manual collection\r\n * is enabled.\r\n * @returns {ApplicationInsights} this class\r\n */\r\nfunction start() {\r\n    if (!!exports.defaultClient) {\r\n        _isStarted = true;\r\n        _console.enable(_isConsole, _isConsoleLog);\r\n        _exceptions.enable(_isExceptions);\r\n        _performance.enable(_isPerformance);\r\n        _serverRequests.useAutoCorrelation(_isCorrelating);\r\n        _serverRequests.enable(_isRequests);\r\n        _clientRequests.enable(_isDependencies);\r\n    }\r\n    else {\r\n        Logging.warn(\"Start cannot be called before setup\");\r\n    }\r\n    return Configuration;\r\n}\r\nexports.start = start;\r\n/**\r\n * Returns an object that is shared across all code handling a given request.\r\n * This can be used similarly to thread-local storage in other languages.\r\n * Properties set on this object will be available to telemetry processors.\r\n *\r\n * Do not store sensitive information here.\r\n * Custom properties set on this object can be exposed in a future SDK\r\n * release via outgoing HTTP headers.\r\n * This is to allow for correlating data cross-component.\r\n *\r\n * This method will return null if automatic dependency correlation is disabled.\r\n * @returns A plain object for request storage or null if automatic dependency correlation is disabled.\r\n */\r\nfunction getCorrelationContext() {\r\n    if (_isCorrelating) {\r\n        return CorrelationContextManager.CorrelationContextManager.getCurrentContext();\r\n    }\r\n    return null;\r\n}\r\nexports.getCorrelationContext = getCorrelationContext;\r\n/**\r\n * Returns a function that will get the same correlation context within its\r\n * function body as the code executing this function.\r\n * Use this method if automatic dependency correlation is not propagating\r\n * correctly to an asynchronous callback.\r\n */\r\nfunction wrapWithCorrelationContext(fn) {\r\n    return CorrelationContextManager.CorrelationContextManager.wrapCallback(fn);\r\n}\r\nexports.wrapWithCorrelationContext = wrapWithCorrelationContext;\r\n/**\r\n * The active configuration for global SDK behaviors, such as autocollection.\r\n */\r\nvar Configuration = (function () {\r\n    function Configuration() {\r\n    }\r\n    /**\r\n     * Sets the state of console and logger tracking (enabled by default for third-party loggers only)\r\n     * @param value if true logger activity will be sent to Application Insights\r\n     * @param collectConsoleLog if true, logger autocollection will include console.log calls (default false)\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoCollectConsole = function (value, collectConsoleLog) {\r\n        if (collectConsoleLog === void 0) { collectConsoleLog = false; }\r\n        _isConsole = value;\r\n        _isConsoleLog = collectConsoleLog;\r\n        if (_isStarted) {\r\n            _console.enable(value, collectConsoleLog);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Sets the state of exception tracking (enabled by default)\r\n     * @param value if true uncaught exceptions will be sent to Application Insights\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoCollectExceptions = function (value) {\r\n        _isExceptions = value;\r\n        if (_isStarted) {\r\n            _exceptions.enable(value);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Sets the state of performance tracking (enabled by default)\r\n     * @param value if true performance counters will be collected every second and sent to Application Insights\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoCollectPerformance = function (value) {\r\n        _isPerformance = value;\r\n        if (_isStarted) {\r\n            _performance.enable(value);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Sets the state of request tracking (enabled by default)\r\n     * @param value if true requests will be sent to Application Insights\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoCollectRequests = function (value) {\r\n        _isRequests = value;\r\n        if (_isStarted) {\r\n            _serverRequests.enable(value);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Sets the state of dependency tracking (enabled by default)\r\n     * @param value if true dependencies will be sent to Application Insights\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoCollectDependencies = function (value) {\r\n        _isDependencies = value;\r\n        if (_isStarted) {\r\n            _clientRequests.enable(value);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Sets the state of automatic dependency correlation (enabled by default)\r\n     * @param value if true dependencies will be correlated with requests\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoDependencyCorrelation = function (value) {\r\n        _isCorrelating = value;\r\n        if (_isStarted) {\r\n            _serverRequests.useAutoCorrelation(value);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Enable or disable disk-backed retry caching to cache events when client is offline (enabled by default)\r\n     * Note that this method only applies to the default client. Disk-backed retry caching is disabled by default for additional clients.\r\n     * For enable for additional clients, use client.channel.setUseDiskRetryCaching(true).\r\n     * These cached events are stored in your system or user's temporary directory and access restricted to your user when possible.\r\n     * @param value if true events that occured while client is offline will be cached on disk\r\n     * @param resendInterval The wait interval for resending cached events.\r\n     * @param maxBytesOnDisk The maximum size (in bytes) that the created temporary directory for cache events can grow to, before caching is disabled.\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setUseDiskRetryCaching = function (value, resendInterval, maxBytesOnDisk) {\r\n        _isDiskRetry = value;\r\n        _diskRetryInterval = resendInterval;\r\n        _diskRetryMaxBytes = maxBytesOnDisk;\r\n        if (exports.defaultClient && exports.defaultClient.channel) {\r\n            exports.defaultClient.channel.setUseDiskRetryCaching(value, resendInterval, maxBytesOnDisk);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Enables debug and warning logging for AppInsights itself.\r\n     * @param enableDebugLogging if true, enables debug logging\r\n     * @param enableWarningLogging if true, enables warning logging\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setInternalLogging = function (enableDebugLogging, enableWarningLogging) {\r\n        if (enableDebugLogging === void 0) { enableDebugLogging = false; }\r\n        if (enableWarningLogging === void 0) { enableWarningLogging = true; }\r\n        Logging.enableDebug = enableDebugLogging;\r\n        Logging.disableWarnings = !enableWarningLogging;\r\n        return Configuration;\r\n    };\r\n    // Convenience shortcut to ApplicationInsights.start\r\n    Configuration.start = start;\r\n    return Configuration;\r\n}());\r\nexports.Configuration = Configuration;\r\n/**\r\n * Disposes the default client and all the auto collectors so they can be reinitialized with different configuration\r\n*/\r\nfunction dispose() {\r\n    exports.defaultClient = null;\r\n    _isStarted = false;\r\n    if (_console) {\r\n        _console.dispose();\r\n    }\r\n    if (_exceptions) {\r\n        _exceptions.dispose();\r\n    }\r\n    if (_performance) {\r\n        _performance.dispose();\r\n    }\r\n    if (_serverRequests) {\r\n        _serverRequests.dispose();\r\n    }\r\n    if (_clientRequests) {\r\n        _clientRequests.dispose();\r\n    }\r\n}\r\nexports.dispose = dispose;\r\n//# sourceMappingURL=applicationinsights.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bunyan = require(\"./bunyan.pub\");\r\nexports.bunyan = bunyan;\r\nvar consolePub = require(\"./console.pub\");\r\nexports.console = consolePub;\r\nvar mongodbCore = require(\"./mongodb-core.pub\");\r\nexports.mongodbCore = mongodbCore;\r\nvar mongodb = require(\"./mongodb.pub\");\r\nexports.mongodb = mongodb;\r\nvar mysql = require(\"./mysql.pub\");\r\nexports.mysql = mysql;\r\nvar pgPool = require(\"./pg-pool.pub\");\r\nexports.pgPool = pgPool;\r\nvar pg = require(\"./pg.pub\");\r\nexports.pg = pg;\r\nvar redis = require(\"./redis.pub\");\r\nexports.redis = redis;\r\nvar winston = require(\"./winston.pub\");\r\nexports.winston = winston;\r\nfunction enable() {\r\n    bunyan.enable();\r\n    consolePub.enable();\r\n    mongodbCore.enable();\r\n    mongodb.enable();\r\n    mysql.enable();\r\n    pg.enable();\r\n    pgPool.enable();\r\n    redis.enable();\r\n    winston.enable();\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar bunyanPatchFunction = function (originalBunyan) {\r\n    var originalEmit = originalBunyan.prototype._emit;\r\n    originalBunyan.prototype._emit = function (rec, noemit) {\r\n        var ret = originalEmit.apply(this, arguments);\r\n        if (!noemit) {\r\n            var str = ret;\r\n            if (!str) {\r\n                str = originalEmit.call(this, rec, true);\r\n            }\r\n            diagnostic_channel_1.channel.publish(\"bunyan\", { level: rec.level, result: str });\r\n        }\r\n        return ret;\r\n    };\r\n    return originalBunyan;\r\n};\r\nexports.bunyan = {\r\n    versionSpecifier: \">= 1.0.0 < 2.0.0\",\r\n    patch: bunyanPatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"bunyan\", exports.bunyan);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=bunyan.pub.js.map","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\nComparator.prototype.intersects = function(comp, loose) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, loose);\n    return satisfies(this.value, rangeTmp, loose);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, loose);\n    return satisfies(comp.semver, rangeTmp, loose);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, loose) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, loose) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if (range instanceof Range) {\n    if (range.loose === loose) {\n      return range;\n    } else {\n      return new Range(range.raw, loose);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, loose);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, loose) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, loose);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, loose);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, loose);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, loose) {\n  r1 = new Range(r1, loose)\n  r2 = new Range(r2, loose)\n  return r1.intersects(r2)\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar stream_1 = require(\"stream\");\r\nvar consolePatchFunction = function (originalConsole) {\r\n    var aiLoggingOutStream = new stream_1.Writable();\r\n    var aiLoggingErrStream = new stream_1.Writable();\r\n    // Default console is roughly equivalent to `new Console(process.stdout, process.stderr)`\r\n    // We create a version which publishes to the channel and also to stdout/stderr\r\n    aiLoggingOutStream.write = function (chunk) {\r\n        if (!chunk) {\r\n            return true;\r\n        }\r\n        var message = chunk.toString();\r\n        diagnostic_channel_1.channel.publish(\"console\", { message: message });\r\n        return true;\r\n    };\r\n    aiLoggingErrStream.write = function (chunk) {\r\n        if (!chunk) {\r\n            return true;\r\n        }\r\n        var message = chunk.toString();\r\n        diagnostic_channel_1.channel.publish(\"console\", { message: message, stderr: true });\r\n        return true;\r\n    };\r\n    var aiLoggingConsole = new originalConsole.Console(aiLoggingOutStream, aiLoggingErrStream);\r\n    var consoleMethods = [\"log\", \"info\", \"warn\", \"error\", \"dir\", \"time\", \"timeEnd\", \"trace\", \"assert\"];\r\n    var _loop_1 = function (method) {\r\n        var originalMethod = originalConsole[method];\r\n        if (originalMethod) {\r\n            originalConsole[method] = function () {\r\n                if (aiLoggingConsole[method]) {\r\n                    try {\r\n                        aiLoggingConsole[method].apply(aiLoggingConsole, arguments);\r\n                    }\r\n                    catch (e) {\r\n                        // Ignore errors; allow the original method to throw if necessary\r\n                    }\r\n                }\r\n                return originalMethod.apply(originalConsole, arguments);\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, consoleMethods_1 = consoleMethods; _i < consoleMethods_1.length; _i++) {\r\n        var method = consoleMethods_1[_i];\r\n        _loop_1(method);\r\n    }\r\n    return originalConsole;\r\n};\r\nexports.console = {\r\n    versionSpecifier: \">= 4.0.0\",\r\n    patch: consolePatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"console\", exports.console);\r\n    // Force patching of console\r\n    /* tslint:disable-next-line:no-var-requires */\r\n    require(\"console\");\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=console.pub.js.map","module.exports = require(\"console\");","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar mongodbcorePatchFunction = function (originalMongoCore) {\r\n    var originalConnect = originalMongoCore.Server.prototype.connect;\r\n    originalMongoCore.Server.prototype.connect = function contextPreservingConnect() {\r\n        var ret = originalConnect.apply(this, arguments);\r\n        // Messages sent to mongo progress through a pool\r\n        // This can result in context getting mixed between different responses\r\n        // so we wrap the callbacks to restore appropriate state\r\n        var originalWrite = this.s.pool.write;\r\n        this.s.pool.write = function contextPreservingWrite() {\r\n            var cbidx = typeof arguments[1] === \"function\" ? 1 : 2;\r\n            if (typeof arguments[cbidx] === \"function\") {\r\n                arguments[cbidx] = diagnostic_channel_1.channel.bindToContext(arguments[cbidx]);\r\n            }\r\n            return originalWrite.apply(this, arguments);\r\n        };\r\n        // Logout is a special case, it doesn't call the write function but instead\r\n        // directly calls into connection.write\r\n        var originalLogout = this.s.pool.logout;\r\n        this.s.pool.logout = function contextPreservingLogout() {\r\n            if (typeof arguments[1] === \"function\") {\r\n                arguments[1] = diagnostic_channel_1.channel.bindToContext(arguments[1]);\r\n            }\r\n            return originalLogout.apply(this, arguments);\r\n        };\r\n        return ret;\r\n    };\r\n    return originalMongoCore;\r\n};\r\nexports.mongoCore2 = {\r\n    versionSpecifier: \">= 2.0.0 < 2.2.0\",\r\n    patch: mongodbcorePatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"mongodb-core\", exports.mongoCore2);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=mongodb-core.pub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar mongodbPatchFunction = function (originalMongo) {\r\n    var listener = originalMongo.instrument({\r\n        operationIdGenerator: {\r\n            next: function () {\r\n                return diagnostic_channel_1.channel.bindToContext(function (cb) { return cb(); });\r\n            },\r\n        },\r\n    });\r\n    var eventMap = {};\r\n    listener.on(\"started\", function (event) {\r\n        if (eventMap[event.requestId]) {\r\n            // Note: Mongo can generate 2 completely separate requests\r\n            // which share the same requestId, if a certain race condition is triggered.\r\n            // For now, we accept that this can happen and potentially miss or mislabel some events.\r\n            return;\r\n        }\r\n        eventMap[event.requestId] = event;\r\n    });\r\n    listener.on(\"succeeded\", function (event) {\r\n        var startedData = eventMap[event.requestId];\r\n        if (startedData) {\r\n            delete eventMap[event.requestId];\r\n        }\r\n        event.operationId(function () { return diagnostic_channel_1.channel.publish(\"mongodb\", { startedData: startedData, event: event, succeeded: true }); });\r\n    });\r\n    listener.on(\"failed\", function (event) {\r\n        var startedData = eventMap[event.requestId];\r\n        if (startedData) {\r\n            delete eventMap[event.requestId];\r\n        }\r\n        event.operationId(function () { return diagnostic_channel_1.channel.publish(\"mongodb\", { startedData: startedData, event: event, succeeded: false }); });\r\n    });\r\n    return originalMongo;\r\n};\r\nexports.mongo2 = {\r\n    versionSpecifier: \">= 2.0.0 <= 2.2.x\",\r\n    patch: mongodbPatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"mongodb\", exports.mongo2);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=mongodb.pub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar path = require(\"path\");\r\nvar mysqlPatchFunction = function (originalMysql, originalMysqlPath) {\r\n    // The `name` passed in here is for debugging purposes,\r\n    // to help distinguish which object is being patched.\r\n    var patchObjectFunction = function (obj, name) {\r\n        return function (func, cbWrapper) {\r\n            var originalFunc = obj[func];\r\n            if (originalFunc) {\r\n                obj[func] = function mysqlContextPreserver() {\r\n                    // Find the callback, if there is one\r\n                    var cbidx = arguments.length - 1;\r\n                    for (var i = arguments.length - 1; i >= 0; --i) {\r\n                        if (typeof arguments[i] === \"function\") {\r\n                            cbidx = i;\r\n                            break;\r\n                        }\r\n                        else if (typeof arguments[i] !== \"undefined\") {\r\n                            break;\r\n                        }\r\n                    }\r\n                    var cb = arguments[cbidx];\r\n                    var resultContainer = { result: null, startTime: null };\r\n                    if (typeof cb === \"function\") {\r\n                        // Preserve context on the callback.\r\n                        // If this is one of the functions that we want to track,\r\n                        // then wrap the callback with the tracking wrapper\r\n                        if (cbWrapper) {\r\n                            resultContainer.startTime = process.hrtime();\r\n                            arguments[cbidx] = diagnostic_channel_1.channel.bindToContext(cbWrapper(resultContainer, cb));\r\n                        }\r\n                        else {\r\n                            arguments[cbidx] = diagnostic_channel_1.channel.bindToContext(cb);\r\n                        }\r\n                    }\r\n                    var result = originalFunc.apply(this, arguments);\r\n                    resultContainer.result = result;\r\n                    return result;\r\n                };\r\n            }\r\n        };\r\n    };\r\n    var patchClassMemberFunction = function (classObject, name) {\r\n        return patchObjectFunction(classObject.prototype, name + \".prototype\");\r\n    };\r\n    var connectionCallbackFunctions = [\r\n        \"connect\", \"changeUser\",\r\n        \"ping\", \"statistics\", \"end\",\r\n    ];\r\n    var connectionClass = require(path.dirname(originalMysqlPath) + \"/lib/Connection\");\r\n    connectionCallbackFunctions.forEach(function (value) { return patchClassMemberFunction(connectionClass, \"Connection\")(value); });\r\n    // Connection.createQuery is a static method\r\n    patchObjectFunction(connectionClass, \"Connection\")(\"createQuery\", function (resultContainer, cb) {\r\n        return function (err) {\r\n            var hrDuration = process.hrtime(resultContainer.startTime);\r\n            /* tslint:disable-next-line:no-bitwise */\r\n            var duration = (hrDuration[0] * 1e3 + hrDuration[1] / 1e6) | 0;\r\n            diagnostic_channel_1.channel.publish(\"mysql\", { query: resultContainer.result, callbackArgs: arguments, err: err, duration: duration });\r\n            cb.apply(this, arguments);\r\n        };\r\n    });\r\n    var poolCallbackFunctions = [\r\n        \"_enqueueCallback\",\r\n    ];\r\n    var poolClass = require(path.dirname(originalMysqlPath) + \"/lib/Pool\");\r\n    poolCallbackFunctions.forEach(function (value) { return patchClassMemberFunction(poolClass, \"Pool\")(value); });\r\n    return originalMysql;\r\n};\r\nexports.mysql = {\r\n    versionSpecifier: \">= 2.0.0 <= 2.14.x\",\r\n    patch: mysqlPatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"mysql\", exports.mysql);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=mysql.pub.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 77;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 78;","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nfunction postgresPool1PatchFunction(originalPgPool) {\r\n    var originalConnect = originalPgPool.prototype.connect;\r\n    originalPgPool.prototype.connect = function connect(callback) {\r\n        if (callback) {\r\n            arguments[0] = diagnostic_channel_1.channel.bindToContext(callback);\r\n        }\r\n        originalConnect.apply(this, arguments);\r\n    };\r\n    return originalPgPool;\r\n}\r\nexports.postgresPool1 = {\r\n    versionSpecifier: \"1.x\",\r\n    patch: postgresPool1PatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"pg-pool\", exports.postgresPool1);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=pg-pool.pub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar events_1 = require(\"events\");\r\nfunction postgres6PatchFunction(originalPg, originalPgPath) {\r\n    var originalClientQuery = originalPg.Client.prototype.query;\r\n    var diagnosticOriginalFunc = \"__diagnosticOriginalFunc\";\r\n    // wherever the callback is passed, find it, save it, and remove it from the call\r\n    // to the the original .query() function\r\n    originalPg.Client.prototype.query = function query(config, values, callback) {\r\n        var data = {\r\n            query: {},\r\n            database: {\r\n                host: this.connectionParameters.host,\r\n                port: this.connectionParameters.port,\r\n            },\r\n            result: null,\r\n            error: null,\r\n            duration: 0,\r\n        };\r\n        var start = process.hrtime();\r\n        var queryResult;\r\n        function patchCallback(cb) {\r\n            if (cb && cb[diagnosticOriginalFunc]) {\r\n                cb = cb[diagnosticOriginalFunc];\r\n            }\r\n            var trackingCallback = diagnostic_channel_1.channel.bindToContext(function (err, res) {\r\n                var end = process.hrtime(start);\r\n                data.result = res && { rowCount: res.rowCount, command: res.command };\r\n                data.error = err;\r\n                data.duration = Math.ceil((end[0] * 1e3) + (end[1] / 1e6));\r\n                diagnostic_channel_1.channel.publish(\"postgres\", data);\r\n                // emulate weird internal behavior in pg@6\r\n                // on success, the callback is called *before* query events are emitted\r\n                // on failure, the callback is called *instead of* the query emitting events\r\n                // with no events, that means no promises (since the promise is resolved/rejected in an event handler)\r\n                // since we are always inserting ourselves as a callback, we have to restore the original\r\n                // behavior if the user didn't provide one themselves\r\n                if (err) {\r\n                    if (cb) {\r\n                        return cb.apply(this, arguments);\r\n                    }\r\n                    else if (queryResult && queryResult instanceof events_1.EventEmitter) {\r\n                        queryResult.emit(\"error\", err);\r\n                    }\r\n                }\r\n                else if (cb) {\r\n                    cb.apply(this, arguments);\r\n                }\r\n            });\r\n            try {\r\n                Object.defineProperty(trackingCallback, diagnosticOriginalFunc, { value: cb });\r\n                return trackingCallback;\r\n            }\r\n            catch (e) {\r\n                // this should never happen, but bailout in case it does\r\n                return cb;\r\n            }\r\n        }\r\n        // this function takes too many variations of arguments.\r\n        // this patches any provided callback or creates a new callback if one wasn't provided.\r\n        // since the callback is always called (if provided) in addition to always having a Promisified\r\n        // EventEmitter returned (well, sometimes -- see above), its safe to insert a callback if none was given\r\n        try {\r\n            if (typeof config === \"string\") {\r\n                if (values instanceof Array) {\r\n                    data.query.preparable = {\r\n                        text: config,\r\n                        args: values,\r\n                    };\r\n                    callback = patchCallback(callback);\r\n                }\r\n                else {\r\n                    data.query.text = config;\r\n                    // pg v6 will, for some reason, accept both\r\n                    // client.query(\"...\", undefined, () => {...})\r\n                    // **and**\r\n                    // client.query(\"...\", () => {...});\r\n                    // Internally, precedence is given to the callback argument\r\n                    if (callback) {\r\n                        callback = patchCallback(callback);\r\n                    }\r\n                    else {\r\n                        values = patchCallback(values);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (typeof config.name === \"string\") {\r\n                    data.query.plan = config.name;\r\n                }\r\n                else if (config.values instanceof Array) {\r\n                    data.query.preparable = {\r\n                        text: config.text,\r\n                        args: config.values,\r\n                    };\r\n                }\r\n                else {\r\n                    data.query.text = config.text;\r\n                }\r\n                if (callback) {\r\n                    callback = patchCallback(callback);\r\n                }\r\n                else if (values) {\r\n                    values = patchCallback(values);\r\n                }\r\n                else {\r\n                    config.callback = patchCallback(config.callback);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // if our logic here throws, bail out and just let pg do its thing\r\n            return originalClientQuery.apply(this, arguments);\r\n        }\r\n        arguments[0] = config;\r\n        arguments[1] = values;\r\n        arguments[2] = callback;\r\n        arguments.length = (arguments.length > 3) ? arguments.length : 3;\r\n        queryResult = originalClientQuery.apply(this, arguments);\r\n        return queryResult;\r\n    };\r\n    return originalPg;\r\n}\r\nexports.postgres6 = {\r\n    versionSpecifier: \"6.x\",\r\n    patch: postgres6PatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"pg\", exports.postgres6);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=pg.pub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar redisPatchFunction = function (originalRedis) {\r\n    var originalSend = originalRedis.RedisClient.prototype.internal_send_command;\r\n    // Note: This is mixing together both context tracking and dependency tracking\r\n    originalRedis.RedisClient.prototype.internal_send_command = function (commandObj) {\r\n        if (commandObj) {\r\n            var cb_1 = commandObj.callback;\r\n            if (!cb_1 || !cb_1.pubsubBound) {\r\n                var address_1 = this.address;\r\n                var startTime_1 = process.hrtime();\r\n                // Note: augmenting the callback on internal_send_command is correct for context\r\n                // tracking, but may be too low-level for dependency tracking. There are some 'errors'\r\n                // which higher levels expect in some cases\r\n                // However, the only other option is to intercept every individual command.\r\n                commandObj.callback = diagnostic_channel_1.channel.bindToContext(function (err, result) {\r\n                    var hrDuration = process.hrtime(startTime_1);\r\n                    /* tslint:disable-next-line:no-bitwise */\r\n                    var duration = (hrDuration[0] * 1e3 + hrDuration[1] / 1e6) | 0;\r\n                    diagnostic_channel_1.channel.publish(\"redis\", { duration: duration, address: address_1, commandObj: commandObj, err: err, result: result });\r\n                    if (typeof cb_1 === \"function\") {\r\n                        cb_1.apply(this, arguments);\r\n                    }\r\n                });\r\n                commandObj.callback.pubsubBound = true;\r\n            }\r\n        }\r\n        return originalSend.call(this, commandObj);\r\n    };\r\n    return originalRedis;\r\n};\r\nexports.redis = {\r\n    versionSpecifier: \">= 2.0.0 < 3.0.0\",\r\n    patch: redisPatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"redis\", exports.redis);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=redis.pub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\n// register a \"filter\" with each logger that publishes the data about to be logged\r\nvar winstonPatchFunction = function (originalWinston) {\r\n    var originalLog = originalWinston.Logger.prototype.log;\r\n    var curLevels;\r\n    var loggingFilter = function (level, message, meta) {\r\n        var levelKind;\r\n        if (curLevels === originalWinston.config.npm.levels) {\r\n            levelKind = \"npm\";\r\n        }\r\n        else if (curLevels === originalWinston.config.syslog.levels) {\r\n            levelKind = \"syslog\";\r\n        }\r\n        else {\r\n            levelKind = \"unknown\";\r\n        }\r\n        diagnostic_channel_1.channel.publish(\"winston\", { level: level, message: message, meta: meta, levelKind: levelKind });\r\n        return message;\r\n    };\r\n    // whenever someone logs, ensure our filter comes last\r\n    originalWinston.Logger.prototype.log = function log() {\r\n        curLevels = this.levels;\r\n        if (!this.filters || this.filters.length === 0) {\r\n            this.filters = [loggingFilter];\r\n        }\r\n        else if (this.filters[this.filters.length - 1] !== loggingFilter) {\r\n            this.filters = this.filters.filter(function (f) { return f !== loggingFilter; });\r\n            this.filters.push(loggingFilter);\r\n        }\r\n        return originalLog.apply(this, arguments);\r\n    };\r\n    return originalWinston;\r\n};\r\nexports.winston = {\r\n    versionSpecifier: \"2.x\",\r\n    patch: winstonPatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"winston\", exports.winston);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=winston.pub.js.map","/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar Zone$1 = (function (global) {\n    if (global['Zone']) {\n        throw new Error('Zone already loaded.');\n    }\n    var Zone = (function () {\n        function Zone(parent, zoneSpec) {\n            this._properties = null;\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        Zone.assertZonePatched = function () {\n            if (global.Promise !== ZoneAwarePromise) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        };\n        Object.defineProperty(Zone, \"current\", {\n            get: function () {\n                return _currentZoneFrame.zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone, \"currentTask\", {\n            get: function () {\n                return _currentTask;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone.prototype, \"parent\", {\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone.prototype, \"name\", {\n            get: function () {\n                return this._name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Zone.prototype.get = function (key) {\n            var zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        };\n        Zone.prototype.getZoneWith = function (key) {\n            var current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        };\n        Zone.prototype.fork = function (zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        };\n        Zone.prototype.wrap = function (callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            var _callback = this._zoneDelegate.intercept(this, callback, source);\n            var zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        };\n        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\n            task.runCount++;\n            if (task.zone != this)\n                throw new Error('A task can only be run in the zone which created it! (Creation: ' + task.zone.name +\n                    '; Execution: ' + this.name + ')');\n            var previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\n            try {\n                if (task.type == 'macroTask' && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = null;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        };\n        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('microTask', this, source, callback, data, customSchedule, null));\n        };\n        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('macroTask', this, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('eventTask', this, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.cancelTask = function (task) {\n            var value = this._zoneDelegate.cancelTask(this, task);\n            task.runCount = -1;\n            task.cancelFn = null;\n            return value;\n        };\n        return Zone;\n    }());\n    Zone.__symbol__ = __symbol__;\n    \n    var ZoneDelegate = (function () {\n        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { microTask: 0, macroTask: 0, eventTask: 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\n            this._hasTaskZS = zoneSpec && (zoneSpec.onHasTask ? zoneSpec : parentDelegate._hasTaskZS);\n            this._hasTaskDlgt =\n                zoneSpec && (zoneSpec.onHasTask ? parentDelegate : parentDelegate._hasTaskDlgt);\n            this._hasTaskCurrZone = zoneSpec && (zoneSpec.onHasTask ? this.zone : parentDelegate.zone);\n        }\n        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        };\n        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        };\n        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ?\n                this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.handleError = function (targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        };\n        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\n            try {\n                if (this._scheduleTaskZS) {\n                    return this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                }\n                else if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == 'microTask') {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n                return task;\n            }\n            finally {\n                if (targetZone == this.zone) {\n                    this._updateTaskCount(task.type, 1);\n                }\n            }\n        };\n        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\n            try {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            finally {\n                if (targetZone == this.zone && (task.type != 'eventTask') &&\n                    !(task.data && task.data.isPeriodic)) {\n                    this._updateTaskCount(task.type, -1);\n                }\n            }\n        };\n        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\n            var value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else if (!task.cancelFn) {\n                throw new Error('Task does not support cancellation, or is already canceled.');\n            }\n            else {\n                value = task.cancelFn(task);\n            }\n            if (targetZone == this.zone) {\n                // this should not be in the finally block, because exceptions assume not canceled.\n                this._updateTaskCount(task.type, -1);\n            }\n            return value;\n        };\n        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\n            return this._hasTaskZS &&\n                this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n        };\n        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\n            var counts = this._taskCounts;\n            var prev = counts[type];\n            var next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                var isEmpty = {\n                    microTask: counts.microTask > 0,\n                    macroTask: counts.macroTask > 0,\n                    eventTask: counts.eventTask > 0,\n                    change: type\n                };\n                try {\n                    this.hasTask(this.zone, isEmpty);\n                }\n                finally {\n                    if (this._parentDelegate) {\n                        this._parentDelegate._updateTaskCount(type, count);\n                    }\n                }\n            }\n        };\n        return ZoneDelegate;\n    }());\n    var ZoneTask = (function () {\n        function ZoneTask(type, zone, source, callback, options, scheduleFn, cancelFn) {\n            this.runCount = 0;\n            this.type = type;\n            this.zone = zone;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            this.callback = callback;\n            var self = this;\n            this.invoke = function () {\n                _numberOfNestedTaskFrames++;\n                try {\n                    return zone.runTask(self, this, arguments);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            };\n        }\n        ZoneTask.prototype.toString = function () {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId;\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        };\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        ZoneTask.prototype.toJSON = function () {\n            return {\n                type: this.type,\n                source: this.source,\n                data: this.data,\n                zone: this.zone.name,\n                invoke: this.invoke,\n                scheduleFn: this.scheduleFn,\n                cancelFn: this.cancelFn,\n                runCount: this.runCount,\n                callback: this.callback\n            };\n        };\n        return ZoneTask;\n    }());\n    var ZoneFrame = (function () {\n        function ZoneFrame(parent, zone) {\n            this.parent = parent;\n            this.zone = zone;\n        }\n        return ZoneFrame;\n    }());\n    function __symbol__(name) {\n        return '__zone_symbol__' + name;\n    }\n    \n    var symbolSetTimeout = __symbol__('setTimeout');\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var _currentZoneFrame = new ZoneFrame(null, new Zone(null, null));\n    var _currentTask = null;\n    var _microTaskQueue = [];\n    var _isDrainingMicrotaskQueue = false;\n    var _uncaughtPromiseErrors = [];\n    var _numberOfNestedTaskFrames = 0;\n    function scheduleQueueDrain() {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (global[symbolPromise]) {\n                global[symbolPromise].resolve(0)[symbolThen](drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n    }\n    function scheduleMicroTask(task) {\n        scheduleQueueDrain();\n        _microTaskQueue.push(task);\n    }\n    function consoleError(e) {\n        var rejection = e && e.rejection;\n        if (rejection) {\n            console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n        }\n        console.error(e);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                var queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (var i = 0; i < queue.length; i++) {\n                    var task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (e) {\n                        consoleError(e);\n                    }\n                }\n            }\n            while (_uncaughtPromiseErrors.length) {\n                var _loop_1 = function () {\n                    var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(function () {\n                            throw uncaughtPromiseError;\n                        });\n                    }\n                    catch (e) {\n                        consoleError(e);\n                    }\n                };\n                while (_uncaughtPromiseErrors.length) {\n                    _loop_1();\n                }\n            }\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    var symbolState = __symbol__('state');\n    var symbolValue = __symbol__('value');\n    var source = 'Promise.then';\n    var UNRESOLVED = null;\n    var RESOLVED = true;\n    var REJECTED = false;\n    var REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return function (v) {\n            resolvePromise(promise, state, v);\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    function resolvePromise(promise, state, value) {\n        if (promise[symbolState] === UNRESOLVED) {\n            if (value instanceof ZoneAwarePromise && value.hasOwnProperty(symbolState) &&\n                value.hasOwnProperty(symbolValue) && value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (isThenable(value)) {\n                value.then(makeResolver(promise, state), makeResolver(promise, false));\n            }\n            else {\n                promise[symbolState] = state;\n                var queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                for (var i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    try {\n                        throw new Error('Uncaught (in promise): ' + value +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (e) {\n                        var error_1 = e;\n                        error_1.rejection = value;\n                        error_1.promise = promise;\n                        error_1.zone = Zone.current;\n                        error_1.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(error_1);\n                        scheduleQueueDrain();\n                    }\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            promise[symbolState] = REJECTED;\n            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        var delegate = promise[symbolState] ? onFulfilled || forwardResolution : onRejected || forwardRejection;\n        zone.scheduleMicroTask(source, function () {\n            try {\n                resolvePromise(chainPromise, true, zone.run(delegate, null, [promise[symbolValue]]));\n            }\n            catch (error) {\n                resolvePromise(chainPromise, false, error);\n            }\n        });\n    }\n    var ZoneAwarePromise = (function () {\n        function ZoneAwarePromise(executor) {\n            var promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (e) {\n                resolvePromise(promise, false, e);\n            }\n        }\n        ZoneAwarePromise.toString = function () {\n            return 'function ZoneAwarePromise() { [native code] }';\n        };\n        ZoneAwarePromise.resolve = function (value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        };\n        ZoneAwarePromise.reject = function (error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        };\n        ZoneAwarePromise.race = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                _a = [res, rej], resolve = _a[0], reject = _a[1];\n                var _a;\n            });\n            function onResolve(value) {\n                promise && (promise = null || resolve(value));\n            }\n            function onReject(error) {\n                promise && (promise = null || reject(error));\n            }\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                var value = values_1[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        };\n        ZoneAwarePromise.all = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var count = 0;\n            var resolvedValues = [];\n            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {\n                var value = values_2[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then((function (index) { return function (value) {\n                    resolvedValues[index] = value;\n                    count--;\n                    if (!count) {\n                        resolve(resolvedValues);\n                    }\n                }; })(count), reject);\n                count++;\n            }\n            if (!count)\n                resolve(resolvedValues);\n            return promise;\n        };\n        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\n            var chainPromise = new this.constructor(null);\n            var zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        };\n        ZoneAwarePromise.prototype.catch = function (onRejected) {\n            return this.then(null, onRejected);\n        };\n        return ZoneAwarePromise;\n    }());\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    var NativePromise = global[__symbol__('Promise')] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    function patchThen(NativePromise) {\n        var NativePromiseProtototype = NativePromise.prototype;\n        var NativePromiseThen = NativePromiseProtototype[__symbol__('then')] =\n            NativePromiseProtototype.then;\n        NativePromiseProtototype.then = function (onResolve, onReject) {\n            var nativePromise = this;\n            return new ZoneAwarePromise(function (resolve, reject) {\n                NativePromiseThen.call(nativePromise, resolve, reject);\n            })\n                .then(onResolve, onReject);\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        if (typeof global['fetch'] !== 'undefined') {\n            var fetchPromise = void 0;\n            try {\n                // In MS Edge this throws\n                fetchPromise = global['fetch']();\n            }\n            catch (e) {\n                // In Chrome this throws instead.\n                fetchPromise = global['fetch']('about:blank');\n            }\n            // ignore output to prevent error;\n            fetchPromise.then(function () { return null; }, function () { return null; });\n            if (fetchPromise.constructor != NativePromise &&\n                fetchPromise.constructor != ZoneAwarePromise) {\n                patchThen(fetchPromise.constructor);\n            }\n        }\n    }\n    // This is not part of public API, but it is usefull for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    /*\n     * This code patches Error so that:\n     *   - It ignores un-needed stack frames.\n     *   - It Shows the associated Zone for reach frame.\n     */\n    var FrameType;\n    (function (FrameType) {\n        /// Skip this frame when printing out stack\n        FrameType[FrameType[\"blackList\"] = 0] = \"blackList\";\n        /// This frame marks zone transition\n        FrameType[FrameType[\"transition\"] = 1] = \"transition\";\n    })(FrameType || (FrameType = {}));\n    var NativeError = global[__symbol__('Error')] = global.Error;\n    // Store the frames which should be removed from the stack frames\n    var blackListedStackFrames = {};\n    // We must find the frame where Error was created, otherwise we assume we don't understand stack\n    var zoneAwareFrame;\n    global.Error = ZoneAwareError;\n    // How should the stack frames be parsed.\n    var frameParserStrategy = null;\n    var stackRewrite = 'stackRewrite';\n    // fix #595, create property descriptor\n    // for error properties\n    var createProperty = function (props, key) {\n        // if property is already defined, skip it.\n        if (props[key]) {\n            return;\n        }\n        // define a local property\n        // in case error property is not settable\n        var name = __symbol__(key);\n        props[key] = {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                // if local property has no value\n                // use internal error's property value\n                if (!this[name]) {\n                    var error_2 = this[__symbol__('error')];\n                    if (error_2) {\n                        this[name] = error_2[key];\n                    }\n                }\n                return this[name];\n            },\n            set: function (value) {\n                // setter will set value to local property value\n                this[name] = value;\n            }\n        };\n    };\n    // fix #595, create property descriptor\n    // for error method properties\n    var createMethodProperty = function (props, key) {\n        if (props[key]) {\n            return;\n        }\n        props[key] = {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: function () {\n                var error = this[__symbol__('error')];\n                var errorMethod = (error && error[key]) || this[key];\n                if (errorMethod) {\n                    return errorMethod.apply(error, arguments);\n                }\n            }\n        };\n    };\n    var createErrorProperties = function () {\n        var props = Object.create(null);\n        var error = new NativeError();\n        var keys = Object.getOwnPropertyNames(error);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(error, key)) {\n                createProperty(props, key);\n            }\n        }\n        var proto = NativeError.prototype;\n        if (proto) {\n            var pKeys = Object.getOwnPropertyNames(proto);\n            for (var i = 0; i < pKeys.length; i++) {\n                var key = pKeys[i];\n                // skip constructor\n                if (key !== 'constructor' && key !== 'toString' && key !== 'toSource') {\n                    createProperty(props, key);\n                }\n            }\n        }\n        // some other properties are not\n        // in NativeError\n        createProperty(props, 'originalStack');\n        createProperty(props, 'zoneAwareStack');\n        // define toString, toSource as method property\n        createMethodProperty(props, 'toString');\n        createMethodProperty(props, 'toSource');\n        return props;\n    };\n    var errorProperties = createErrorProperties();\n    // for derived Error class which extends ZoneAwareError\n    // we should not override the derived class's property\n    // so we create a new props object only copy the properties\n    // from errorProperties which not exist in derived Error's prototype\n    var getErrorPropertiesForPrototype = function (prototype) {\n        // if the prototype is ZoneAwareError.prototype\n        // we just return the prebuilt errorProperties.\n        if (prototype === ZoneAwareError.prototype) {\n            return errorProperties;\n        }\n        var newProps = Object.create(null);\n        var cKeys = Object.getOwnPropertyNames(errorProperties);\n        var keys = Object.getOwnPropertyNames(prototype);\n        cKeys.forEach(function (cKey) {\n            if (keys.filter(function (key) {\n                return key === cKey;\n            })\n                .length === 0) {\n                newProps[cKey] = errorProperties[cKey];\n            }\n        });\n        return newProps;\n    };\n    /**\n     * This is ZoneAwareError which processes the stack frame and cleans up extra frames as well as\n     * adds zone information to it.\n     */\n    function ZoneAwareError() {\n        // make sure we have a valid this\n        // if this is undefined(call Error without new) or this is global\n        // or this is some other objects, we should force to create a\n        // valid ZoneAwareError by call Object.create()\n        if (!(this instanceof ZoneAwareError)) {\n            return ZoneAwareError.apply(Object.create(ZoneAwareError.prototype), arguments);\n        }\n        // Create an Error.\n        var error = NativeError.apply(this, arguments);\n        this[__symbol__('error')] = error;\n        // Save original stack trace\n        error.originalStack = error.stack;\n        // Process the stack trace and rewrite the frames.\n        if (ZoneAwareError[stackRewrite] && error.originalStack) {\n            var frames_1 = error.originalStack.split('\\n');\n            var zoneFrame = _currentZoneFrame;\n            var i = 0;\n            // Find the first frame\n            while (frames_1[i] !== zoneAwareFrame && i < frames_1.length) {\n                i++;\n            }\n            for (; i < frames_1.length && zoneFrame; i++) {\n                var frame = frames_1[i];\n                if (frame.trim()) {\n                    var frameType = blackListedStackFrames.hasOwnProperty(frame) && blackListedStackFrames[frame];\n                    if (frameType === FrameType.blackList) {\n                        frames_1.splice(i, 1);\n                        i--;\n                    }\n                    else if (frameType === FrameType.transition) {\n                        if (zoneFrame.parent) {\n                            // This is the special frame where zone changed. Print and process it accordingly\n                            frames_1[i] += \" [\" + zoneFrame.parent.zone.name + \" => \" + zoneFrame.zone.name + \"]\";\n                            zoneFrame = zoneFrame.parent;\n                        }\n                        else {\n                            zoneFrame = null;\n                        }\n                    }\n                    else {\n                        frames_1[i] += \" [\" + zoneFrame.zone.name + \"]\";\n                    }\n                }\n            }\n            error.stack = error.zoneAwareStack = frames_1.join('\\n');\n        }\n        // use defineProperties here instead of copy property value\n        // because of issue #595 which will break angular2.\n        Object.defineProperties(this, getErrorPropertiesForPrototype(Object.getPrototypeOf(this)));\n        return this;\n    }\n    // Copy the prototype so that instanceof operator works as expected\n    ZoneAwareError.prototype = NativeError.prototype;\n    ZoneAwareError[Zone.__symbol__('blacklistedStackFrames')] = blackListedStackFrames;\n    ZoneAwareError[stackRewrite] = false;\n    if (NativeError.hasOwnProperty('stackTraceLimit')) {\n        // Extend default stack limit as we will be removing few frames.\n        NativeError.stackTraceLimit = Math.max(NativeError.stackTraceLimit, 15);\n        // make sure that ZoneAwareError has the same property which forwards to NativeError.\n        Object.defineProperty(ZoneAwareError, 'stackTraceLimit', {\n            get: function () {\n                return NativeError.stackTraceLimit;\n            },\n            set: function (value) {\n                return NativeError.stackTraceLimit = value;\n            }\n        });\n    }\n    if (NativeError.hasOwnProperty('captureStackTrace')) {\n        Object.defineProperty(ZoneAwareError, 'captureStackTrace', {\n            // add named function here because we need to remove this\n            // stack frame when prepareStackTrace below\n            value: function zoneCaptureStackTrace(targetObject, constructorOpt) {\n                NativeError.captureStackTrace(targetObject, constructorOpt);\n            }\n        });\n    }\n    Object.defineProperty(ZoneAwareError, 'prepareStackTrace', {\n        get: function () {\n            return NativeError.prepareStackTrace;\n        },\n        set: function (value) {\n            if (!value || typeof value !== 'function') {\n                return NativeError.prepareStackTrace = value;\n            }\n            return NativeError.prepareStackTrace = function (error, structuredStackTrace) {\n                // remove additional stack information from ZoneAwareError.captureStackTrace\n                if (structuredStackTrace) {\n                    for (var i = 0; i < structuredStackTrace.length; i++) {\n                        var st = structuredStackTrace[i];\n                        // remove the first function which name is zoneCaptureStackTrace\n                        if (st.getFunctionName() === 'zoneCaptureStackTrace') {\n                            structuredStackTrace.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                return value.apply(this, [error, structuredStackTrace]);\n            };\n        }\n    });\n    // Now we need to populet the `blacklistedStackFrames` as well as find the\n    // run/runGuraded/runTask frames. This is done by creating a detect zone and then threading\n    // the execution through all of the above methods so that we can look at the stack trace and\n    // find the frames of interest.\n    var detectZone = Zone.current.fork({\n        name: 'detect',\n        onInvoke: function (parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\n            // Here only so that it will show up in the stack frame so that it can be black listed.\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\n        },\n        onHandleError: function (parentZD, current, target, error) {\n            if (error.originalStack && Error === ZoneAwareError) {\n                var frames_2 = error.originalStack.split(/\\n/);\n                var runFrame = false, runGuardedFrame = false, runTaskFrame = false;\n                while (frames_2.length) {\n                    var frame = frames_2.shift();\n                    // On safari it is possible to have stack frame with no line number.\n                    // This check makes sure that we don't filter frames on name only (must have\n                    // linenumber)\n                    if (/:\\d+:\\d+/.test(frame)) {\n                        // Get rid of the path so that we don't accidintely find function name in path.\n                        // In chrome the seperator is `(` and `@` in FF and safari\n                        // Chrome: at Zone.run (zone.js:100)\n                        // Chrome: at Zone.run (http://localhost:9876/base/build/lib/zone.js:100:24)\n                        // FireFox: Zone.prototype.run@http://localhost:9876/base/build/lib/zone.js:101:24\n                        // Safari: run@http://localhost:9876/base/build/lib/zone.js:101:24\n                        var fnName = frame.split('(')[0].split('@')[0];\n                        var frameType = FrameType.transition;\n                        if (fnName.indexOf('ZoneAwareError') !== -1) {\n                            zoneAwareFrame = frame;\n                        }\n                        if (fnName.indexOf('runGuarded') !== -1) {\n                            runGuardedFrame = true;\n                        }\n                        else if (fnName.indexOf('runTask') !== -1) {\n                            runTaskFrame = true;\n                        }\n                        else if (fnName.indexOf('run') !== -1) {\n                            runFrame = true;\n                        }\n                        else {\n                            frameType = FrameType.blackList;\n                        }\n                        blackListedStackFrames[frame] = frameType;\n                        // Once we find all of the frames we can stop looking.\n                        if (runFrame && runGuardedFrame && runTaskFrame) {\n                            ZoneAwareError[stackRewrite] = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n    });\n    // carefully constructor a stack frame which contains all of the frames of interest which\n    // need to be detected and blacklisted.\n    var detectRunFn = function () {\n        detectZone.run(function () {\n            detectZone.runGuarded(function () {\n                throw new Error('blacklistStackFrames');\n            });\n        });\n    };\n    // Cause the error to extract the stack frames.\n    detectZone.runTask(detectZone.scheduleMacroTask('detect', detectRunFn, null, function () { return null; }, null));\n    return global['Zone'] = Zone;\n})(typeof window === 'object' && window || typeof self === 'object' && self || global);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars}\n */\nvar zoneSymbol = function (n) { return \"__zone_symbol__\" + n; };\nvar _global$1 = typeof window === 'object' && window || typeof self === 'object' && self || global;\nfunction bindArguments(args, source) {\n    for (var i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = Zone.current.wrap(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\n\n\nvar isNode = (!('nw' in _global$1) && typeof process !== 'undefined' &&\n    {}.toString.call(process) === '[object process]');\n\n\n\n\n\nvar EVENT_TASKS = zoneSymbol('eventTasks');\n// For EventTarget\nvar ADD_EVENT_LISTENER = 'addEventListener';\nvar REMOVE_EVENT_LISTENER = 'removeEventListener';\nfunction findExistingRegisteredTask(target, handler, name, capture, remove) {\n    var eventTasks = target[EVENT_TASKS];\n    if (eventTasks) {\n        for (var i = 0; i < eventTasks.length; i++) {\n            var eventTask = eventTasks[i];\n            var data = eventTask.data;\n            var listener = data.handler;\n            if ((data.handler === handler || listener.listener === handler) &&\n                data.useCapturing === capture && data.eventName === name) {\n                if (remove) {\n                    eventTasks.splice(i, 1);\n                }\n                return eventTask;\n            }\n        }\n    }\n    return null;\n}\nfunction findAllExistingRegisteredTasks(target, name, capture, remove) {\n    var eventTasks = target[EVENT_TASKS];\n    if (eventTasks) {\n        var result = [];\n        for (var i = eventTasks.length - 1; i >= 0; i--) {\n            var eventTask = eventTasks[i];\n            var data = eventTask.data;\n            if (data.eventName === name && data.useCapturing === capture) {\n                result.push(eventTask);\n                if (remove) {\n                    eventTasks.splice(i, 1);\n                }\n            }\n        }\n        return result;\n    }\n    return null;\n}\nfunction attachRegisteredEvent(target, eventTask, isPrepend) {\n    var eventTasks = target[EVENT_TASKS];\n    if (!eventTasks) {\n        eventTasks = target[EVENT_TASKS] = [];\n    }\n    if (isPrepend) {\n        eventTasks.unshift(eventTask);\n    }\n    else {\n        eventTasks.push(eventTask);\n    }\n}\nvar defaultListenerMetaCreator = function (self, args) {\n    return {\n        useCapturing: args[2],\n        eventName: args[0],\n        handler: args[1],\n        target: self || _global$1,\n        name: args[0],\n        invokeAddFunc: function (addFnSymbol, delegate) {\n            if (delegate && delegate.invoke) {\n                return this.target[addFnSymbol](this.eventName, delegate.invoke, this.useCapturing);\n            }\n            else {\n                return this.target[addFnSymbol](this.eventName, delegate, this.useCapturing);\n            }\n        },\n        invokeRemoveFunc: function (removeFnSymbol, delegate) {\n            if (delegate && delegate.invoke) {\n                return this.target[removeFnSymbol](this.eventName, delegate.invoke, this.useCapturing);\n            }\n            else {\n                return this.target[removeFnSymbol](this.eventName, delegate, this.useCapturing);\n            }\n        }\n    };\n};\nfunction makeZoneAwareAddListener(addFnName, removeFnName, useCapturingParam, allowDuplicates, isPrepend, metaCreator) {\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\n    if (allowDuplicates === void 0) { allowDuplicates = false; }\n    if (isPrepend === void 0) { isPrepend = false; }\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\n    var addFnSymbol = zoneSymbol(addFnName);\n    var removeFnSymbol = zoneSymbol(removeFnName);\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\n    function scheduleEventListener(eventTask) {\n        var meta = eventTask.data;\n        attachRegisteredEvent(meta.target, eventTask, isPrepend);\n        return meta.invokeAddFunc(addFnSymbol, eventTask);\n    }\n    function cancelEventListener(eventTask) {\n        var meta = eventTask.data;\n        findExistingRegisteredTask(meta.target, eventTask.invoke, meta.eventName, meta.useCapturing, true);\n        return meta.invokeRemoveFunc(removeFnSymbol, eventTask);\n    }\n    return function zoneAwareAddListener(self, args) {\n        var data = metaCreator(self, args);\n        data.useCapturing = data.useCapturing || defaultUseCapturing;\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\n        // see https://github.com/angular/zone.js/issues/190\n        var delegate = null;\n        if (typeof data.handler == 'function') {\n            delegate = data.handler;\n        }\n        else if (data.handler && data.handler.handleEvent) {\n            delegate = function (event) { return data.handler.handleEvent(event); };\n        }\n        var validZoneHandler = false;\n        try {\n            // In cross site contexts (such as WebDriver frameworks like Selenium),\n            // accessing the handler object here will cause an exception to be thrown which\n            // will fail tests prematurely.\n            validZoneHandler = data.handler && data.handler.toString() === '[object FunctionWrapper]';\n        }\n        catch (e) {\n            // Returning nothing here is fine, because objects in a cross-site context are unusable\n            return;\n        }\n        // Ignore special listeners of IE11 & Edge dev tools, see\n        // https://github.com/angular/zone.js/issues/150\n        if (!delegate || validZoneHandler) {\n            return data.invokeAddFunc(addFnSymbol, data.handler);\n        }\n        if (!allowDuplicates) {\n            var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, false);\n            if (eventTask) {\n                // we already registered, so this will have noop.\n                return data.invokeAddFunc(addFnSymbol, eventTask);\n            }\n        }\n        var zone = Zone.current;\n        var source = data.target.constructor['name'] + '.' + addFnName + ':' + data.eventName;\n        zone.scheduleEventTask(source, delegate, data, scheduleEventListener, cancelEventListener);\n    };\n}\nfunction makeZoneAwareRemoveListener(fnName, useCapturingParam, metaCreator) {\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\n    var symbol = zoneSymbol(fnName);\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\n    return function zoneAwareRemoveListener(self, args) {\n        var data = metaCreator(self, args);\n        data.useCapturing = data.useCapturing || defaultUseCapturing;\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\n        // see https://github.com/angular/zone.js/issues/190\n        var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, true);\n        if (eventTask) {\n            eventTask.zone.cancelTask(eventTask);\n        }\n        else {\n            data.invokeRemoveFunc(symbol, data.handler);\n        }\n    };\n}\nfunction makeZoneAwareRemoveAllListeners(fnName, useCapturingParam) {\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\n    var symbol = zoneSymbol(fnName);\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\n    return function zoneAwareRemoveAllListener(self, args) {\n        var target = self || _global$1;\n        if (args.length === 0) {\n            // remove all listeners without eventName\n            target[EVENT_TASKS] = [];\n            // we don't cancel Task either, because call native eventEmitter.removeAllListeners will\n            // will do remove listener(cancelTask) for us\n            target[symbol]();\n            return;\n        }\n        var eventName = args[0];\n        var useCapturing = args[1] || defaultUseCapturing;\n        // call this function just remove the related eventTask from target[EVENT_TASKS]\n        findAllExistingRegisteredTasks(target, eventName, useCapturing, true);\n        // we don't need useCapturing here because useCapturing is just for DOM, and\n        // removeAllListeners should only be called by node eventEmitter\n        // and we don't cancel Task either, because call native eventEmitter.removeAllListeners will\n        // will do remove listener(cancelTask) for us\n        target[symbol](eventName);\n    };\n}\nfunction makeZoneAwareListeners(fnName) {\n    var symbol = zoneSymbol(fnName);\n    return function zoneAwareEventListeners(self, args) {\n        var eventName = args[0];\n        var target = self || _global$1;\n        if (!target[EVENT_TASKS]) {\n            return [];\n        }\n        return target[EVENT_TASKS]\n            .filter(function (task) { return task.data.eventName === eventName; })\n            .map(function (task) { return task.data.handler; });\n    };\n}\nvar zoneAwareAddEventListener = makeZoneAwareAddListener(ADD_EVENT_LISTENER, REMOVE_EVENT_LISTENER);\nvar zoneAwareRemoveEventListener = makeZoneAwareRemoveListener(REMOVE_EVENT_LISTENER);\n\nvar originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\n\n\nfunction createNamedFn(name, delegate) {\n    try {\n        return (Function('f', \"return function \" + name + \"(){return f(this, arguments)}\"))(delegate);\n    }\n    catch (e) {\n        // if we fail, we must be CSP, just return delegate.\n        return function () {\n            return delegate(this, arguments);\n        };\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    var proto = target;\n    while (proto && Object.getOwnPropertyNames(proto).indexOf(name) === -1) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    var delegateName = zoneSymbol(name);\n    var delegate;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        proto[name] = createNamedFn(name, patchFn(delegate, delegateName, name));\n    }\n    return delegate;\n}\n// TODO: support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    var setNative = null;\n    function scheduleTask(task) {\n        var data = task.data;\n        data.args[data.callbackIndex] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, function (delegate) { return function (self, args) {\n        var meta = metaCreator(self, args);\n        if (meta.callbackIndex >= 0 && typeof args[meta.callbackIndex] === 'function') {\n            var task = Zone.current.scheduleMacroTask(meta.name, args[meta.callbackIndex], meta, scheduleTask, null);\n            return task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    }; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar callAndReturnFirstParam = function (fn) {\n    return function (self, args) {\n        fn(self, args);\n        return self;\n    };\n};\n// For EventEmitter\nvar EE_ADD_LISTENER = 'addListener';\nvar EE_PREPEND_LISTENER = 'prependListener';\nvar EE_REMOVE_LISTENER = 'removeListener';\nvar EE_REMOVE_ALL_LISTENER = 'removeAllListeners';\nvar EE_LISTENERS = 'listeners';\nvar EE_ON = 'on';\nvar zoneAwareAddListener$1 = callAndReturnFirstParam(makeZoneAwareAddListener(EE_ADD_LISTENER, EE_REMOVE_LISTENER, false, true, false));\nvar zoneAwarePrependListener = callAndReturnFirstParam(makeZoneAwareAddListener(EE_PREPEND_LISTENER, EE_REMOVE_LISTENER, false, true, true));\nvar zoneAwareRemoveListener$1 = callAndReturnFirstParam(makeZoneAwareRemoveListener(EE_REMOVE_LISTENER, false));\nvar zoneAwareRemoveAllListeners = callAndReturnFirstParam(makeZoneAwareRemoveAllListeners(EE_REMOVE_ALL_LISTENER, false));\nvar zoneAwareListeners = makeZoneAwareListeners(EE_LISTENERS);\nfunction patchEventEmitterMethods(obj) {\n    if (obj && obj.addListener) {\n        patchMethod(obj, EE_ADD_LISTENER, function () { return zoneAwareAddListener$1; });\n        patchMethod(obj, EE_PREPEND_LISTENER, function () { return zoneAwarePrependListener; });\n        patchMethod(obj, EE_REMOVE_LISTENER, function () { return zoneAwareRemoveListener$1; });\n        patchMethod(obj, EE_REMOVE_ALL_LISTENER, function () { return zoneAwareRemoveAllListeners; });\n        patchMethod(obj, EE_LISTENERS, function () { return zoneAwareListeners; });\n        obj[EE_ON] = obj[EE_ADD_LISTENER];\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n// EventEmitter\nvar events;\ntry {\n    events = require('events');\n}\ncatch (err) {\n}\nif (events && events.EventEmitter) {\n    patchEventEmitterMethods(events.EventEmitter.prototype);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar fs;\ntry {\n    fs = require('fs');\n}\ncatch (err) {\n}\n// watch, watchFile, unwatchFile has been patched\n// because EventEmitter has been patched\nvar TO_PATCH_MACROTASK_METHODS = [\n    'access', 'appendFile', 'chmod', 'chown', 'close', 'exists', 'fchmod',\n    'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchmod',\n    'lchown', 'link', 'lstat', 'mkdir', 'mkdtemp', 'open', 'read',\n    'readdir', 'readFile', 'readlink', 'realpath', 'rename', 'rmdir', 'stat',\n    'symlink', 'truncate', 'unlink', 'utimes', 'write', 'writeFile',\n];\nif (fs) {\n    TO_PATCH_MACROTASK_METHODS.filter(function (name) { return !!fs[name] && typeof fs[name] === 'function'; })\n        .forEach(function (name) {\n        patchMacroTask(fs, name, function (self, args) {\n            return {\n                name: 'fs.' + name,\n                args: args,\n                callbackIndex: args.length > 0 ? args.length - 1 : -1,\n                target: self\n            };\n        });\n    });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    var setNative = null;\n    var clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    var tasksByHandleId = {};\n    function scheduleTask(task) {\n        var data = task.data;\n        data.args[0] = function () {\n            task.invoke.apply(this, arguments);\n            delete tasksByHandleId[data.handleId];\n        };\n        data.handleId = setNative.apply(window, data.args);\n        tasksByHandleId[data.handleId] = task;\n        return task;\n    }\n    function clearTask(task) {\n        delete tasksByHandleId[task.data.handleId];\n        return clearNative(task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, function (delegate) { return function (self, args) {\n            if (typeof args[0] === 'function') {\n                var zone = Zone.current;\n                var options = {\n                    handleId: null,\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,\n                    args: args\n                };\n                var task = zone.scheduleMacroTask(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                var handle = task.data.handleId;\n                if (handle.ref && handle.unref) {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        }; });\n    clearNative =\n        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\n            var task = typeof args[0] === 'number' ? tasksByHandleId[args[0]] : args[0];\n            if (task && typeof task.type === 'string') {\n                if (task.cancelFn && task.data.isPeriodic || task.runCount === 0) {\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        }; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar set = 'set';\nvar clear = 'clear';\nvar _global = typeof window === 'object' && window || typeof self === 'object' && self || global;\n// Timers\nvar timers = require('timers');\npatchTimer(timers, set, clear, 'Timeout');\npatchTimer(timers, set, clear, 'Interval');\npatchTimer(timers, set, clear, 'Immediate');\nvar shouldPatchGlobalTimers = global.setTimeout !== timers.setTimeout;\nif (shouldPatchGlobalTimers) {\n    patchTimer(_global, set, clear, 'Timeout');\n    patchTimer(_global, set, clear, 'Interval');\n    patchTimer(_global, set, clear, 'Immediate');\n}\npatchNextTick();\n// Crypto\nvar crypto;\ntry {\n    crypto = require('crypto');\n}\ncatch (err) {\n}\n// TODO(gdi2290): implement a better way to patch these methods\nif (crypto) {\n    var nativeRandomBytes_1 = crypto.randomBytes;\n    crypto.randomBytes = function randomBytesZone(size, callback) {\n        if (!callback) {\n            return nativeRandomBytes_1(size);\n        }\n        else {\n            var zone = Zone.current;\n            var source = crypto.constructor.name + '.randomBytes';\n            return nativeRandomBytes_1(size, zone.wrap(callback, source));\n        }\n    }.bind(crypto);\n    var nativePbkdf2_1 = crypto.pbkdf2;\n    crypto.pbkdf2 = function pbkdf2Zone() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var fn = args[args.length - 1];\n        if (typeof fn === 'function') {\n            var zone = Zone.current;\n            var source = crypto.constructor.name + '.pbkdf2';\n            args[args.length - 1] = zone.wrap(fn, source);\n            return nativePbkdf2_1.apply(void 0, args);\n        }\n        else {\n            return nativePbkdf2_1.apply(void 0, args);\n        }\n    }.bind(crypto);\n}\n// HTTP Client\nvar httpClient;\ntry {\n    httpClient = require('_http_client');\n}\ncatch (err) {\n}\nif (httpClient && httpClient.ClientRequest) {\n    var ClientRequest_1 = httpClient.ClientRequest.bind(httpClient);\n    httpClient.ClientRequest = function (options, callback) {\n        if (!callback) {\n            return new ClientRequest_1(options);\n        }\n        else {\n            var zone = Zone.current;\n            return new ClientRequest_1(options, zone.wrap(callback, 'http.ClientRequest'));\n        }\n    };\n}\nfunction patchNextTick() {\n    var setNative = null;\n    function scheduleTask(task) {\n        var args = task.data;\n        args[0] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(process, args);\n        return task;\n    }\n    setNative =\n        patchMethod(process, 'nextTick', function (delegate) { return function (self, args) {\n            if (typeof args[0] === 'function') {\n                var zone = Zone.current;\n                var task = zone.scheduleMicroTask('nextTick', args[0], args, scheduleTask);\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(process, args);\n            }\n        }; });\n}\n\n})));\n","module.exports = require(\"timers\");","module.exports = require(\"_http_client\");","\"use strict\";\r\nvar DiagChannel = require(\"./diagnostic-channel/initialization\");\r\nvar AutoCollectConsole = (function () {\r\n    function AutoCollectConsole(client) {\r\n        if (!!AutoCollectConsole.INSTANCE) {\r\n            throw new Error(\"Console logging adapter tracking should be configured from the applicationInsights object\");\r\n        }\r\n        this._client = client;\r\n        AutoCollectConsole.INSTANCE = this;\r\n    }\r\n    AutoCollectConsole.prototype.enable = function (isEnabled, collectConsoleLog) {\r\n        if (DiagChannel.IsInitialized) {\r\n            require(\"./diagnostic-channel/console.sub\").enable(isEnabled && collectConsoleLog, this._client);\r\n            require(\"./diagnostic-channel/bunyan.sub\").enable(isEnabled, this._client);\r\n            require(\"./diagnostic-channel/winston.sub\").enable(isEnabled, this._client);\r\n        }\r\n    };\r\n    AutoCollectConsole.prototype.isInitialized = function () {\r\n        return this._isInitialized;\r\n    };\r\n    AutoCollectConsole.prototype.dispose = function () {\r\n        AutoCollectConsole.INSTANCE = null;\r\n        this.enable(false, false);\r\n    };\r\n    AutoCollectConsole._methodNames = [\"debug\", \"info\", \"log\", \"warn\", \"error\"];\r\n    return AutoCollectConsole;\r\n}());\r\nmodule.exports = AutoCollectConsole;\r\n//# sourceMappingURL=Console.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Contracts_1 = require(\"../../Declarations/Contracts\");\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nvar subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        // Message can have a trailing newline\r\n        var message = event.data.message;\r\n        if (message.lastIndexOf(\"\\n\") == message.length - 1) {\r\n            message = message.substring(0, message.length - 1);\r\n        }\r\n        client.trackTrace({ message: message, severity: (event.data.stderr ? Contracts_1.SeverityLevel.Warning : Contracts_1.SeverityLevel.Information) });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"console\", subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"console\", subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=console.sub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Generated_1 = require(\"./Generated\");\r\nvar RemoteDependencyDataConstants = (function () {\r\n    function RemoteDependencyDataConstants() {\r\n    }\r\n    RemoteDependencyDataConstants.TYPE_HTTP = \"Http\";\r\n    RemoteDependencyDataConstants.TYPE_AI = \"Http (tracked component)\";\r\n    return RemoteDependencyDataConstants;\r\n}());\r\nexports.RemoteDependencyDataConstants = RemoteDependencyDataConstants;\r\nfunction domainSupportsProperties(domain) {\r\n    return \"properties\" in domain ||\r\n        domain instanceof Generated_1.EventData ||\r\n        domain instanceof Generated_1.ExceptionData ||\r\n        domain instanceof Generated_1.MessageData ||\r\n        domain instanceof Generated_1.MetricData ||\r\n        domain instanceof Generated_1.PageViewData ||\r\n        domain instanceof Generated_1.RemoteDependencyData ||\r\n        domain instanceof Generated_1.RequestData;\r\n}\r\nexports.domainSupportsProperties = domainSupportsProperties;\r\n//# sourceMappingURL=Constants.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * Instances of AvailabilityData represent the result of executing an availability test.\r\n */\r\nvar AvailabilityData = (function (_super) {\r\n    __extends(AvailabilityData, _super);\r\n    function AvailabilityData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return AvailabilityData;\r\n}(Domain));\r\nmodule.exports = AvailabilityData;\r\n//# sourceMappingURL=AvailabilityData.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\nvar ContextTagKeys = (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nmodule.exports = ContextTagKeys;\r\n//# sourceMappingURL=ContextTagKeys.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Base = require(\"./Base\");\r\n\"use strict\";\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = (function (_super) {\r\n    __extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nmodule.exports = Data;\r\n//# sourceMappingURL=Data.js.map","\"use strict\";\r\n// THIS FILE WAS AUTOGENERATED\r\nvar DataPointType = require(\"./DataPointType\");\r\n\"use strict\";\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nmodule.exports = DataPoint;\r\n//# sourceMappingURL=DataPoint.js.map","\"use strict\";\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nmodule.exports = Envelope;\r\n//# sourceMappingURL=Envelope.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = (function (_super) {\r\n    __extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nmodule.exports = ExceptionData;\r\n//# sourceMappingURL=ExceptionData.js.map","\"use strict\";\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nmodule.exports = ExceptionDetails;\r\n//# sourceMappingURL=ExceptionDetails.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = (function (_super) {\r\n    __extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nmodule.exports = MessageData;\r\n//# sourceMappingURL=MessageData.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = (function (_super) {\r\n    __extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nmodule.exports = MetricData;\r\n//# sourceMappingURL=MetricData.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar EventData = require(\"./EventData\");\r\n\"use strict\";\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = (function (_super) {\r\n    __extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nmodule.exports = PageViewData;\r\n//# sourceMappingURL=PageViewData.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = (function (_super) {\r\n    __extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nmodule.exports = RemoteDependencyData;\r\n//# sourceMappingURL=RemoteDependencyData.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * An instance of Request represents completion of an external request to the application to do work and contains a summary of that request execution and the results.\r\n */\r\nvar RequestData = (function (_super) {\r\n    __extends(RequestData, _super);\r\n    function RequestData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RequestData;\r\n}(Domain));\r\nmodule.exports = RequestData;\r\n//# sourceMappingURL=RequestData.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nvar SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\nmodule.exports = SeverityLevel;\r\n//# sourceMappingURL=SeverityLevel.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nmodule.exports = StackFrame;\r\n//# sourceMappingURL=StackFrame.js.map","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./TelemetryType\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Converts the user-friendly enumeration TelemetryType to the underlying schema baseType value\r\n * @param type Type to convert to BaseData string\r\n */\r\nfunction telemetryTypeToBaseType(type) {\r\n    switch (type) {\r\n        case TelemetryType.Event:\r\n            return \"EventData\";\r\n        case TelemetryType.Exception:\r\n            return \"ExceptionData\";\r\n        case TelemetryType.Trace:\r\n            return \"MessageData\";\r\n        case TelemetryType.Metric:\r\n            return \"MetricData\";\r\n        case TelemetryType.Request:\r\n            return \"RequestData\";\r\n        case TelemetryType.Dependency:\r\n            return \"RemoteDependencyData\";\r\n    }\r\n    return undefined;\r\n}\r\nexports.telemetryTypeToBaseType = telemetryTypeToBaseType;\r\n/**\r\n * Converts the schema baseType value to the user-friendly enumeration TelemetryType\r\n * @param baseType BaseData string to convert to TelemetryType\r\n */\r\nfunction baseTypeToTelemetryType(baseType) {\r\n    switch (baseType) {\r\n        case \"EventData\":\r\n            return TelemetryType.Event;\r\n        case \"ExceptionData\":\r\n            return TelemetryType.Exception;\r\n        case \"MessageData\":\r\n            return TelemetryType.Trace;\r\n        case \"MetricData\":\r\n            return TelemetryType.Metric;\r\n        case \"RequestData\":\r\n            return TelemetryType.Request;\r\n        case \"RemoteDependencyData\":\r\n            return TelemetryType.Dependency;\r\n    }\r\n    return undefined;\r\n}\r\nexports.baseTypeToTelemetryType = baseTypeToTelemetryType;\r\n/**\r\n * Telemetry types supported by this SDK\r\n */\r\nvar TelemetryType;\r\n(function (TelemetryType) {\r\n    TelemetryType[TelemetryType[\"Event\"] = 0] = \"Event\";\r\n    TelemetryType[TelemetryType[\"Exception\"] = 1] = \"Exception\";\r\n    TelemetryType[TelemetryType[\"Trace\"] = 2] = \"Trace\";\r\n    TelemetryType[TelemetryType[\"Metric\"] = 3] = \"Metric\";\r\n    TelemetryType[TelemetryType[\"Request\"] = 4] = \"Request\";\r\n    TelemetryType[TelemetryType[\"Dependency\"] = 5] = \"Dependency\";\r\n})(TelemetryType = exports.TelemetryType || (exports.TelemetryType = {}));\r\n//# sourceMappingURL=TelemetryType.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Contracts_1 = require(\"../../Declarations/Contracts\");\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\n// Mapping from bunyan levels defined at https://github.com/trentm/node-bunyan/blob/master/lib/bunyan.js#L256\r\nvar bunyanToAILevelMap = {\r\n    10: Contracts_1.SeverityLevel.Verbose,\r\n    20: Contracts_1.SeverityLevel.Verbose,\r\n    30: Contracts_1.SeverityLevel.Information,\r\n    40: Contracts_1.SeverityLevel.Warning,\r\n    50: Contracts_1.SeverityLevel.Error,\r\n    60: Contracts_1.SeverityLevel.Critical,\r\n};\r\nvar subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        var AIlevel = bunyanToAILevelMap[event.data.level];\r\n        client.trackTrace({ message: event.data.result, severity: AIlevel });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"bunyan\", subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"bunyan\", subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=bunyan.sub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Contracts_1 = require(\"../../Declarations/Contracts\");\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nvar winstonToAILevelMap = {\r\n    syslog: function (og) {\r\n        var map = {\r\n            emerg: Contracts_1.SeverityLevel.Critical,\r\n            alert: Contracts_1.SeverityLevel.Critical,\r\n            crit: Contracts_1.SeverityLevel.Critical,\r\n            error: Contracts_1.SeverityLevel.Error,\r\n            warning: Contracts_1.SeverityLevel.Warning,\r\n            notice: Contracts_1.SeverityLevel.Information,\r\n            info: Contracts_1.SeverityLevel.Information,\r\n            debug: Contracts_1.SeverityLevel.Verbose\r\n        };\r\n        return map[og] === undefined ? Contracts_1.SeverityLevel.Information : map[og];\r\n    },\r\n    npm: function (og) {\r\n        var map = {\r\n            error: Contracts_1.SeverityLevel.Error,\r\n            warn: Contracts_1.SeverityLevel.Warning,\r\n            info: Contracts_1.SeverityLevel.Information,\r\n            verbose: Contracts_1.SeverityLevel.Verbose,\r\n            debug: Contracts_1.SeverityLevel.Verbose,\r\n            silly: Contracts_1.SeverityLevel.Verbose\r\n        };\r\n        return map[og] === undefined ? Contracts_1.SeverityLevel.Information : map[og];\r\n    },\r\n    unknown: function (og) {\r\n        return Contracts_1.SeverityLevel.Information;\r\n    }\r\n};\r\nvar subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        var AIlevel = winstonToAILevelMap[event.data.levelKind](event.data.level);\r\n        client.trackTrace({\r\n            message: event.data.message,\r\n            severity: AIlevel,\r\n            properties: event.data.meta\r\n        });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"winston\", subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"winston\", subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=winston.sub.js.map","\"use strict\";\r\nvar AutoCollectExceptions = (function () {\r\n    function AutoCollectExceptions(client) {\r\n        if (!!AutoCollectExceptions.INSTANCE) {\r\n            throw new Error(\"Exception tracking should be configured from the applicationInsights object\");\r\n        }\r\n        AutoCollectExceptions.INSTANCE = this;\r\n        this._client = client;\r\n    }\r\n    Object.defineProperty(AutoCollectExceptions, \"UNCAUGHT_EXCEPTION_HANDLER_NAME\", {\r\n        get: function () { return \"uncaughtException\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AutoCollectExceptions, \"UNHANDLED_REJECTION_HANDLER_NAME\", {\r\n        get: function () { return \"unhandledRejection\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AutoCollectExceptions.prototype.isInitialized = function () {\r\n        return this._isInitialized;\r\n    };\r\n    AutoCollectExceptions.prototype.enable = function (isEnabled) {\r\n        var _this = this;\r\n        if (isEnabled) {\r\n            this._isInitialized = true;\r\n            var self = this;\r\n            if (!this._exceptionListenerHandle) {\r\n                var handle = function (reThrow, error) {\r\n                    _this._client.trackException({ exception: error });\r\n                    _this._client.flush({ isAppCrashing: true });\r\n                    if (reThrow) {\r\n                        var THIS_IS_APPLICATION_INSIGHTS_RETHROWING_YOUR_EXCEPTION = error;\r\n                        throw THIS_IS_APPLICATION_INSIGHTS_RETHROWING_YOUR_EXCEPTION; // Error originated somewhere else in your app\r\n                    }\r\n                };\r\n                this._exceptionListenerHandle = handle.bind(this, true);\r\n                this._rejectionListenerHandle = handle.bind(this, false);\r\n                process.on(AutoCollectExceptions.UNCAUGHT_EXCEPTION_HANDLER_NAME, this._exceptionListenerHandle);\r\n                process.on(AutoCollectExceptions.UNHANDLED_REJECTION_HANDLER_NAME, this._rejectionListenerHandle);\r\n            }\r\n        }\r\n        else {\r\n            if (this._exceptionListenerHandle) {\r\n                process.removeListener(AutoCollectExceptions.UNCAUGHT_EXCEPTION_HANDLER_NAME, this._exceptionListenerHandle);\r\n                process.removeListener(AutoCollectExceptions.UNHANDLED_REJECTION_HANDLER_NAME, this._rejectionListenerHandle);\r\n                this._exceptionListenerHandle = undefined;\r\n                this._rejectionListenerHandle = undefined;\r\n                delete this._exceptionListenerHandle;\r\n                delete this._rejectionListenerHandle;\r\n            }\r\n        }\r\n    };\r\n    AutoCollectExceptions.prototype.dispose = function () {\r\n        AutoCollectExceptions.INSTANCE = null;\r\n        this.enable(false);\r\n        this._isInitialized = false;\r\n    };\r\n    AutoCollectExceptions.INSTANCE = null;\r\n    return AutoCollectExceptions;\r\n}());\r\nmodule.exports = AutoCollectExceptions;\r\n//# sourceMappingURL=Exceptions.js.map","module.exports = require(\"constants\");","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar url = require(\"url\");\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\nvar Util = require(\"../Library/Util\");\r\nvar RequestResponseHeaders = require(\"../Library/RequestResponseHeaders\");\r\nvar RequestParser = require(\"./RequestParser\");\r\nvar CorrelationIdManager = require(\"../Library/CorrelationIdManager\");\r\n/**\r\n * Helper class to read data from the requst/response objects and convert them into the telemetry contract\r\n */\r\nvar HttpDependencyParser = (function (_super) {\r\n    __extends(HttpDependencyParser, _super);\r\n    function HttpDependencyParser(requestOptions, request) {\r\n        var _this = _super.call(this) || this;\r\n        if (request && request.method && requestOptions) {\r\n            // The ClientRequest.method property isn't documented, but is always there.\r\n            _this.method = request.method;\r\n            _this.url = HttpDependencyParser._getUrlFromRequestOptions(requestOptions, request);\r\n            _this.startTime = +new Date();\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Called when the ClientRequest emits an error event.\r\n     */\r\n    HttpDependencyParser.prototype.onError = function (error) {\r\n        this._setStatus(undefined, error);\r\n    };\r\n    /**\r\n     * Called when the ClientRequest emits a response event.\r\n     */\r\n    HttpDependencyParser.prototype.onResponse = function (response) {\r\n        this._setStatus(response.statusCode, undefined);\r\n        this.correlationId = Util.getCorrelationContextTarget(response, RequestResponseHeaders.requestContextTargetKey);\r\n    };\r\n    /**\r\n     * Gets a dependency data contract object for a completed ClientRequest.\r\n     */\r\n    HttpDependencyParser.prototype.getDependencyTelemetry = function (baseTelemetry, dependencyId) {\r\n        var urlObject = url.parse(this.url);\r\n        urlObject.search = undefined;\r\n        urlObject.hash = undefined;\r\n        var dependencyName = this.method.toUpperCase() + \" \" + urlObject.pathname;\r\n        var remoteDependencyType = Contracts.RemoteDependencyDataConstants.TYPE_HTTP;\r\n        var remoteDependencyTarget = urlObject.hostname;\r\n        if (this.correlationId) {\r\n            remoteDependencyType = Contracts.RemoteDependencyDataConstants.TYPE_AI;\r\n            if (this.correlationId !== CorrelationIdManager.correlationIdPrefix) {\r\n                remoteDependencyTarget = urlObject.hostname + \" | \" + this.correlationId;\r\n            }\r\n        }\r\n        else {\r\n            remoteDependencyType = Contracts.RemoteDependencyDataConstants.TYPE_HTTP;\r\n        }\r\n        var dependencyTelemetry = {\r\n            id: dependencyId,\r\n            name: dependencyName,\r\n            data: this.url,\r\n            duration: this.duration,\r\n            success: this._isSuccess(),\r\n            resultCode: this.statusCode ? this.statusCode.toString() : null,\r\n            properties: this.properties || {},\r\n            dependencyTypeName: remoteDependencyType,\r\n            target: remoteDependencyTarget\r\n        };\r\n        // We should keep any parameters the user passed in\r\n        // Except the fields defined above in requestTelemetry, which take priority\r\n        // Except the properties field, where they're merged instead, with baseTelemetry taking priority\r\n        if (baseTelemetry) {\r\n            // Copy missing fields\r\n            for (var key in baseTelemetry) {\r\n                if (!dependencyTelemetry[key]) {\r\n                    dependencyTelemetry[key] = baseTelemetry[key];\r\n                }\r\n            }\r\n            // Merge properties\r\n            if (baseTelemetry.properties) {\r\n                for (var key in baseTelemetry.properties) {\r\n                    dependencyTelemetry.properties[key] = baseTelemetry.properties[key];\r\n                }\r\n            }\r\n        }\r\n        return dependencyTelemetry;\r\n    };\r\n    /**\r\n     * Builds a URL from request options, using the same logic as http.request(). This is\r\n     * necessary because a ClientRequest object does not expose a url property.\r\n     */\r\n    HttpDependencyParser._getUrlFromRequestOptions = function (options, request) {\r\n        if (typeof options === 'string') {\r\n            options = url.parse(options);\r\n        }\r\n        else {\r\n            // Avoid modifying the original options object.\r\n            var originalOptions_1 = options;\r\n            options = {};\r\n            if (originalOptions_1) {\r\n                Object.keys(originalOptions_1).forEach(function (key) {\r\n                    options[key] = originalOptions_1[key];\r\n                });\r\n            }\r\n        }\r\n        // Oddly, url.format ignores path and only uses pathname and search,\r\n        // so create them from the path, if path was specified\r\n        if (options.path) {\r\n            var parsedQuery = url.parse(options.path);\r\n            options.pathname = parsedQuery.pathname;\r\n            options.search = parsedQuery.search;\r\n        }\r\n        // Simiarly, url.format ignores hostname and port if host is specified,\r\n        // even if host doesn't have the port, but http.request does not work\r\n        // this way. It will use the port if one is not specified in host,\r\n        // effectively treating host as hostname, but will use the port specified\r\n        // in host if it exists.\r\n        if (options.host && options.port) {\r\n            // Force a protocol so it will parse the host as the host, not path.\r\n            // It is discarded and not used, so it doesn't matter if it doesn't match\r\n            var parsedHost = url.parse(\"http://\" + options.host);\r\n            if (!parsedHost.port && options.port) {\r\n                options.hostname = options.host;\r\n                delete options.host;\r\n            }\r\n        }\r\n        // Mix in default values used by http.request and others\r\n        options.protocol = options.protocol || (request.agent && request.agent.protocol) || undefined;\r\n        options.hostname = options.hostname || 'localhost';\r\n        return url.format(options);\r\n    };\r\n    return HttpDependencyParser;\r\n}(RequestParser));\r\nmodule.exports = HttpDependencyParser;\r\n//# sourceMappingURL=HttpDependencyParser.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nexports.subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        var dbName = (event.data.startedData && event.data.startedData.databaseName) || \"Unknown database\";\r\n        client.trackDependency({\r\n            target: dbName,\r\n            data: event.data.event.commandName,\r\n            name: event.data.event.commandName,\r\n            duration: event.data.event.duration,\r\n            success: event.data.succeeded,\r\n            /* TODO: transmit result code from mongo */\r\n            resultCode: event.data.succeeded ? \"0\" : \"1\",\r\n            dependencyTypeName: 'mongodb'\r\n        });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"mongodb\", exports.subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"mongodb\", exports.subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=mongodb.sub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nexports.subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        var queryObj = event.data.query || {};\r\n        var sqlString = queryObj.sql || \"Unknown query\";\r\n        var success = !event.data.err;\r\n        var connection = queryObj._connection || {};\r\n        var connectionConfig = connection.config || {};\r\n        var dbName = connectionConfig.socketPath ? connectionConfig.socketPath : (connectionConfig.host || \"localhost\") + \":\" + connectionConfig.port;\r\n        client.trackDependency({\r\n            target: dbName,\r\n            data: sqlString,\r\n            name: sqlString,\r\n            duration: event.data.duration,\r\n            success: success,\r\n            /* TODO: transmit result code from mysql */\r\n            resultCode: success ? \"0\" : \"1\",\r\n            dependencyTypeName: \"mysql\"\r\n        });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"mysql\", exports.subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"mysql\", exports.subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=mysql.sub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nexports.subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        if (event.data.commandObj.command === \"info\") {\r\n            // We don't want to report 'info', it's irrelevant\r\n            return;\r\n        }\r\n        client.trackDependency({\r\n            target: event.data.address,\r\n            name: event.data.commandObj.command,\r\n            data: event.data.commandObj.command,\r\n            duration: event.data.duration,\r\n            success: !event.data.err,\r\n            /* TODO: transmit result code from redis */\r\n            resultCode: event.data.err ? \"1\" : \"0\",\r\n            dependencyTypeName: \"redis\"\r\n        });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"redis\", exports.subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"redis\", exports.subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=redis.sub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nexports.subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        var q = event.data.query;\r\n        var sql = (q.preparable && q.preparable.text) || q.plan || q.text || \"unknown query\";\r\n        var success = !event.data.error;\r\n        var conn = event.data.database.host + \":\" + event.data.database.port;\r\n        client.trackDependency({\r\n            target: conn,\r\n            data: sql,\r\n            name: sql,\r\n            duration: event.data.duration,\r\n            success: success,\r\n            resultCode: success ? \"0\" : \"1\",\r\n            dependencyTypeName: \"postgres\"\r\n        });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"postgres\", exports.subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"postgres\", exports.subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=postgres.sub.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar url = require(\"url\");\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\nvar Util = require(\"../Library/Util\");\r\nvar RequestResponseHeaders = require(\"../Library/RequestResponseHeaders\");\r\nvar RequestParser = require(\"./RequestParser\");\r\nvar CorrelationIdManager = require(\"../Library/CorrelationIdManager\");\r\n/**\r\n * Helper class to read data from the requst/response objects and convert them into the telemetry contract\r\n */\r\nvar HttpRequestParser = (function (_super) {\r\n    __extends(HttpRequestParser, _super);\r\n    function HttpRequestParser(request, requestId) {\r\n        var _this = _super.call(this) || this;\r\n        if (request) {\r\n            _this.method = request.method;\r\n            _this.url = _this._getAbsoluteUrl(request);\r\n            _this.startTime = +new Date();\r\n            _this.socketRemoteAddress = request.socket && request.socket.remoteAddress;\r\n            _this.parseHeaders(request, requestId);\r\n            if (request.connection) {\r\n                _this.connectionRemoteAddress = request.connection.remoteAddress;\r\n                _this.legacySocketRemoteAddress = request.connection[\"socket\"] && request.connection[\"socket\"].remoteAddress;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    HttpRequestParser.prototype.onError = function (error, ellapsedMilliseconds) {\r\n        this._setStatus(undefined, error);\r\n        // This parameter is only for overrides. setStatus handles this internally for the autocollected case\r\n        if (ellapsedMilliseconds) {\r\n            this.duration = ellapsedMilliseconds;\r\n        }\r\n    };\r\n    HttpRequestParser.prototype.onResponse = function (response, ellapsedMilliseconds) {\r\n        this._setStatus(response.statusCode, undefined);\r\n        // This parameter is only for overrides. setStatus handles this internally for the autocollected case\r\n        if (ellapsedMilliseconds) {\r\n            this.duration = ellapsedMilliseconds;\r\n        }\r\n    };\r\n    HttpRequestParser.prototype.getRequestTelemetry = function (baseTelemetry) {\r\n        var requestTelemetry = {\r\n            id: this.requestId,\r\n            name: this.method + \" \" + url.parse(this.url).pathname,\r\n            url: this.url,\r\n            /*\r\n            See https://github.com/Microsoft/ApplicationInsights-dotnet-server/blob/25d695e6a906fbe977f67be3966d25dbf1c50a79/Src/Web/Web.Shared.Net/RequestTrackingTelemetryModule.cs#L250\r\n            for reference\r\n            */\r\n            source: this.sourceCorrelationId,\r\n            duration: this.duration,\r\n            resultCode: this.statusCode ? this.statusCode.toString() : null,\r\n            success: this._isSuccess(),\r\n            properties: this.properties\r\n        };\r\n        // We should keep any parameters the user passed in\r\n        // Except the fields defined above in requestTelemetry, which take priority\r\n        // Except the properties field, where they're merged instead, with baseTelemetry taking priority\r\n        if (baseTelemetry) {\r\n            // Copy missing fields\r\n            for (var key in baseTelemetry) {\r\n                if (!requestTelemetry[key]) {\r\n                    requestTelemetry[key] = baseTelemetry[key];\r\n                }\r\n            }\r\n            // Merge properties\r\n            if (baseTelemetry.properties) {\r\n                for (var key in baseTelemetry.properties) {\r\n                    requestTelemetry.properties[key] = baseTelemetry.properties[key];\r\n                }\r\n            }\r\n        }\r\n        return requestTelemetry;\r\n    };\r\n    HttpRequestParser.prototype.getRequestTags = function (tags) {\r\n        // create a copy of the context for requests since client info will be used here\r\n        var newTags = {};\r\n        for (var key in tags) {\r\n            newTags[key] = tags[key];\r\n        }\r\n        // don't override tags if they are already set\r\n        newTags[HttpRequestParser.keys.locationIp] = tags[HttpRequestParser.keys.locationIp] || this._getIp();\r\n        newTags[HttpRequestParser.keys.sessionId] = tags[HttpRequestParser.keys.sessionId] || this._getId(\"ai_session\");\r\n        newTags[HttpRequestParser.keys.userId] = tags[HttpRequestParser.keys.userId] || this._getId(\"ai_user\");\r\n        newTags[HttpRequestParser.keys.userAuthUserId] = tags[HttpRequestParser.keys.userAuthUserId] || this._getId(\"ai_authUser\");\r\n        newTags[HttpRequestParser.keys.operationName] = this.getOperationName(tags);\r\n        newTags[HttpRequestParser.keys.operationParentId] = this.getOperationParentId(tags);\r\n        newTags[HttpRequestParser.keys.operationId] = this.getOperationId(tags);\r\n        return newTags;\r\n    };\r\n    HttpRequestParser.prototype.getOperationId = function (tags) {\r\n        return tags[HttpRequestParser.keys.operationId] || this.operationId;\r\n    };\r\n    HttpRequestParser.prototype.getOperationParentId = function (tags) {\r\n        return tags[HttpRequestParser.keys.operationParentId] || this.parentId || this.getOperationId(tags);\r\n    };\r\n    HttpRequestParser.prototype.getOperationName = function (tags) {\r\n        return tags[HttpRequestParser.keys.operationName] || this.method + \" \" + url.parse(this.url).pathname;\r\n    };\r\n    HttpRequestParser.prototype.getRequestId = function () {\r\n        return this.requestId;\r\n    };\r\n    HttpRequestParser.prototype.getCorrelationContextHeader = function () {\r\n        return this.correlationContextHeader;\r\n    };\r\n    HttpRequestParser.prototype._getAbsoluteUrl = function (request) {\r\n        if (!request.headers) {\r\n            return request.url;\r\n        }\r\n        var encrypted = request.connection ? request.connection.encrypted : null;\r\n        var requestUrl = url.parse(request.url);\r\n        var pathName = requestUrl.pathname;\r\n        var search = requestUrl.search;\r\n        var absoluteUrl = url.format({\r\n            protocol: encrypted ? \"https\" : \"http\",\r\n            host: request.headers.host,\r\n            pathname: pathName,\r\n            search: search\r\n        });\r\n        return absoluteUrl;\r\n    };\r\n    HttpRequestParser.prototype._getIp = function () {\r\n        // regex to match ipv4 without port\r\n        // Note: including the port would cause the payload to be rejected by the data collector\r\n        var ipMatch = /[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/;\r\n        var check = function (str) {\r\n            var results = ipMatch.exec(str);\r\n            if (results) {\r\n                return results[0];\r\n            }\r\n        };\r\n        var ip = check(this.rawHeaders[\"x-forwarded-for\"])\r\n            || check(this.rawHeaders[\"x-client-ip\"])\r\n            || check(this.rawHeaders[\"x-real-ip\"])\r\n            || check(this.connectionRemoteAddress)\r\n            || check(this.socketRemoteAddress)\r\n            || check(this.legacySocketRemoteAddress);\r\n        // node v12 returns this if the address is \"localhost\"\r\n        if (!ip\r\n            && this.connectionRemoteAddress\r\n            && this.connectionRemoteAddress.substr\r\n            && this.connectionRemoteAddress.substr(0, 2) === \"::\") {\r\n            ip = \"127.0.0.1\";\r\n        }\r\n        return ip;\r\n    };\r\n    HttpRequestParser.prototype._getId = function (name) {\r\n        var cookie = (this.rawHeaders && this.rawHeaders[\"cookie\"] &&\r\n            typeof this.rawHeaders[\"cookie\"] === 'string' && this.rawHeaders[\"cookie\"]) || \"\";\r\n        var value = HttpRequestParser.parseId(Util.getCookie(name, cookie));\r\n        return value;\r\n    };\r\n    HttpRequestParser.prototype.parseHeaders = function (request, requestId) {\r\n        this.rawHeaders = request.headers || request.rawHeaders;\r\n        this.userAgent = request.headers && request.headers[\"user-agent\"];\r\n        this.sourceCorrelationId = Util.getCorrelationContextTarget(request, RequestResponseHeaders.requestContextSourceKey);\r\n        if (request.headers) {\r\n            this.correlationContextHeader = request.headers[RequestResponseHeaders.correlationContextHeader];\r\n            if (request.headers[RequestResponseHeaders.requestIdHeader]) {\r\n                this.parentId = request.headers[RequestResponseHeaders.requestIdHeader];\r\n                this.requestId = CorrelationIdManager.generateRequestId(this.parentId);\r\n                this.correlationContextHeader = request.headers[RequestResponseHeaders.correlationContextHeader];\r\n            }\r\n            else {\r\n                // Legacy fallback\r\n                var rootId = request.headers[RequestResponseHeaders.rootIdHeader];\r\n                this.parentId = request.headers[RequestResponseHeaders.parentIdHeader];\r\n                this.requestId = CorrelationIdManager.generateRequestId(rootId || this.parentId);\r\n                this.correlationContextHeader = null;\r\n            }\r\n            if (requestId) {\r\n                // For the scenarios that don't guarantee an AI-created context,\r\n                // override the requestId with the provided one.\r\n                this.requestId = requestId;\r\n            }\r\n            this.operationId = CorrelationIdManager.getRootId(this.requestId);\r\n        }\r\n    };\r\n    HttpRequestParser.parseId = function (cookieValue) {\r\n        return cookieValue.substr(0, cookieValue.indexOf('|'));\r\n    };\r\n    HttpRequestParser.keys = new Contracts.ContextTagKeys();\r\n    return HttpRequestParser;\r\n}(RequestParser));\r\nmodule.exports = HttpRequestParser;\r\n//# sourceMappingURL=HttpRequestParser.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar TelemetryClient = require(\"./TelemetryClient\");\r\nvar ServerRequestTracking = require(\"../AutoCollection/HttpRequests\");\r\nvar ClientRequestTracking = require(\"../AutoCollection/HttpDependencies\");\r\nvar Logging = require(\"./Logging\");\r\n/**\r\n * Application Insights Telemetry Client for Node.JS. Provides the Application Insights TelemetryClient API\r\n * in addition to Node-specific helper functions.\r\n * Construct a new TelemetryClient to have an instance with a different configuration than the default client.\r\n * In most cases, `appInsights.defaultClient` should be used instead.\r\n */\r\nvar NodeClient = (function (_super) {\r\n    __extends(NodeClient, _super);\r\n    function NodeClient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Log RequestTelemetry from HTTP request and response. This method will log immediately without waitng for request completion\r\n     * and it requires duration parameter to be specified on NodeHttpRequestTelemetry object.\r\n     * Use trackNodeHttpRequest function to log the telemetry after request completion\r\n     * @param telemetry Object encapsulating incoming request, response and duration information\r\n     */\r\n    NodeClient.prototype.trackNodeHttpRequestSync = function (telemetry) {\r\n        if (telemetry && telemetry.request && telemetry.response && telemetry.duration) {\r\n            ServerRequestTracking.trackRequestSync(this, telemetry);\r\n        }\r\n        else {\r\n            Logging.warn(\"trackNodeHttpRequestSync requires NodeHttpRequestTelemetry object with request, response and duration specified.\");\r\n        }\r\n    };\r\n    /**\r\n     * Log RequestTelemetry from HTTP request and response. This method will `follow` the request to completion.\r\n     * Use trackNodeHttpRequestSync function to log telemetry immediately without waiting for request completion\r\n     * @param telemetry Object encapsulating incoming request and response information\r\n     */\r\n    NodeClient.prototype.trackNodeHttpRequest = function (telemetry) {\r\n        if (telemetry.duration || telemetry.error) {\r\n            Logging.warn(\"trackNodeHttpRequest will ignore supplied duration and error parameters. These values are collected from the request and response objects.\");\r\n        }\r\n        if (telemetry && telemetry.request && telemetry.response) {\r\n            ServerRequestTracking.trackRequest(this, telemetry);\r\n        }\r\n        else {\r\n            Logging.warn(\"trackNodeHttpRequest requires NodeHttpRequestTelemetry object with request and response specified.\");\r\n        }\r\n    };\r\n    /**\r\n     * Log DependencyTelemetry from outgoing HTTP request. This method will instrument the outgoing request and append\r\n     * the specified headers and will log the telemetry when outgoing request is complete\r\n     * @param telemetry Object encapsulating outgoing request information\r\n     */\r\n    NodeClient.prototype.trackNodeHttpDependency = function (telemetry) {\r\n        if (telemetry && telemetry.request) {\r\n            ClientRequestTracking.trackRequest(this, telemetry);\r\n        }\r\n        else {\r\n            Logging.warn(\"trackNodeHttpDependency requires NodeHttpDependencyTelemetry object with request specified.\");\r\n        }\r\n    };\r\n    return NodeClient;\r\n}(TelemetryClient));\r\nmodule.exports = NodeClient;\r\n//# sourceMappingURL=NodeClient.js.map","\"use strict\";\r\nvar url = require(\"url\");\r\nvar Config = require(\"./Config\");\r\nvar Context = require(\"./Context\");\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\nvar Channel = require(\"./Channel\");\r\nvar TelemetryProcessors = require(\"../TelemetryProcessors\");\r\nvar CorrelationContextManager_1 = require(\"../AutoCollection/CorrelationContextManager\");\r\nvar Sender = require(\"./Sender\");\r\nvar Util = require(\"./Util\");\r\nvar Logging = require(\"./Logging\");\r\nvar EnvelopeFactory = require(\"./EnvelopeFactory\");\r\n/**\r\n * Application Insights telemetry client provides interface to track telemetry items, register telemetry initializers and\r\n * and manually trigger immediate sending (flushing)\r\n */\r\nvar TelemetryClient = (function () {\r\n    /**\r\n     * Constructs a new client of the client\r\n     * @param iKey the instrumentation key to use (read from environment variable if not specified)\r\n     */\r\n    function TelemetryClient(iKey) {\r\n        this._telemetryProcessors = [];\r\n        var config = new Config(iKey);\r\n        this.config = config;\r\n        this.context = new Context();\r\n        this.commonProperties = {};\r\n        var sender = new Sender(this.config);\r\n        this.channel = new Channel(function () { return config.disableAppInsights; }, function () { return config.maxBatchSize; }, function () { return config.maxBatchIntervalMs; }, sender);\r\n    }\r\n    /**\r\n     * Log a trace message\r\n     * @param telemetry      Object encapsulating tracking options\r\n     */\r\n    TelemetryClient.prototype.trackTrace = function (telemetry) {\r\n        this.track(telemetry, Contracts.TelemetryType.Trace);\r\n    };\r\n    /**\r\n     * Log a numeric value that is not associated with a specific event. Typically used to send regular reports of performance indicators.\r\n     * To send a single measurement, use just the first two parameters. If you take measurements very frequently, you can reduce the\r\n     * telemetry bandwidth by aggregating multiple measurements and sending the resulting average at intervals.\r\n     * @param telemetry      Object encapsulating tracking options\r\n     */\r\n    TelemetryClient.prototype.trackMetric = function (telemetry) {\r\n        this.track(telemetry, Contracts.TelemetryType.Metric);\r\n    };\r\n    /**\r\n     * Log an exception\r\n     * @param telemetry      Object encapsulating tracking options\r\n     */\r\n    TelemetryClient.prototype.trackException = function (telemetry) {\r\n        if (telemetry && telemetry.exception && !Util.isError(telemetry.exception)) {\r\n            telemetry.exception = new Error(telemetry.exception.toString());\r\n        }\r\n        this.track(telemetry, Contracts.TelemetryType.Exception);\r\n    };\r\n    /**\r\n     * Log a user action or other occurrence.\r\n     * @param telemetry      Object encapsulating tracking options\r\n     */\r\n    TelemetryClient.prototype.trackEvent = function (telemetry) {\r\n        this.track(telemetry, Contracts.TelemetryType.Event);\r\n    };\r\n    /**\r\n     * Log a request. Note that the default client will attempt to collect HTTP requests automatically so only use this for requests\r\n     * that aren't automatically captured or if you've disabled automatic request collection.\r\n     *\r\n     * @param telemetry      Object encapsulating tracking options\r\n     */\r\n    TelemetryClient.prototype.trackRequest = function (telemetry) {\r\n        this.track(telemetry, Contracts.TelemetryType.Request);\r\n    };\r\n    /**\r\n     * Log a dependency. Note that the default client will attempt to collect dependencies automatically so only use this for dependencies\r\n     * that aren't automatically captured or if you've disabled automatic dependency collection.\r\n     *\r\n     * @param telemetry      Object encapsulating tracking option\r\n     * */\r\n    TelemetryClient.prototype.trackDependency = function (telemetry) {\r\n        if (telemetry && !telemetry.target && telemetry.data) {\r\n            // url.parse().host returns null for non-urls,\r\n            // making this essentially a no-op in those cases\r\n            // If this logic is moved, update jsdoc in DependencyTelemetry.target\r\n            telemetry.target = url.parse(telemetry.data).host;\r\n        }\r\n        this.track(telemetry, Contracts.TelemetryType.Dependency);\r\n    };\r\n    /**\r\n     * Immediately send all queued telemetry.\r\n     * @param options Flush options, including indicator whether app is crashing and callback\r\n     */\r\n    TelemetryClient.prototype.flush = function (options) {\r\n        this.channel.triggerSend(options ? !!options.isAppCrashing : false, options ? options.callback : undefined);\r\n    };\r\n    /**\r\n     * Generic track method for all telemetry types\r\n     * @param data the telemetry to send\r\n     * @param telemetryType specify the type of telemetry you are tracking from the list of Contracts.DataTypes\r\n     */\r\n    TelemetryClient.prototype.track = function (telemetry, telemetryType) {\r\n        if (telemetry && Contracts.telemetryTypeToBaseType(telemetryType)) {\r\n            var envelope = EnvelopeFactory.createEnvelope(telemetry, telemetryType, this.commonProperties, this.context, this.config);\r\n            // Set time on the envelope if it was set on the telemetry item\r\n            if (telemetry.time) {\r\n                envelope.time = telemetry.time.toISOString();\r\n            }\r\n            var accepted = this.runTelemetryProcessors(envelope, telemetry.contextObjects);\r\n            // Ideally we would have a central place for \"internal\" telemetry processors and users can configure which ones are in use.\r\n            // This will do for now. Otherwise clearTelemetryProcessors() would be problematic.\r\n            accepted = accepted && TelemetryProcessors.samplingTelemetryProcessor(envelope, { correlationContext: CorrelationContextManager_1.CorrelationContextManager.getCurrentContext() });\r\n            if (accepted) {\r\n                this.channel.send(envelope);\r\n            }\r\n        }\r\n        else {\r\n            Logging.warn(\"track() requires telemetry object and telemetryType to be specified.\");\r\n        }\r\n    };\r\n    /**\r\n     * Adds telemetry processor to the collection. Telemetry processors will be called one by one\r\n     * before telemetry item is pushed for sending and in the order they were added.\r\n     *\r\n     * @param telemetryProcessor function, takes Envelope, and optional context object and returns boolean\r\n     */\r\n    TelemetryClient.prototype.addTelemetryProcessor = function (telemetryProcessor) {\r\n        this._telemetryProcessors.push(telemetryProcessor);\r\n    };\r\n    /*\r\n     * Removes all telemetry processors\r\n     */\r\n    TelemetryClient.prototype.clearTelemetryProcessors = function () {\r\n        this._telemetryProcessors = [];\r\n    };\r\n    TelemetryClient.prototype.runTelemetryProcessors = function (envelope, contextObjects) {\r\n        var accepted = true;\r\n        var telemetryProcessorsCount = this._telemetryProcessors.length;\r\n        if (telemetryProcessorsCount === 0) {\r\n            return accepted;\r\n        }\r\n        contextObjects = contextObjects || {};\r\n        contextObjects['correlationContext'] = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\r\n        for (var i = 0; i < telemetryProcessorsCount; ++i) {\r\n            try {\r\n                var processor = this._telemetryProcessors[i];\r\n                if (processor) {\r\n                    if (processor.apply(null, [envelope, contextObjects]) === false) {\r\n                        accepted = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            catch (error) {\r\n                accepted = true;\r\n                Logging.warn(\"One of telemetry processors failed, telemetry item will be sent.\", error, envelope);\r\n            }\r\n        }\r\n        return accepted;\r\n    };\r\n    return TelemetryClient;\r\n}());\r\nmodule.exports = TelemetryClient;\r\n//# sourceMappingURL=TelemetryClient.js.map","\"use strict\";\r\nvar CorrelationIdManager = require(\"./CorrelationIdManager\");\r\nvar Config = (function () {\r\n    function Config(instrumentationKey) {\r\n        var _this = this;\r\n        this.endpointBase = \"https://dc.services.visualstudio.com\";\r\n        this.instrumentationKey = instrumentationKey || Config._getInstrumentationKey();\r\n        this.endpointUrl = this.endpointBase + \"/v2/track\";\r\n        this.maxBatchSize = 250;\r\n        this.maxBatchIntervalMs = 15000;\r\n        this.disableAppInsights = false;\r\n        this.samplingPercentage = 100;\r\n        this.correlationIdRetryIntervalMs = 30 * 1000;\r\n        this.correlationHeaderExcludedDomains = [\r\n            \"*.core.windows.net\",\r\n            \"*.core.chinacloudapi.cn\",\r\n            \"*.core.cloudapi.de\",\r\n            \"*.core.usgovcloudapi.net\"\r\n        ];\r\n        this.setCorrelationId = function (correlationId) { return _this.correlationId = correlationId; };\r\n        this.profileQueryEndpoint = process.env[Config.ENV_profileQueryEndpoint] || this.endpointBase;\r\n        this.proxyHttpUrl = process.env[Config.ENV_http_proxy] || undefined;\r\n        this.proxyHttpsUrl = process.env[Config.ENV_https_proxy] || undefined;\r\n        this.httpAgent = undefined;\r\n        this.httpsAgent = undefined;\r\n    }\r\n    Object.defineProperty(Config.prototype, \"profileQueryEndpoint\", {\r\n        get: function () {\r\n            return this._profileQueryEndpoint;\r\n        },\r\n        set: function (endpoint) {\r\n            CorrelationIdManager.cancelCorrelationIdQuery(this, this.setCorrelationId);\r\n            this._profileQueryEndpoint = endpoint;\r\n            this.correlationId = CorrelationIdManager.correlationIdPrefix; // Reset the correlationId while we wait for the new query\r\n            CorrelationIdManager.queryCorrelationId(this, this.setCorrelationId);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Config._getInstrumentationKey = function () {\r\n        // check for both the documented env variable and the azure-prefixed variable\r\n        var iKey = process.env[Config.ENV_iKey]\r\n            || process.env[Config.ENV_azurePrefix + Config.ENV_iKey]\r\n            || process.env[Config.legacy_ENV_iKey]\r\n            || process.env[Config.ENV_azurePrefix + Config.legacy_ENV_iKey];\r\n        if (!iKey || iKey == \"\") {\r\n            throw new Error(\"Instrumentation key not found, pass the key in the config to this method or set the key in the environment variable APPINSIGHTS_INSTRUMENTATIONKEY before starting the server\");\r\n        }\r\n        return iKey;\r\n    };\r\n    // Azure adds this prefix to all environment variables\r\n    Config.ENV_azurePrefix = \"APPSETTING_\";\r\n    // This key is provided in the readme\r\n    Config.ENV_iKey = \"APPINSIGHTS_INSTRUMENTATIONKEY\";\r\n    Config.legacy_ENV_iKey = \"APPINSIGHTS_INSTRUMENTATION_KEY\";\r\n    Config.ENV_profileQueryEndpoint = \"APPINSIGHTS_PROFILE_QUERY_ENDPOINT\";\r\n    Config.ENV_http_proxy = \"http_proxy\";\r\n    Config.ENV_https_proxy = \"https_proxy\";\r\n    return Config;\r\n}());\r\nmodule.exports = Config;\r\n//# sourceMappingURL=Config.js.map","\"use strict\";\r\nvar os = require(\"os\");\r\nvar fs = require(\"fs\");\r\nvar path = require(\"path\");\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\nvar Logging = require(\"./Logging\");\r\nvar Context = (function () {\r\n    function Context(packageJsonPath) {\r\n        this.keys = new Contracts.ContextTagKeys();\r\n        this.tags = {};\r\n        this._loadApplicationContext();\r\n        this._loadDeviceContext();\r\n        this._loadInternalContext();\r\n    }\r\n    Context.prototype._loadApplicationContext = function (packageJsonPath) {\r\n        // note: this should return the host package.json\r\n        packageJsonPath = packageJsonPath || path.resolve(__dirname, \"../../../../package.json\");\r\n        if (!Context.appVersion[packageJsonPath]) {\r\n            Context.appVersion[packageJsonPath] = \"unknown\";\r\n            try {\r\n                var packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n                if (packageJson && typeof packageJson.version === \"string\") {\r\n                    Context.appVersion[packageJsonPath] = packageJson.version;\r\n                }\r\n            }\r\n            catch (exception) {\r\n                Logging.info(\"unable to read app version: \", exception);\r\n            }\r\n        }\r\n        this.tags[this.keys.applicationVersion] = Context.appVersion[packageJsonPath];\r\n    };\r\n    Context.prototype._loadDeviceContext = function () {\r\n        this.tags[this.keys.deviceId] = \"\";\r\n        this.tags[this.keys.cloudRoleInstance] = os && os.hostname();\r\n        this.tags[this.keys.deviceOSVersion] = os && (os.type() + \" \" + os.release());\r\n        this.tags[this.keys.cloudRole] = Context.DefaultRoleName;\r\n        // not yet supported tags\r\n        this.tags[\"ai.device.osArchitecture\"] = os && os.arch();\r\n        this.tags[\"ai.device.osPlatform\"] = os && os.platform();\r\n    };\r\n    Context.prototype._loadInternalContext = function () {\r\n        // note: this should return the sdk package.json\r\n        var packageJsonPath = path.resolve(__dirname, \"../../package.json\");\r\n        if (!Context.sdkVersion) {\r\n            Context.sdkVersion = \"unknown\";\r\n            try {\r\n                var packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n                if (packageJson && typeof packageJson.version === \"string\") {\r\n                    Context.sdkVersion = packageJson.version;\r\n                }\r\n            }\r\n            catch (exception) {\r\n                Logging.info(\"unable to read app version: \", exception);\r\n            }\r\n        }\r\n        this.tags[this.keys.internalSdkVersion] = \"node:\" + Context.sdkVersion;\r\n    };\r\n    Context.DefaultRoleName = \"Web\";\r\n    Context.appVersion = {};\r\n    Context.sdkVersion = null;\r\n    return Context;\r\n}());\r\nmodule.exports = Context;\r\n//# sourceMappingURL=Context.js.map","\"use strict\";\r\nvar Logging = require(\"./Logging\");\r\nvar Channel = (function () {\r\n    function Channel(isDisabled, getBatchSize, getBatchIntervalMs, sender) {\r\n        this._buffer = [];\r\n        this._lastSend = 0;\r\n        this._isDisabled = isDisabled;\r\n        this._getBatchSize = getBatchSize;\r\n        this._getBatchIntervalMs = getBatchIntervalMs;\r\n        this._sender = sender;\r\n    }\r\n    /**\r\n     * Enable or disable disk-backed retry caching to cache events when client is offline (enabled by default)\r\n     * These cached events are stored in your system or user's temporary directory and access restricted to your user when possible.\r\n     * @param value if true events that occured while client is offline will be cached on disk\r\n     * @param resendInterval The wait interval for resending cached events.\r\n     * @param maxBytesOnDisk The maximum size (in bytes) that the created temporary directory for cache events can grow to, before caching is disabled.\r\n     * @returns {Configuration} this class\r\n     */\r\n    Channel.prototype.setUseDiskRetryCaching = function (value, resendInterval, maxBytesOnDisk) {\r\n        this._sender.setDiskRetryMode(value, resendInterval, maxBytesOnDisk);\r\n    };\r\n    /**\r\n     * Add a telemetry item to the send buffer\r\n     */\r\n    Channel.prototype.send = function (envelope) {\r\n        var _this = this;\r\n        // if master off switch is set, don't send any data\r\n        if (this._isDisabled()) {\r\n            // Do not send/save data\r\n            return;\r\n        }\r\n        // validate input\r\n        if (!envelope) {\r\n            Logging.warn(\"Cannot send null/undefined telemetry\");\r\n            return;\r\n        }\r\n        // check if the incoming payload is too large, truncate if necessary\r\n        var payload = this._stringify(envelope);\r\n        if (typeof payload !== \"string\") {\r\n            return;\r\n        }\r\n        // enqueue the payload\r\n        this._buffer.push(payload);\r\n        // flush if we would exceed the max-size limit by adding this item\r\n        if (this._buffer.length >= this._getBatchSize()) {\r\n            this.triggerSend(false);\r\n            return;\r\n        }\r\n        // ensure an invocation timeout is set if anything is in the buffer\r\n        if (!this._timeoutHandle && this._buffer.length > 0) {\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this._timeoutHandle = null;\r\n                _this.triggerSend(false);\r\n            }, this._getBatchIntervalMs());\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     */\r\n    Channel.prototype.triggerSend = function (isNodeCrashing, callback) {\r\n        var bufferIsEmpty = this._buffer.length < 1;\r\n        if (!bufferIsEmpty) {\r\n            // compose an array of payloads\r\n            var batch = this._buffer.join(\"\\n\");\r\n            // invoke send\r\n            if (isNodeCrashing) {\r\n                this._sender.saveOnCrash(batch);\r\n                if (typeof callback === \"function\") {\r\n                    callback(\"data saved on crash\");\r\n                }\r\n            }\r\n            else {\r\n                this._sender.send(Buffer.from ? Buffer.from(batch) : new Buffer(batch), callback);\r\n            }\r\n        }\r\n        // update lastSend time to enable throttling\r\n        this._lastSend = +new Date;\r\n        // clear buffer\r\n        this._buffer.length = 0;\r\n        clearTimeout(this._timeoutHandle);\r\n        this._timeoutHandle = null;\r\n        if (bufferIsEmpty && typeof callback === \"function\") {\r\n            callback(\"no data to send\");\r\n        }\r\n    };\r\n    Channel.prototype._stringify = function (envelope) {\r\n        try {\r\n            return JSON.stringify(envelope);\r\n        }\r\n        catch (error) {\r\n            Logging.warn(\"Failed to serialize payload\", error, envelope);\r\n        }\r\n    };\r\n    return Channel;\r\n}());\r\nmodule.exports = Channel;\r\n//# sourceMappingURL=Channel.js.map","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./SamplingTelemetryProcessor\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\n/**\r\n *  A telemetry processor that handles sampling.\r\n */\r\nfunction samplingTelemetryProcessor(envelope, contextObjects) {\r\n    var samplingPercentage = envelope.sampleRate; // Set for us in Client.getEnvelope\r\n    var isSampledIn = false;\r\n    if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n        return true;\r\n    }\r\n    else if (envelope.data && Contracts.TelemetryType.Metric === Contracts.baseTypeToTelemetryType(envelope.data.baseType)) {\r\n        // Exclude MetricData telemetry from sampling\r\n        return true;\r\n    }\r\n    else if (contextObjects.correlationContext && contextObjects.correlationContext.operation) {\r\n        // If we're using dependency correlation, sampling should retain all telemetry from a given request \r\n        isSampledIn = getSamplingHashCode(contextObjects.correlationContext.operation.id) < samplingPercentage;\r\n    }\r\n    else {\r\n        // If we're not using dependency correlation, sampling should use a random distribution on each item\r\n        isSampledIn = (Math.random() * 100) < samplingPercentage;\r\n    }\r\n    return isSampledIn;\r\n}\r\nexports.samplingTelemetryProcessor = samplingTelemetryProcessor;\r\n/** Ported from AI .NET SDK */\r\nfunction getSamplingHashCode(input) {\r\n    var csharpMin = -2147483648;\r\n    var csharpMax = 2147483647;\r\n    var hash = 5381;\r\n    if (!input) {\r\n        return 0;\r\n    }\r\n    while (input.length < 8) {\r\n        input = input + input;\r\n    }\r\n    for (var i = 0; i < input.length; i++) {\r\n        // JS doesn't respond to integer overflow by wrapping around. Simulate it with bitwise operators ( | 0)\r\n        hash = ((((hash << 5) + hash) | 0) + input.charCodeAt(i) | 0);\r\n    }\r\n    hash = hash <= csharpMin ? csharpMax : Math.abs(hash);\r\n    return (hash / csharpMax) * 100;\r\n}\r\nexports.getSamplingHashCode = getSamplingHashCode;\r\n//# sourceMappingURL=SamplingTelemetryProcessor.js.map","\"use strict\";\r\nvar fs = require(\"fs\");\r\nvar os = require(\"os\");\r\nvar path = require(\"path\");\r\nvar zlib = require(\"zlib\");\r\nvar child_process = require(\"child_process\");\r\nvar Logging = require(\"./Logging\");\r\nvar AutoCollectHttpDependencies = require(\"../AutoCollection/HttpDependencies\");\r\nvar Util = require(\"./Util\");\r\nvar Sender = (function () {\r\n    function Sender(config, onSuccess, onError) {\r\n        this._config = config;\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n        this._enableDiskRetryMode = false;\r\n        this._resendInterval = Sender.WAIT_BETWEEN_RESEND;\r\n        this._maxBytesOnDisk = Sender.MAX_BYTES_ON_DISK;\r\n        this._numConsecutiveFailures = 0;\r\n        if (!Sender.OS_PROVIDES_FILE_PROTECTION) {\r\n            // Node's chmod levels do not appropriately restrict file access on Windows\r\n            // Use the built-in command line tool ICACLS on Windows to properly restrict\r\n            // access to the temporary directory used for disk retry mode.\r\n            if (Sender.USE_ICACLS) {\r\n                // This should be async - but it's currently safer to have this synchronous\r\n                // This guarantees we can immediately fail setDiskRetryMode if we need to\r\n                try {\r\n                    Sender.OS_PROVIDES_FILE_PROTECTION = fs.existsSync(Sender.ICACLS_PATH);\r\n                }\r\n                catch (e) { }\r\n                if (!Sender.OS_PROVIDES_FILE_PROTECTION) {\r\n                    Logging.warn(Sender.TAG, \"Could not find ICACLS in expected location! This is necessary to use disk retry mode on Windows.\");\r\n                }\r\n            }\r\n            else {\r\n                // chmod works everywhere else\r\n                Sender.OS_PROVIDES_FILE_PROTECTION = true;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * Enable or disable offline mode\r\n    */\r\n    Sender.prototype.setDiskRetryMode = function (value, resendInterval, maxBytesOnDisk) {\r\n        this._enableDiskRetryMode = Sender.OS_PROVIDES_FILE_PROTECTION && value;\r\n        if (typeof resendInterval === 'number' && resendInterval >= 0) {\r\n            this._resendInterval = Math.floor(resendInterval);\r\n        }\r\n        if (typeof maxBytesOnDisk === 'number' && maxBytesOnDisk >= 0) {\r\n            this._maxBytesOnDisk = Math.floor(maxBytesOnDisk);\r\n        }\r\n        if (value && !Sender.OS_PROVIDES_FILE_PROTECTION) {\r\n            this._enableDiskRetryMode = false;\r\n            Logging.warn(Sender.TAG, \"Ignoring request to enable disk retry mode. Sufficient file protection capabilities were not detected.\");\r\n        }\r\n    };\r\n    Sender.prototype.send = function (payload, callback) {\r\n        var _this = this;\r\n        var endpointUrl = this._config.endpointUrl;\r\n        // todo: investigate specifying an agent here: https://nodejs.org/api/http.html#http_class_http_agent\r\n        var options = {\r\n            method: \"POST\",\r\n            withCredentials: false,\r\n            headers: {\r\n                \"Content-Type\": \"application/x-json-stream\"\r\n            }\r\n        };\r\n        zlib.gzip(payload, function (err, buffer) {\r\n            var dataToSend = buffer;\r\n            if (err) {\r\n                Logging.warn(err);\r\n                dataToSend = payload; // something went wrong so send without gzip\r\n                options.headers[\"Content-Length\"] = payload.length.toString();\r\n            }\r\n            else {\r\n                options.headers[\"Content-Encoding\"] = \"gzip\";\r\n                options.headers[\"Content-Length\"] = buffer.length;\r\n            }\r\n            Logging.info(Sender.TAG, options);\r\n            // Ensure this request is not captured by auto-collection.\r\n            options[AutoCollectHttpDependencies.disableCollectionRequestOption] = true;\r\n            var requestCallback = function (res) {\r\n                res.setEncoding(\"utf-8\");\r\n                //returns empty if the data is accepted\r\n                var responseString = \"\";\r\n                res.on(\"data\", function (data) {\r\n                    responseString += data;\r\n                });\r\n                res.on(\"end\", function () {\r\n                    _this._numConsecutiveFailures = 0;\r\n                    Logging.info(Sender.TAG, responseString);\r\n                    if (typeof _this._onSuccess === \"function\") {\r\n                        _this._onSuccess(responseString);\r\n                    }\r\n                    if (typeof callback === \"function\") {\r\n                        callback(responseString);\r\n                    }\r\n                    if (_this._enableDiskRetryMode) {\r\n                        // try to send any cached events if the user is back online\r\n                        if (res.statusCode === 200) {\r\n                            setTimeout(function () { return _this._sendFirstFileOnDisk(); }, _this._resendInterval);\r\n                            // store to disk in case of burst throttling\r\n                        }\r\n                        else if (res.statusCode === 408 ||\r\n                            res.statusCode === 429 ||\r\n                            res.statusCode === 439 ||\r\n                            res.statusCode === 500 ||\r\n                            res.statusCode === 503) {\r\n                            // TODO: Do not support partial success (206) until _sendFirstFileOnDisk checks payload age\r\n                            _this._storeToDisk(payload);\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            var req = Util.makeRequest(_this._config, endpointUrl, options, requestCallback);\r\n            req.on(\"error\", function (error) {\r\n                // todo: handle error codes better (group to recoverable/non-recoverable and persist)\r\n                _this._numConsecutiveFailures++;\r\n                // Only use warn level if retries are disabled or we've had some number of consecutive failures sending data\r\n                // This is because warn level is printed in the console by default, and we don't want to be noisy for transient and self-recovering errors\r\n                // Continue informing on each failure if verbose logging is being used\r\n                if (!_this._enableDiskRetryMode || _this._numConsecutiveFailures > 0 && _this._numConsecutiveFailures % Sender.MAX_CONNECTION_FAILURES_BEFORE_WARN === 0) {\r\n                    var notice = \"Ingestion endpoint could not be reached. This batch of telemetry items has been lost. Use Disk Retry Caching to enable resending of failed telemetry. Error:\";\r\n                    if (_this._enableDiskRetryMode) {\r\n                        notice = \"Ingestion endpoint could not be reached \" + _this._numConsecutiveFailures + \" consecutive times. There may be resulting telemetry loss. Most recent error:\";\r\n                    }\r\n                    Logging.warn(Sender.TAG, notice, error);\r\n                }\r\n                else {\r\n                    var notice = \"Transient failure to reach ingestion endpoint. This batch of telemetry items will be retried. Error:\";\r\n                    Logging.info(Sender.TAG, notice, error);\r\n                }\r\n                _this._onErrorHelper(error);\r\n                if (typeof callback === \"function\") {\r\n                    var errorMessage = \"error sending telemetry\";\r\n                    if (error && (typeof error.toString === \"function\")) {\r\n                        errorMessage = error.toString();\r\n                    }\r\n                    callback(errorMessage);\r\n                }\r\n                if (_this._enableDiskRetryMode) {\r\n                    _this._storeToDisk(payload);\r\n                }\r\n            });\r\n            req.write(dataToSend);\r\n            req.end();\r\n        });\r\n    };\r\n    Sender.prototype.saveOnCrash = function (payload) {\r\n        if (this._enableDiskRetryMode) {\r\n            this._storeToDiskSync(payload);\r\n        }\r\n    };\r\n    Sender.prototype._runICACLS = function (args, callback) {\r\n        var aclProc = child_process.spawn(Sender.ICACLS_PATH, args, { windowsHide: true });\r\n        aclProc.on(\"error\", function (e) { return callback(e); });\r\n        aclProc.on(\"close\", function (code, signal) {\r\n            return callback(code === 0 ? null : new Error(\"Setting ACL restrictions did not succeed (ICACLS returned code \" + code + \")\"));\r\n        });\r\n    };\r\n    Sender.prototype._runICACLSSync = function (args) {\r\n        // Some very old versions of Node (< 0.11) don't have this\r\n        if (child_process.spawnSync) {\r\n            var aclProc = child_process.spawnSync(Sender.ICACLS_PATH, args, { windowsHide: true });\r\n            if (aclProc.error) {\r\n                throw aclProc.error;\r\n            }\r\n            else if (aclProc.status !== 0) {\r\n                throw new Error(\"Setting ACL restrictions did not succeed (ICACLS returned code \" + aclProc.status + \")\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Could not synchronously call ICACLS under current version of Node.js\");\r\n        }\r\n    };\r\n    Sender.prototype._getACLIdentity = function (callback) {\r\n        if (Sender.ACL_IDENTITY) {\r\n            return callback(null, Sender.ACL_IDENTITY);\r\n        }\r\n        var psProc = child_process.spawn(Sender.POWERSHELL_PATH, [\"-Command\", \"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\"], {\r\n            windowsHide: true,\r\n            stdio: ['ignore', 'pipe', 'pipe'] // Needed to prevent hanging on Win 7\r\n        });\r\n        var data = \"\";\r\n        psProc.stdout.on(\"data\", function (d) { return data += d; });\r\n        psProc.on(\"error\", function (e) { return callback(e, null); });\r\n        psProc.on(\"close\", function (code, signal) {\r\n            Sender.ACL_IDENTITY = data && data.trim();\r\n            return callback(code === 0 ? null : new Error(\"Getting ACL identity did not succeed (PS returned code \" + code + \")\"), Sender.ACL_IDENTITY);\r\n        });\r\n    };\r\n    Sender.prototype._getACLIdentitySync = function () {\r\n        if (Sender.ACL_IDENTITY) {\r\n            return Sender.ACL_IDENTITY;\r\n        }\r\n        // Some very old versions of Node (< 0.11) don't have this\r\n        if (child_process.spawnSync) {\r\n            var psProc = child_process.spawnSync(Sender.POWERSHELL_PATH, [\"-Command\", \"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\"], {\r\n                windowsHide: true,\r\n                stdio: ['ignore', 'pipe', 'pipe'] // Needed to prevent hanging on Win 7\r\n            });\r\n            if (psProc.error) {\r\n                throw psProc.error;\r\n            }\r\n            else if (psProc.status !== 0) {\r\n                throw new Error(\"Getting ACL identity did not succeed (PS returned code \" + psProc.status + \")\");\r\n            }\r\n            Sender.ACL_IDENTITY = psProc.stdout && psProc.stdout.toString().trim();\r\n            return Sender.ACL_IDENTITY;\r\n        }\r\n        else {\r\n            throw new Error(\"Could not synchronously get ACL identity under current version of Node.js\");\r\n        }\r\n    };\r\n    Sender.prototype._getACLArguments = function (directory, identity) {\r\n        return [directory,\r\n            \"/grant\", \"*S-1-5-32-544:(OI)(CI)F\",\r\n            \"/grant\", identity + \":(OI)(CI)F\",\r\n            \"/inheritance:r\"]; // Remove all inherited permissions\r\n    };\r\n    Sender.prototype._applyACLRules = function (directory, callback) {\r\n        var _this = this;\r\n        if (!Sender.USE_ICACLS) {\r\n            return callback(null);\r\n        }\r\n        // For performance, only run ACL rules if we haven't already during this session\r\n        if (Sender.ACLED_DIRECTORIES[directory] === undefined) {\r\n            // Avoid multiple calls race condition by setting ACLED_DIRECTORIES to false for this directory immediately\r\n            // If batches are being failed faster than the processes spawned below return, some data won't be stored to disk\r\n            // This is better than the alternative of potentially infinitely spawned processes\r\n            Sender.ACLED_DIRECTORIES[directory] = false;\r\n            // Restrict this directory to only current user and administrator access\r\n            this._getACLIdentity(function (err, identity) {\r\n                if (err) {\r\n                    Sender.ACLED_DIRECTORIES[directory] = false; // false is used to cache failed (vs undefined which is \"not yet tried\")\r\n                    return callback(err);\r\n                }\r\n                else {\r\n                    _this._runICACLS(_this._getACLArguments(directory, identity), function (err) {\r\n                        Sender.ACLED_DIRECTORIES[directory] = !err;\r\n                        return callback(err);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            return callback(Sender.ACLED_DIRECTORIES[directory] ? null :\r\n                new Error(\"Setting ACL restrictions did not succeed (cached result)\"));\r\n        }\r\n    };\r\n    Sender.prototype._applyACLRulesSync = function (directory) {\r\n        if (Sender.USE_ICACLS) {\r\n            // For performance, only run ACL rules if we haven't already during this session\r\n            if (Sender.ACLED_DIRECTORIES[directory] === undefined) {\r\n                this._runICACLSSync(this._getACLArguments(directory, this._getACLIdentitySync()));\r\n                Sender.ACLED_DIRECTORIES[directory] = true; // If we get here, it succeeded. _runIACLSSync will throw on failures\r\n                return;\r\n            }\r\n            else if (!Sender.ACLED_DIRECTORIES[directory]) {\r\n                throw new Error(\"Setting ACL restrictions did not succeed (cached result)\");\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype._confirmDirExists = function (directory, callback) {\r\n        var _this = this;\r\n        fs.lstat(directory, function (err, stats) {\r\n            if (err && err.code === 'ENOENT') {\r\n                fs.mkdir(directory, function (err) {\r\n                    if (err && err.code !== 'EEXIST') {\r\n                        callback(err);\r\n                    }\r\n                    else {\r\n                        _this._applyACLRules(directory, callback);\r\n                    }\r\n                });\r\n            }\r\n            else if (!err && stats.isDirectory()) {\r\n                _this._applyACLRules(directory, callback);\r\n            }\r\n            else {\r\n                callback(err || new Error(\"Path existed but was not a directory\"));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Computes the size (in bytes) of all files in a directory at the root level. Asynchronously.\r\n     */\r\n    Sender.prototype._getShallowDirectorySize = function (directory, callback) {\r\n        // Get the directory listing\r\n        fs.readdir(directory, function (err, files) {\r\n            if (err) {\r\n                return callback(err, -1);\r\n            }\r\n            var error = null;\r\n            var totalSize = 0;\r\n            var count = 0;\r\n            if (files.length === 0) {\r\n                callback(null, 0);\r\n                return;\r\n            }\r\n            // Query all file sizes\r\n            for (var i = 0; i < files.length; i++) {\r\n                fs.stat(path.join(directory, files[i]), function (err, fileStats) {\r\n                    count++;\r\n                    if (err) {\r\n                        error = err;\r\n                    }\r\n                    else {\r\n                        if (fileStats.isFile()) {\r\n                            totalSize += fileStats.size;\r\n                        }\r\n                    }\r\n                    if (count === files.length) {\r\n                        // Did we get an error?\r\n                        if (error) {\r\n                            callback(error, -1);\r\n                        }\r\n                        else {\r\n                            callback(error, totalSize);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Computes the size (in bytes) of all files in a directory at the root level. Synchronously.\r\n     */\r\n    Sender.prototype._getShallowDirectorySizeSync = function (directory) {\r\n        var files = fs.readdirSync(directory);\r\n        var totalSize = 0;\r\n        for (var i = 0; i < files.length; i++) {\r\n            totalSize += fs.statSync(path.join(directory, files[i])).size;\r\n        }\r\n        return totalSize;\r\n    };\r\n    /**\r\n     * Stores the payload as a json file on disk in the temp directory\r\n     */\r\n    Sender.prototype._storeToDisk = function (payload) {\r\n        var _this = this;\r\n        // tmpdir is /tmp for *nix and USERDIR/AppData/Local/Temp for Windows\r\n        var directory = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\r\n        // This will create the dir if it does not exist\r\n        // Default permissions on *nix are directory listing from other users but no file creations\r\n        Logging.info(Sender.TAG, \"Checking existance of data storage directory: \" + directory);\r\n        this._confirmDirExists(directory, function (error) {\r\n            if (error) {\r\n                Logging.warn(Sender.TAG, \"Error while checking/creating directory: \" + (error && error.message));\r\n                _this._onErrorHelper(error);\r\n                return;\r\n            }\r\n            _this._getShallowDirectorySize(directory, function (err, size) {\r\n                if (err || size < 0) {\r\n                    Logging.warn(Sender.TAG, \"Error while checking directory size: \" + (err && err.message));\r\n                    _this._onErrorHelper(err);\r\n                    return;\r\n                }\r\n                else if (size > _this._maxBytesOnDisk) {\r\n                    Logging.warn(Sender.TAG, \"Not saving data due to max size limit being met. Directory size in bytes is: \" + size);\r\n                    return;\r\n                }\r\n                //create file - file name for now is the timestamp, a better approach would be a UUID but that\r\n                //would require an external dependency\r\n                var fileName = new Date().getTime() + \".ai.json\";\r\n                var fileFullPath = path.join(directory, fileName);\r\n                // Mode 600 is w/r for creator and no read access for others (only applies on *nix)\r\n                // For Windows, ACL rules are applied to the entire directory (see logic in _confirmDirExists and _applyACLRules)\r\n                Logging.info(Sender.TAG, \"saving data to disk at: \" + fileFullPath);\r\n                fs.writeFile(fileFullPath, payload, { mode: 384 }, function (error) { return _this._onErrorHelper(error); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stores the payload as a json file on disk using sync file operations\r\n     * this is used when storing data before crashes\r\n     */\r\n    Sender.prototype._storeToDiskSync = function (payload) {\r\n        // tmpdir is /tmp for *nix and USERDIR/AppData/Local/Temp for Windows\r\n        var directory = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\r\n        try {\r\n            Logging.info(Sender.TAG, \"Checking existance of data storage directory: \" + directory);\r\n            if (!fs.existsSync(directory)) {\r\n                fs.mkdirSync(directory);\r\n            }\r\n            // Make sure permissions are valid\r\n            this._applyACLRulesSync(directory);\r\n            var dirSize = this._getShallowDirectorySizeSync(directory);\r\n            if (dirSize > this._maxBytesOnDisk) {\r\n                Logging.info(Sender.TAG, \"Not saving data due to max size limit being met. Directory size in bytes is: \" + dirSize);\r\n                return;\r\n            }\r\n            //create file - file name for now is the timestamp, a better approach would be a UUID but that\r\n            //would require an external dependency\r\n            var fileName = new Date().getTime() + \".ai.json\";\r\n            var fileFullPath = path.join(directory, fileName);\r\n            // Mode 600 is w/r for creator and no access for anyone else (only applies on *nix)\r\n            Logging.info(Sender.TAG, \"saving data before crash to disk at: \" + fileFullPath);\r\n            fs.writeFileSync(fileFullPath, payload, { mode: 384 });\r\n        }\r\n        catch (error) {\r\n            Logging.warn(Sender.TAG, \"Error while saving data to disk: \" + (error && error.message));\r\n            this._onErrorHelper(error);\r\n        }\r\n    };\r\n    /**\r\n     * Check for temp telemetry files\r\n     * reads the first file if exist, deletes it and tries to send its load\r\n     */\r\n    Sender.prototype._sendFirstFileOnDisk = function () {\r\n        var _this = this;\r\n        var tempDir = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\r\n        fs.exists(tempDir, function (exists) {\r\n            if (exists) {\r\n                fs.readdir(tempDir, function (error, files) {\r\n                    if (!error) {\r\n                        files = files.filter(function (f) { return path.basename(f).indexOf(\".ai.json\") > -1; });\r\n                        if (files.length > 0) {\r\n                            var firstFile = files[0];\r\n                            var filePath = path.join(tempDir, firstFile);\r\n                            fs.readFile(filePath, function (error, payload) {\r\n                                if (!error) {\r\n                                    // delete the file first to prevent double sending\r\n                                    fs.unlink(filePath, function (error) {\r\n                                        if (!error) {\r\n                                            _this.send(payload);\r\n                                        }\r\n                                        else {\r\n                                            _this._onErrorHelper(error);\r\n                                        }\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    _this._onErrorHelper(error);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        _this._onErrorHelper(error);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n    Sender.prototype._onErrorHelper = function (error) {\r\n        if (typeof this._onError === \"function\") {\r\n            this._onError(error);\r\n        }\r\n    };\r\n    Sender.TAG = \"Sender\";\r\n    Sender.ICACLS_PATH = process.env.systemdrive + \"/windows/system32/icacls.exe\";\r\n    Sender.POWERSHELL_PATH = process.env.systemdrive + \"/windows/system32/windowspowershell/v1.0/powershell.exe\";\r\n    Sender.ACLED_DIRECTORIES = {};\r\n    Sender.ACL_IDENTITY = null;\r\n    // the amount of time the SDK will wait between resending cached data, this buffer is to avoid any throtelling from the service side\r\n    Sender.WAIT_BETWEEN_RESEND = 60 * 1000;\r\n    Sender.MAX_BYTES_ON_DISK = 50 * 1000 * 1000;\r\n    Sender.MAX_CONNECTION_FAILURES_BEFORE_WARN = 5;\r\n    Sender.TEMPDIR_PREFIX = \"appInsights-node\";\r\n    Sender.OS_PROVIDES_FILE_PROTECTION = false;\r\n    Sender.USE_ICACLS = os.type() === \"Windows_NT\";\r\n    return Sender;\r\n}());\r\nmodule.exports = Sender;\r\n//# sourceMappingURL=Sender.js.map","\"use strict\";\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\nvar Util = require(\"./Util\");\r\nvar CorrelationContextManager_1 = require(\"../AutoCollection/CorrelationContextManager\");\r\n/**\r\n * Manages the logic of creating envelopes from Telemetry objects\r\n */\r\nvar EnvelopeFactory = (function () {\r\n    function EnvelopeFactory() {\r\n    }\r\n    /**\r\n     * Creates envelope ready to be sent by Channel\r\n     * @param telemetry Telemetry data\r\n     * @param telemetryType Type of telemetry\r\n     * @param commonProperties Bag of custom common properties to be added to the envelope\r\n     * @param context Client context\r\n     * @param config Client configuration\r\n     */\r\n    EnvelopeFactory.createEnvelope = function (telemetry, telemetryType, commonProperties, context, config) {\r\n        var data = null;\r\n        switch (telemetryType) {\r\n            case Contracts.TelemetryType.Trace:\r\n                data = EnvelopeFactory.createTraceData(telemetry);\r\n                break;\r\n            case Contracts.TelemetryType.Dependency:\r\n                data = EnvelopeFactory.createDependencyData(telemetry);\r\n                break;\r\n            case Contracts.TelemetryType.Event:\r\n                data = EnvelopeFactory.createEventData(telemetry);\r\n                break;\r\n            case Contracts.TelemetryType.Exception:\r\n                data = EnvelopeFactory.createExceptionData(telemetry);\r\n                break;\r\n            case Contracts.TelemetryType.Request:\r\n                data = EnvelopeFactory.createRequestData(telemetry);\r\n                break;\r\n            case Contracts.TelemetryType.Metric:\r\n                data = EnvelopeFactory.createMetricData(telemetry);\r\n                break;\r\n        }\r\n        if (commonProperties && Contracts.domainSupportsProperties(data.baseData)) {\r\n            if (data && data.baseData) {\r\n                // if no properties are specified just add the common ones\r\n                if (!data.baseData.properties) {\r\n                    data.baseData.properties = commonProperties;\r\n                }\r\n                else {\r\n                    // otherwise, check each of the common ones\r\n                    for (var name in commonProperties) {\r\n                        // only override if the property `name` has not been set on this item\r\n                        if (!data.baseData.properties[name]) {\r\n                            data.baseData.properties[name] = commonProperties[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // sanitize properties\r\n            data.baseData.properties = Util.validateStringMap(data.baseData.properties);\r\n        }\r\n        var iKey = config ? config.instrumentationKey || \"\" : \"\";\r\n        var envelope = new Contracts.Envelope();\r\n        envelope.data = data;\r\n        envelope.iKey = iKey;\r\n        // this is kind of a hack, but the envelope name is always the same as the data name sans the chars \"data\"\r\n        envelope.name =\r\n            \"Microsoft.ApplicationInsights.\" +\r\n                iKey.replace(/-/g, \"\") +\r\n                \".\" +\r\n                data.baseType.substr(0, data.baseType.length - 4);\r\n        envelope.tags = this.getTags(context, telemetry.tagOverrides);\r\n        envelope.time = (new Date()).toISOString();\r\n        envelope.ver = 1;\r\n        envelope.sampleRate = config ? config.samplingPercentage : 100;\r\n        // Exclude metrics from sampling by default\r\n        if (telemetryType === Contracts.TelemetryType.Metric) {\r\n            envelope.sampleRate = 100;\r\n        }\r\n        return envelope;\r\n    };\r\n    EnvelopeFactory.createTraceData = function (telemetry) {\r\n        var trace = new Contracts.MessageData();\r\n        trace.message = telemetry.message;\r\n        trace.properties = telemetry.properties;\r\n        if (!isNaN(telemetry.severity)) {\r\n            trace.severityLevel = telemetry.severity;\r\n        }\r\n        else {\r\n            trace.severityLevel = Contracts.SeverityLevel.Information;\r\n        }\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Trace);\r\n        data.baseData = trace;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.createDependencyData = function (telemetry) {\r\n        var remoteDependency = new Contracts.RemoteDependencyData();\r\n        remoteDependency.name = telemetry.name;\r\n        remoteDependency.data = telemetry.data;\r\n        remoteDependency.target = telemetry.target;\r\n        remoteDependency.duration = Util.msToTimeSpan(telemetry.duration);\r\n        remoteDependency.success = telemetry.success;\r\n        remoteDependency.type = telemetry.dependencyTypeName;\r\n        remoteDependency.properties = telemetry.properties;\r\n        remoteDependency.resultCode = (telemetry.resultCode ? telemetry.resultCode + '' : '');\r\n        if (telemetry.id) {\r\n            remoteDependency.id = telemetry.id;\r\n        }\r\n        else {\r\n            remoteDependency.id = Util.w3cTraceId();\r\n        }\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Dependency);\r\n        data.baseData = remoteDependency;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.createEventData = function (telemetry) {\r\n        var event = new Contracts.EventData();\r\n        event.name = telemetry.name;\r\n        event.properties = telemetry.properties;\r\n        event.measurements = telemetry.measurements;\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Event);\r\n        data.baseData = event;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.createExceptionData = function (telemetry) {\r\n        var exception = new Contracts.ExceptionData();\r\n        exception.properties = telemetry.properties;\r\n        exception.severityLevel = Contracts.SeverityLevel.Error;\r\n        exception.measurements = telemetry.measurements;\r\n        exception.exceptions = [];\r\n        var stack = telemetry.exception[\"stack\"];\r\n        var exceptionDetails = new Contracts.ExceptionDetails();\r\n        exceptionDetails.message = telemetry.exception.message;\r\n        exceptionDetails.typeName = telemetry.exception.name;\r\n        exceptionDetails.parsedStack = this.parseStack(stack);\r\n        exceptionDetails.hasFullStack = Util.isArray(exceptionDetails.parsedStack) && exceptionDetails.parsedStack.length > 0;\r\n        exception.exceptions.push(exceptionDetails);\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Exception);\r\n        data.baseData = exception;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.createRequestData = function (telemetry) {\r\n        var requestData = new Contracts.RequestData();\r\n        if (telemetry.id) {\r\n            requestData.id = telemetry.id;\r\n        }\r\n        else {\r\n            requestData.id = Util.w3cTraceId();\r\n        }\r\n        requestData.name = telemetry.name;\r\n        requestData.url = telemetry.url;\r\n        requestData.source = telemetry.source;\r\n        requestData.duration = Util.msToTimeSpan(telemetry.duration);\r\n        requestData.responseCode = (telemetry.resultCode ? telemetry.resultCode + '' : '');\r\n        requestData.success = telemetry.success;\r\n        requestData.properties = telemetry.properties;\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Request);\r\n        data.baseData = requestData;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.createMetricData = function (telemetry) {\r\n        var metrics = new Contracts.MetricData(); // todo: enable client-batching of these\r\n        metrics.metrics = [];\r\n        var metric = new Contracts.DataPoint();\r\n        metric.count = !isNaN(telemetry.count) ? telemetry.count : 1;\r\n        metric.kind = Contracts.DataPointType.Aggregation;\r\n        metric.max = !isNaN(telemetry.max) ? telemetry.max : telemetry.value;\r\n        metric.min = !isNaN(telemetry.min) ? telemetry.min : telemetry.value;\r\n        metric.name = telemetry.name;\r\n        metric.stdDev = !isNaN(telemetry.stdDev) ? telemetry.stdDev : 0;\r\n        metric.value = telemetry.value;\r\n        metrics.metrics.push(metric);\r\n        metrics.properties = telemetry.properties;\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Metric);\r\n        data.baseData = metrics;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.getTags = function (context, tagOverrides) {\r\n        var correlationContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\r\n        // Make a copy of context tags so we don't alter the actual object\r\n        // Also perform tag overriding\r\n        var newTags = {};\r\n        if (context && context.tags) {\r\n            for (var key in context.tags) {\r\n                newTags[key] = context.tags[key];\r\n            }\r\n        }\r\n        if (tagOverrides) {\r\n            for (var key in tagOverrides) {\r\n                newTags[key] = tagOverrides[key];\r\n            }\r\n        }\r\n        // Fill in internally-populated values if not already set\r\n        if (correlationContext) {\r\n            newTags[context.keys.operationId] = newTags[context.keys.operationId] || correlationContext.operation.id;\r\n            newTags[context.keys.operationName] = newTags[context.keys.operationName] || correlationContext.operation.name;\r\n            newTags[context.keys.operationParentId] = newTags[context.keys.operationParentId] || correlationContext.operation.parentId;\r\n        }\r\n        return newTags;\r\n    };\r\n    EnvelopeFactory.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split(\"\\n\");\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return EnvelopeFactory;\r\n}());\r\nvar _StackFrame = (function () {\r\n    function _StackFrame(frame, level) {\r\n        this.sizeInBytes = 0;\r\n        this.level = level;\r\n        this.method = \"<no_method>\";\r\n        this.assembly = Util.trim(frame);\r\n        var matches = frame.match(_StackFrame.regex);\r\n        if (matches && matches.length >= 5) {\r\n            this.method = Util.trim(matches[2]) || this.method;\r\n            this.fileName = Util.trim(matches[4]) || \"<no_filename>\";\r\n            this.line = parseInt(matches[5]) || 0;\r\n        }\r\n        this.sizeInBytes += this.method.length;\r\n        this.sizeInBytes += this.fileName.length;\r\n        this.sizeInBytes += this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        this.sizeInBytes += _StackFrame.baseSize;\r\n        this.sizeInBytes += this.level.toString().length;\r\n        this.sizeInBytes += this.line.toString().length;\r\n    }\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nmodule.exports = EnvelopeFactory;\r\n//# sourceMappingURL=EnvelopeFactory.js.map","/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('https-proxy-agent');\n\n/**\n * Module exports.\n */\n\nmodule.exports = HttpsProxyAgent;\n\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to the\n * specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * @api public\n */\n\nfunction HttpsProxyAgent(opts) {\n  if (!(this instanceof HttpsProxyAgent)) return new HttpsProxyAgent(opts);\n  if ('string' == typeof opts) opts = url.parse(opts);\n  if (!opts)\n    throw new Error(\n      'an HTTP(S) proxy server `host` and `port` must be specified!'\n    );\n  debug('creating new HttpsProxyAgent instance: %o', opts);\n  Agent.call(this, opts);\n\n  var proxy = Object.assign({}, opts);\n\n  // if `true`, then connect to the proxy server over TLS. defaults to `false`.\n  this.secureProxy = proxy.protocol ? /^https:?$/i.test(proxy.protocol) : false;\n\n  // prefer `hostname` over `host`, and set the `port` if needed\n  proxy.host = proxy.hostname || proxy.host;\n  proxy.port = +proxy.port || (this.secureProxy ? 443 : 80);\n\n  // ALPN is supported by Node.js >= v5.\n  // attempt to negotiate http/1.1 for proxy servers that support http/2\n  if (this.secureProxy && !('ALPNProtocols' in proxy)) {\n    proxy.ALPNProtocols = ['http 1.1']\n  }\n\n  if (proxy.host && proxy.path) {\n    // if both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete proxy.path;\n    delete proxy.pathname;\n  }\n\n  this.proxy = proxy;\n  this.defaultPort = 443;\n}\ninherits(HttpsProxyAgent, Agent);\n\n/**\n * Called when the node-core HTTP client library is creating a new HTTP request.\n *\n * @api public\n */\n\nHttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\n  var proxy = this.proxy;\n\n  // create a socket connection to the proxy server\n  var socket;\n  if (this.secureProxy) {\n    socket = tls.connect(proxy);\n  } else {\n    socket = net.connect(proxy);\n  }\n\n  // we need to buffer any HTTP traffic that happens with the proxy before we get\n  // the CONNECT response, so that if the response is anything other than an \"200\"\n  // response code, then we can re-play the \"data\" events on the socket once the\n  // HTTP parser is hooked up...\n  var buffers = [];\n  var buffersLength = 0;\n\n  function read() {\n    var b = socket.read();\n    if (b) ondata(b);\n    else socket.once('readable', read);\n  }\n\n  function cleanup() {\n    socket.removeListener('data', ondata);\n    socket.removeListener('end', onend);\n    socket.removeListener('error', onerror);\n    socket.removeListener('close', onclose);\n    socket.removeListener('readable', read);\n  }\n\n  function onclose(err) {\n    debug('onclose had error %o', err);\n  }\n\n  function onend() {\n    debug('onend');\n  }\n\n  function onerror(err) {\n    cleanup();\n    fn(err);\n  }\n\n  function ondata(b) {\n    buffers.push(b);\n    buffersLength += b.length;\n    var buffered = Buffer.concat(buffers, buffersLength);\n    var str = buffered.toString('ascii');\n\n    if (!~str.indexOf('\\r\\n\\r\\n')) {\n      // keep buffering\n      debug('have not received end of HTTP headers yet...');\n      if (socket.read) {\n        read();\n      } else {\n        socket.once('data', ondata);\n      }\n      return;\n    }\n\n    var firstLine = str.substring(0, str.indexOf('\\r\\n'));\n    var statusCode = +firstLine.split(' ')[1];\n    debug('got proxy server response: %o', firstLine);\n\n    if (200 == statusCode) {\n      // 200 Connected status code!\n      var sock = socket;\n\n      // nullify the buffered data since we won't be needing it\n      buffers = buffered = null;\n\n      if (opts.secureEndpoint) {\n        // since the proxy is connecting to an SSL server, we have\n        // to upgrade this socket connection to an SSL connection\n        debug(\n          'upgrading proxy-connected socket to TLS connection: %o',\n          opts.host\n        );\n        opts.socket = socket;\n        opts.servername = opts.servername || opts.host;\n        opts.host = null;\n        opts.hostname = null;\n        opts.port = null;\n        sock = tls.connect(opts);\n      }\n\n      cleanup();\n      fn(null, sock);\n    } else {\n      // some other status code that's not 200... need to re-play the HTTP header\n      // \"data\" events onto the socket once the HTTP machinery is attached so that\n      // the user can parse and handle the error status code\n      cleanup();\n\n      // save a reference to the concat'd Buffer for the `onsocket` callback\n      buffers = buffered;\n\n      // need to wait for the \"socket\" event to re-play the \"data\" events\n      req.once('socket', onsocket);\n      fn(null, socket);\n    }\n  }\n\n  function onsocket(socket) {\n    // replay the \"buffers\" Buffer onto the `socket`, since at this point\n    // the HTTP module machinery has been hooked up for the user\n    if ('function' == typeof socket.ondata) {\n      // node <= v0.11.3, the `ondata` function is set on the socket\n      socket.ondata(buffers, 0, buffers.length);\n    } else if (socket.listeners('data').length > 0) {\n      // node > v0.11.3, the \"data\" event is listened for directly\n      socket.emit('data', buffers);\n    } else {\n      // never?\n      throw new Error('should not happen...');\n    }\n\n    // nullify the cached Buffer instance\n    buffers = null;\n  }\n\n  socket.on('error', onerror);\n  socket.on('close', onclose);\n  socket.on('end', onend);\n\n  if (socket.read) {\n    read();\n  } else {\n    socket.once('data', ondata);\n  }\n\n  var hostname = opts.host + ':' + opts.port;\n  var msg = 'CONNECT ' + hostname + ' HTTP/1.1\\r\\n';\n\n  var headers = Object.assign({}, proxy.headers);\n  if (proxy.auth) {\n    headers['Proxy-Authorization'] =\n      'Basic ' + Buffer.from(proxy.auth).toString('base64');\n  }\n\n  // the Host header should only include the port\n  // number when it is a non-standard port\n  var host = opts.host;\n  if (!isDefaultPort(opts.port, opts.secureEndpoint)) {\n    host += ':' + opts.port;\n  }\n  headers['Host'] = host;\n\n  headers['Connection'] = 'close';\n  Object.keys(headers).forEach(function(name) {\n    msg += name + ': ' + headers[name] + '\\r\\n';\n  });\n\n  socket.write(msg + '\\r\\n');\n};\n\nfunction isDefaultPort(port, secure) {\n  return Boolean((!secure && port === 80) || (secure && port === 443));\n}\n","module.exports = require(\"tls\");","'use strict';\nrequire('./patch-core');\nconst inherits = require('util').inherits;\nconst promisify = require('es6-promisify');\nconst EventEmitter = require('events').EventEmitter;\n\nmodule.exports = Agent;\n\nfunction isAgent(v) {\n  return v && typeof v.addRequest === 'function';\n}\n\n/**\n * Base `http.Agent` implementation.\n * No pooling/keep-alive is implemented by default.\n *\n * @param {Function} callback\n * @api public\n */\nfunction Agent(callback, _opts) {\n  if (!(this instanceof Agent)) {\n    return new Agent(callback, _opts);\n  }\n\n  EventEmitter.call(this);\n\n  // The callback gets promisified if it has 3 parameters\n  // (i.e. it has a callback function) lazily\n  this._promisifiedCallback = false;\n\n  let opts = _opts;\n  if ('function' === typeof callback) {\n    this.callback = callback;\n  } else if (callback) {\n    opts = callback;\n  }\n\n  // timeout for the socket to be returned from the callback\n  this.timeout = (opts && opts.timeout) || null;\n\n  this.options = opts;\n}\ninherits(Agent, EventEmitter);\n\n/**\n * Override this function in your subclass!\n */\nAgent.prototype.callback = function callback(req, opts) {\n  throw new Error(\n    '\"agent-base\" has no default implementation, you must subclass and override `callback()`'\n  );\n};\n\n/**\n * Called by node-core's \"_http_client.js\" module when creating\n * a new HTTP request with this Agent instance.\n *\n * @api public\n */\nAgent.prototype.addRequest = function addRequest(req, _opts) {\n  const ownOpts = Object.assign({}, _opts);\n\n  // Set default `host` for HTTP to localhost\n  if (null == ownOpts.host) {\n    ownOpts.host = 'localhost';\n  }\n\n  // Set default `port` for HTTP if none was explicitly specified\n  if (null == ownOpts.port) {\n    ownOpts.port = ownOpts.secureEndpoint ? 443 : 80;\n  }\n\n  const opts = Object.assign({}, this.options, ownOpts);\n\n  if (opts.host && opts.path) {\n    // If both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete opts.path;\n  }\n\n  delete opts.agent;\n  delete opts.hostname;\n  delete opts._defaultAgent;\n  delete opts.defaultPort;\n  delete opts.createConnection;\n\n  // Hint to use \"Connection: close\"\n  // XXX: non-documented `http` module API :(\n  req._last = true;\n  req.shouldKeepAlive = false;\n\n  // Create the `stream.Duplex` instance\n  let timeout;\n  let timedOut = false;\n  const timeoutMs = this.timeout;\n  const freeSocket = this.freeSocket;\n\n  function onerror(err) {\n    if (req._hadError) return;\n    req.emit('error', err);\n    // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n    req._hadError = true;\n  }\n\n  function ontimeout() {\n    timeout = null;\n    timedOut = true;\n    const err = new Error(\n      'A \"socket\" was not created for HTTP request before ' + timeoutMs + 'ms'\n    );\n    err.code = 'ETIMEOUT';\n    onerror(err);\n  }\n\n  function callbackError(err) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    onerror(err);\n  }\n\n  function onsocket(socket) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    if (isAgent(socket)) {\n      // `socket` is actually an http.Agent instance, so relinquish\n      // responsibility for this `req` to the Agent from here on\n      socket.addRequest(req, opts);\n    } else if (socket) {\n      function onfree() {\n        freeSocket(socket, opts);\n      }\n      socket.on('free', onfree);\n      req.onSocket(socket);\n    } else {\n      const err = new Error(\n        'no Duplex stream was returned to agent-base for `' + req.method + ' ' + req.path + '`'\n      );\n      onerror(err);\n    }\n  }\n\n  if (!this._promisifiedCallback && this.callback.length >= 3) {\n    // Legacy callback function - convert to a Promise\n    this.callback = promisify(this.callback, this);\n    this._promisifiedCallback = true;\n  }\n\n  if (timeoutMs > 0) {\n    timeout = setTimeout(ontimeout, timeoutMs);\n  }\n\n  try {\n    Promise.resolve(this.callback(req, opts)).then(onsocket, callbackError);\n  } catch (err) {\n    Promise.reject(err).catch(callbackError);\n  }\n};\n\nAgent.prototype.freeSocket = function freeSocket(socket, opts) {\n  // TODO reuse sockets\n  socket.destroy();\n};\n","'use strict';\nconst url = require('url');\nconst https = require('https');\n\n/**\n * This currently needs to be applied to all Node.js versions\n * in order to determine if the `req` is an HTTP or HTTPS request.\n *\n * There is currently no PR attempting to move this property upstream.\n */\nhttps.request = (function(request) {\n  return function(_options, cb) {\n    let options;\n    if (typeof _options === 'string') {\n      options = url.parse(_options);\n    } else {\n      options = Object.assign({}, _options);\n    }\n    if (null == options.port) {\n      options.port = 443;\n    }\n    options.secureEndpoint = true;\n    return request.call(https, options, cb);\n  };\n})(https.request);\n\n/**\n * This is needed for Node.js >= 9.0.0 to make sure `https.get()` uses the\n * patched `https.request()`.\n *\n * Ref: https://github.com/nodejs/node/commit/5118f31\n */\nhttps.get = function(options, cb) {\n  const req = https.request(options, cb);\n  req.end();\n  return req;\n};\n","\"use strict\";\n\n/* global module, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    // Get a promise object. This may be native, or it may be polyfilled\n\n    var ES6Promise = require(\"./promise.js\");\n\n    /**\n     * thatLooksLikeAPromiseToMe()\n     *\n     * Duck-types a promise.\n     *\n     * @param {object} o\n     * @return {bool} True if this resembles a promise\n     */\n    function thatLooksLikeAPromiseToMe(o) {\n        return o && typeof o.then === \"function\" && typeof o.catch === \"function\";\n    }\n\n    /**\n     * promisify()\n     *\n     * Transforms callback-based function -- func(arg1, arg2 .. argN, callback) -- into\n     * an ES6-compatible Promise. Promisify provides a default callback of the form (error, result)\n     * and rejects when `error` is truthy. You can also supply settings object as the second argument.\n     *\n     * @param {function} original - The function to promisify\n     * @param {object} settings - Settings object\n     * @param {object} settings.thisArg - A `this` context to use. If not set, assume `settings` _is_ `thisArg`\n     * @param {bool} settings.multiArgs - Should multiple arguments be returned as an array?\n     * @return {function} A promisified version of `original`\n     */\n    return function promisify(original, settings) {\n\n        return function () {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            var returnMultipleArguments = settings && settings.multiArgs;\n\n            var target = void 0;\n            if (settings && settings.thisArg) {\n                target = settings.thisArg;\n            } else if (settings) {\n                target = settings;\n            }\n\n            // Return the promisified function\n            return new ES6Promise(function (resolve, reject) {\n\n                // Append the callback bound to the context\n                args.push(function callback(err) {\n\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    for (var _len2 = arguments.length, values = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                        values[_key2 - 1] = arguments[_key2];\n                    }\n\n                    if (false === !!returnMultipleArguments) {\n                        return resolve(values[0]);\n                    }\n\n                    resolve(values);\n                });\n\n                // Call the function\n                var response = original.apply(target, args);\n\n                // If it looks like original already returns a promise,\n                // then just resolve with that promise. Hopefully, the callback function we added will just be ignored.\n                if (thatLooksLikeAPromiseToMe(response)) {\n                    resolve(response);\n                }\n            });\n        };\n    };\n}();","\"use strict\";\n\n/* global self, window, module, global, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    var globalObject = void 0;\n\n    function isFunction(x) {\n        return typeof x === \"function\";\n    }\n\n    // Seek the global object\n    if (global !== undefined) {\n        globalObject = global;\n    } else if (window !== undefined && window.document) {\n        globalObject = window;\n    } else {\n        globalObject = self;\n    }\n\n    // Test for any native promise implementation, and if that\n    // implementation appears to conform to the specificaton.\n    // This code mostly nicked from the es6-promise module polyfill\n    // and then fooled with.\n    var hasPromiseSupport = function () {\n\n        // No promise object at all, and it's a non-starter\n        if (!globalObject.hasOwnProperty(\"Promise\")) {\n            return false;\n        }\n\n        // There is a Promise object. Does it conform to the spec?\n        var P = globalObject.Promise;\n\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        if (!P.hasOwnProperty(\"resolve\") || !P.hasOwnProperty(\"reject\")) {\n            return false;\n        }\n\n        if (!P.hasOwnProperty(\"all\") || !P.hasOwnProperty(\"race\")) {\n            return false;\n        }\n\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        return function () {\n\n            var resolve = void 0;\n\n            var p = new globalObject.Promise(function (r) {\n                resolve = r;\n            });\n\n            if (p) {\n                return isFunction(resolve);\n            }\n\n            return false;\n        }();\n    }();\n\n    // Export the native Promise implementation if it\n    // looks like it matches the spec\n    if (hasPromiseSupport) {\n        return globalObject.Promise;\n    }\n\n    //  Otherwise, return the es6-promise polyfill by @jaffathecake.\n    return require(\"es6-promise\").Promise;\n}();","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.5+7f2b526d\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar TRY_CATCH_ERROR = { error: null };\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === TRY_CATCH_ERROR) {\n      reject(promise, TRY_CATCH_ERROR.error);\n      TRY_CATCH_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n","\"use strict\";\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\n\n/**\n * Module dependencies.\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = require('supports-color');\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n      useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).replace(/\\s*\\n\\s*/g, ' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n","module.exports = require(\"tty\");","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nconst support = level => {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n};\n\nlet supportLevel = (() => {\n\tif (hasFlag('no-color') ||\n\t\thasFlag('no-colors') ||\n\t\thasFlag('color=false')) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (hasFlag('color') ||\n\t\thasFlag('colors') ||\n\t\thasFlag('color=true') ||\n\t\thasFlag('color=always')) {\n\t\treturn 1;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn 0;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Hyper':\n\t\t\t\treturn 3;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn 0;\n\t}\n\n\treturn 0;\n})();\n\nif ('FORCE_COLOR' in env) {\n\tsupportLevel = parseInt(env.FORCE_COLOR, 10) === 0 ? 0 : (supportLevel || 1);\n}\n\nmodule.exports = process && support(supportLevel);\n","'use strict';\nmodule.exports = function (flag, argv) {\n\targv = argv || process.argv;\n\n\tvar terminatorPos = argv.indexOf('--');\n\tvar prefix = /^-{1,2}/.test(flag) ? '' : '--';\n\tvar pos = argv.indexOf(prefix + flag);\n\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","module.exports = require(\"assert\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as util from '../common';\r\nimport * as telemetry from '../telemetry';\r\nimport * as cpptools from './client';\r\nimport * as path from 'path';\r\nimport { getCustomConfigProviders } from './customProviders';\r\n\r\nconst defaultClientKey: string = \"@@default@@\";\r\nexport interface ClientKey {\r\n    name: string;\r\n    key: string;\r\n}\r\n\r\nexport class ClientCollection {\r\n    private disposables: vscode.Disposable[] = [];\r\n    private languageClients = new Map<string, cpptools.Client>();\r\n    private defaultClient: cpptools.Client;\r\n    private activeClient: cpptools.Client;\r\n    private activeDocument: vscode.TextDocument;\r\n\r\n    public get ActiveClient(): cpptools.Client { return this.activeClient; }\r\n    public get Names(): ClientKey[] {\r\n        let result: ClientKey[] = [];\r\n        this.languageClients.forEach((client, key) => {\r\n            result.push({ name: client.Name, key: key });\r\n        });\r\n        return result;\r\n    }\r\n    public get Count(): number { return this.languageClients.size; }\r\n\r\n    constructor() {\r\n        let key: string = defaultClientKey;\r\n        if (vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 0) {\r\n            let folder: vscode.WorkspaceFolder = vscode.workspace.workspaceFolders[0];\r\n            key = util.asFolder(folder.uri);\r\n            this.activeClient = cpptools.createClient(this, folder);\r\n        } else {\r\n            this.activeClient = cpptools.createClient(this);\r\n        }\r\n        this.defaultClient = this.activeClient;\r\n        this.languageClients.set(key, this.activeClient);\r\n\r\n        this.disposables.push(vscode.workspace.onDidChangeWorkspaceFolders(e => this.onDidChangeWorkspaceFolders(e)));\r\n        this.disposables.push(vscode.workspace.onDidOpenTextDocument(d => this.onDidOpenTextDocument(d)));\r\n        this.disposables.push(vscode.workspace.onDidCloseTextDocument(d => this.onDidCloseTextDocument(d)));\r\n    }\r\n\r\n    public activeDocumentChanged(document: vscode.TextDocument): void {\r\n        this.activeDocument = document;\r\n        let activeClient: cpptools.Client = this.getClientFor(document.uri);\r\n\r\n        // Notify the active client that the document has changed.\r\n        activeClient.activeDocumentChanged(document);\r\n\r\n        // If the active client changed, resume the new client and tell the currently active client to deactivate.\r\n        if (activeClient !== this.activeClient) {\r\n            activeClient.activate();\r\n            this.activeClient.deactivate();\r\n            this.activeClient = activeClient;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get a handle to a language client. returns null if the client was not found.\r\n     */\r\n    public get(key: string): cpptools.Client | null {\r\n        if (this.languageClients.has(key)) {\r\n            return this.languageClients.get(key);\r\n        }\r\n        console.assert(\"key not found\");\r\n        return null;\r\n    }\r\n\r\n    public forEach(callback: (client: cpptools.Client) => void): void {\r\n        this.languageClients.forEach(callback);\r\n    }\r\n\r\n    public checkOwnership(client: cpptools.Client, document: vscode.TextDocument): boolean {\r\n        let owners: cpptools.Client[] = [];\r\n        this.languageClients.forEach(languageClient => {\r\n            if (document.uri.fsPath.startsWith(languageClient.RootPath + path.sep)) {\r\n                owners.push(languageClient);\r\n            }\r\n        });\r\n        if (owners.length === 0) {\r\n            owners.push(this.activeClient);\r\n        }\r\n\r\n        return (owners[0] === client);  // TODO: we may want to pick the owner with the longest path?\r\n    }\r\n\r\n    /**\r\n     * creates a new client to replace one that crashed.\r\n     */\r\n    public replace(client: cpptools.Client, transferFileOwnership: boolean): cpptools.Client {\r\n        let key: string = undefined;\r\n        for (let pair of this.languageClients) {\r\n            if (pair[1] === client) {\r\n                key = pair[0];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (key) {\r\n            this.languageClients.delete(key);\r\n\r\n            if (transferFileOwnership) {\r\n                // This will create a new Client for the workspace since we removed the old one from this.languageClients.\r\n                client.TrackedDocuments.forEach(document => this.transferOwnership(document, client));\r\n                client.TrackedDocuments.clear();\r\n            } else {\r\n                // Create an empty client that will continue to \"own\" files matching this workspace, but ignore all messages from VS Code.\r\n                this.languageClients.set(key, cpptools.createNullClient());\r\n            }\r\n\r\n            if (this.activeClient === client && this.activeDocument) {\r\n                this.activeClient = this.getClientFor(this.activeDocument.uri);\r\n                this.activeClient.activeDocumentChanged(this.activeDocument);\r\n            }\r\n\r\n            client.dispose();\r\n            return this.languageClients.get(key);\r\n        } else {\r\n            console.assert(key, \"unable to locate language client\");\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove folders that were closed. We don't check the e.added property because we will\r\n     * add new clients on-demand as files are opened.\r\n     */\r\n    private onDidChangeWorkspaceFolders(e?: vscode.WorkspaceFoldersChangeEvent): void {\r\n        let folderCount: number = vscode.workspace.workspaceFolders ? vscode.workspace.workspaceFolders.length : 0;\r\n        if (folderCount > 1) {\r\n            telemetry.logLanguageServerEvent(\"workspaceFoldersChange\", { \"count\": folderCount.toString() });\r\n        }\r\n\r\n        if (e !== undefined) {\r\n            e.removed.forEach(folder => {\r\n                let path: string = util.asFolder(folder.uri);\r\n                let client: cpptools.Client = this.languageClients.get(path);\r\n                if (client) {\r\n                    this.languageClients.delete(path);  // Do this first so that we don't iterate on it during the ownership transfer process.\r\n\r\n                    // Transfer ownership of the client's documents to another client.\r\n                    // (this includes calling textDocument/didOpen on the new client so that the server knows it's open too)\r\n                    client.TrackedDocuments.forEach(document => this.transferOwnership(document, client));\r\n                    client.TrackedDocuments.clear();\r\n\r\n                    if (this.activeClient === client && this.activeDocument) {\r\n                        // Need to make a different client the active client.\r\n                        this.activeClient = this.getClientFor(this.activeDocument.uri);\r\n                        this.activeClient.activeDocumentChanged(this.activeDocument);\r\n                        // may not need this, the navigation UI should not have changed.\r\n                        // this.activeClient.selectionChanged(Range.create(vscode.window.activeTextEditor.selection.start, vscode.window.activeTextEditor.selection.end);\r\n                    }\r\n\r\n                    client.dispose();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private transferOwnership(document: vscode.TextDocument, oldOwner: cpptools.Client): void {\r\n        let newOwner: cpptools.Client = this.getClientFor(document.uri);\r\n        console.assert(newOwner !== oldOwner, \"'oldOwner' should not be in the list of clients to consider\");\r\n        newOwner.takeOwnership(document);\r\n    }\r\n\r\n    private onDidOpenTextDocument(document: vscode.TextDocument): void {\r\n        if (document.languageId === \"c\" || document.languageId === \"cpp\"\r\n            || document.languageId === \"json\" && document.uri.fsPath.endsWith(\"c_cpp_properties.json\")) {\r\n            // Make sure a client exists for this document's workspace.\r\n            this.getClientFor(document.uri);\r\n        }\r\n    }\r\n\r\n    private getClientFor(uri: vscode.Uri): cpptools.Client {\r\n        let folder: vscode.WorkspaceFolder = vscode.workspace.getWorkspaceFolder(uri);\r\n        if (!folder) {\r\n            return this.defaultClient;\r\n        } else {\r\n            let key: string = util.asFolder(folder.uri);\r\n            if (!this.languageClients.has(key)) {\r\n                let newClient: cpptools.Client = cpptools.createClient(this, folder);\r\n                this.languageClients.set(key, newClient);\r\n                getCustomConfigProviders().forEach(provider => newClient.onRegisterCustomConfigurationProvider(provider));\r\n            }\r\n            return this.languageClients.get(key);\r\n        }\r\n    }\r\n\r\n    private onDidCloseTextDocument(document: vscode.TextDocument): void {\r\n        // Don't seem to need to do anything here since we clean up when the workspace is closed instead.\r\n    }\r\n\r\n    public dispose(): Thenable<void> {\r\n        let promises: Thenable<void>[] = [];\r\n\r\n        // this.defaultClient is already in this.languageClients, so do not call dispose() on it.\r\n        this.defaultClient = undefined;\r\n\r\n        this.languageClients.forEach(client => promises.push(client.dispose()));\r\n        this.languageClients.clear();\r\n        return Promise.all(promises).then(() => undefined);\r\n    }\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as path from 'path';\r\nimport * as vscode from 'vscode';\r\nimport {\r\n    LanguageClient, LanguageClientOptions, ServerOptions, NotificationType, TextDocumentIdentifier,\r\n    RequestType, ErrorAction, CloseAction, DidOpenTextDocumentParams, Range\r\n} from 'vscode-languageclient';\r\nimport { SourceFileConfigurationItem, WorkspaceBrowseConfiguration, SourceFileConfiguration, Version } from 'vscode-cpptools';\r\nimport { Status } from 'vscode-cpptools/out/testApi';\r\nimport * as util from '../common';\r\nimport * as configs from './configurations';\r\nimport { CppSettings, OtherSettings } from './settings';\r\nimport * as telemetry from '../telemetry';\r\nimport { PersistentState, PersistentFolderState } from './persistentState';\r\nimport { UI, getUI } from './ui';\r\nimport { ClientCollection } from './clientCollection';\r\nimport { createProtocolFilter } from './protocolFilter';\r\nimport { DataBinding } from './dataBinding';\r\nimport minimatch = require(\"minimatch\");\r\nimport * as logger from '../logger';\r\nimport { updateLanguageConfigurations, registerCommands } from './extension';\r\nimport { CancellationTokenSource } from 'vscode';\r\nimport { SettingsTracker, getTracker } from './settingsTracker';\r\nimport { getTestHook, TestHook } from '../testHook';\r\nimport { getCustomConfigProviders, CustomConfigurationProviderCollection, CustomConfigurationProvider1 } from '../LanguageServer/customProviders';\r\nimport { ABTestSettings, getABTestSettings } from '../abTesting';\r\nimport * as fs from 'fs';\r\nimport * as os from 'os';\r\n\r\nlet ui: UI;\r\nconst configProviderTimeout: number = 2000;\r\n\r\ninterface NavigationPayload {\r\n    navigation: string;\r\n}\r\n\r\ninterface TelemetryPayload {\r\n    event: string;\r\n    properties?: { [key: string]: string };\r\n    metrics?: { [key: string]: number };\r\n}\r\n\r\ninterface OutputNotificationBody {\r\n    category: string;\r\n    output: string;\r\n}\r\n\r\ninterface ReportStatusNotificationBody {\r\n    status: string;\r\n}\r\n\r\ninterface QueryCompilerDefaultsParams {\r\n}\r\n\r\ninterface FolderSettingsParams {\r\n    currentConfiguration: number;\r\n    configurations: any[];\r\n}\r\n\r\ninterface FolderSelectedSettingParams {\r\n    currentConfiguration: number;\r\n}\r\n\r\ninterface SwitchHeaderSourceParams {\r\n    rootPath: string;\r\n    switchHeaderSourceFileName: string;\r\n}\r\n\r\ninterface FileChangedParams {\r\n    uri: string;\r\n}\r\n\r\ninterface OutputNotificationBody {\r\n    category: string;\r\n    output: string;\r\n}\r\n\r\ninterface InactiveRegionParams {\r\n    uri: string;\r\n    regions: InputRegion[];\r\n}\r\n\r\ninterface InputRegion {\r\n    startLine: number;\r\n    endLine: number;\r\n}\r\n\r\ninterface DecorationRangesPair {\r\n    decoration: vscode.TextEditorDecorationType;\r\n    ranges: vscode.Range[];\r\n}\r\n\r\n// Need to convert vscode.Uri to a string before sending it to the language server.\r\ninterface SourceFileConfigurationItemAdapter {\r\n    uri: string;\r\n    configuration: SourceFileConfiguration;\r\n}\r\n\r\ninterface CustomConfigurationParams {\r\n    configurationItems: SourceFileConfigurationItemAdapter[];\r\n}\r\n\r\ninterface CustomBrowseConfigurationParams {\r\n    browseConfiguration: WorkspaceBrowseConfiguration;\r\n}\r\n\r\ninterface CompileCommandsPaths {\r\n    paths: string[];\r\n}\r\n\r\n// Requests\r\nconst NavigationListRequest: RequestType<TextDocumentIdentifier, string, void, void> = new RequestType<TextDocumentIdentifier, string, void, void>('cpptools/requestNavigationList');\r\nconst GoToDeclarationRequest: RequestType<void, void, void, void> = new RequestType<void, void, void, void>('cpptools/goToDeclaration');\r\nconst QueryCompilerDefaultsRequest: RequestType<QueryCompilerDefaultsParams, configs.CompilerDefaults, void, void> = new RequestType<QueryCompilerDefaultsParams, configs.CompilerDefaults, void, void>('cpptools/queryCompilerDefaults');\r\nconst SwitchHeaderSourceRequest: RequestType<SwitchHeaderSourceParams, string, void, void> = new RequestType<SwitchHeaderSourceParams, string, void, void>('cpptools/didSwitchHeaderSource');\r\n\r\n// Notifications to the server\r\nconst DidOpenNotification: NotificationType<DidOpenTextDocumentParams, void> = new NotificationType<DidOpenTextDocumentParams, void>('textDocument/didOpen');\r\nconst FileCreatedNotification: NotificationType<FileChangedParams, void> = new NotificationType<FileChangedParams, void>('cpptools/fileCreated');\r\nconst FileDeletedNotification: NotificationType<FileChangedParams, void> = new NotificationType<FileChangedParams, void>('cpptools/fileDeleted');\r\nconst ResetDatabaseNotification: NotificationType<void, void> = new NotificationType<void, void>('cpptools/resetDatabase');\r\nconst PauseParsingNotification: NotificationType<void, void> = new NotificationType<void, void>('cpptools/pauseParsing');\r\nconst ResumeParsingNotification: NotificationType<void, void> = new NotificationType<void, void>('cpptools/resumeParsing');\r\nconst ActiveDocumentChangeNotification: NotificationType<TextDocumentIdentifier, void> = new NotificationType<TextDocumentIdentifier, void>('cpptools/activeDocumentChange');\r\nconst TextEditorSelectionChangeNotification: NotificationType<Range, void> = new NotificationType<Range, void>('cpptools/textEditorSelectionChange');\r\nconst ChangeFolderSettingsNotification: NotificationType<FolderSettingsParams, void> = new NotificationType<FolderSettingsParams, void>('cpptools/didChangeFolderSettings');\r\nconst ChangeCompileCommandsNotification: NotificationType<FileChangedParams, void> = new NotificationType<FileChangedParams, void>('cpptools/didChangeCompileCommands');\r\nconst ChangeSelectedSettingNotification: NotificationType<FolderSelectedSettingParams, void> = new NotificationType<FolderSelectedSettingParams, void>('cpptools/didChangeSelectedSetting');\r\nconst IntervalTimerNotification: NotificationType<void, void> = new NotificationType<void, void>('cpptools/onIntervalTimer');\r\nconst CustomConfigurationNotification: NotificationType<CustomConfigurationParams, void> = new NotificationType<CustomConfigurationParams, void>('cpptools/didChangeCustomConfiguration');\r\nconst CustomBrowseConfigurationNotification: NotificationType<CustomBrowseConfigurationParams, void> = new NotificationType<CustomBrowseConfigurationParams, void>('cpptools/didChangeCustomBrowseConfiguration');\r\nconst ClearCustomConfigurationsNotification: NotificationType<void, void> = new NotificationType<void, void>('cpptools/clearCustomConfigurations');\r\n\r\n// Notifications from the server\r\nconst ReloadWindowNotification: NotificationType<void, void> = new NotificationType<void, void>('cpptools/reloadWindow');\r\nconst LogTelemetryNotification: NotificationType<TelemetryPayload, void> = new NotificationType<TelemetryPayload, void>('cpptools/logTelemetry');\r\nconst ReportNavigationNotification: NotificationType<NavigationPayload, void> = new NotificationType<NavigationPayload, void>('cpptools/reportNavigation');\r\nconst ReportTagParseStatusNotification: NotificationType<ReportStatusNotificationBody, void> = new NotificationType<ReportStatusNotificationBody, void>('cpptools/reportTagParseStatus');\r\nconst ReportStatusNotification: NotificationType<ReportStatusNotificationBody, void> = new NotificationType<ReportStatusNotificationBody, void>('cpptools/reportStatus');\r\nconst DebugProtocolNotification: NotificationType<OutputNotificationBody, void> = new NotificationType<OutputNotificationBody, void>('cpptools/debugProtocol');\r\nconst DebugLogNotification:  NotificationType<OutputNotificationBody, void> = new NotificationType<OutputNotificationBody, void>('cpptools/debugLog');\r\nconst InactiveRegionNotification:  NotificationType<InactiveRegionParams, void> = new NotificationType<InactiveRegionParams, void>('cpptools/inactiveRegions');\r\nconst CompileCommandsPathsNotification:  NotificationType<CompileCommandsPaths, void> = new NotificationType<CompileCommandsPaths, void>('cpptools/compileCommandsPaths');\r\nconst UpdateClangFormatPathNotification: NotificationType<string, void> = new NotificationType<string, void>('cpptools/updateClangFormatPath');\r\n\r\nclass BlockingTask<T> {\r\n    private dependency: BlockingTask<any>;\r\n    private done: boolean = false;\r\n    private promise: Promise<T>;\r\n\r\n    constructor(task: () => T, dependency?: BlockingTask<any>) {\r\n        this.promise = new Promise<T>(async (resolve, reject) => {\r\n            try {\r\n                let result: T = await task();\r\n                resolve(result);\r\n                this.done = true;\r\n            } catch (err) {\r\n                reject(err);\r\n                this.done = true;\r\n            }\r\n        });\r\n        this.dependency = dependency;\r\n    }\r\n\r\n    public get Done(): boolean {\r\n        return this.done && (!this.dependency || this.dependency.Done);\r\n    }\r\n\r\n    public then(onSucceeded: (value: T) => any, onRejected: (err) => any): Promise<any> {\r\n        return this.promise.then(onSucceeded, onRejected);\r\n    }\r\n}\r\n\r\nlet failureMessageShown: boolean = false;\r\n\r\ninterface ClientModel {\r\n    isTagParsing: DataBinding<boolean>;\r\n    isUpdatingIntelliSense: DataBinding<boolean>;\r\n    navigationLocation: DataBinding<string>;\r\n    tagParserStatus: DataBinding<string>;\r\n    activeConfigName: DataBinding<string>;\r\n}\r\n\r\nexport interface Client {\r\n    TagParsingChanged: vscode.Event<boolean>;\r\n    IntelliSenseParsingChanged: vscode.Event<boolean>;\r\n    NavigationLocationChanged: vscode.Event<string>;\r\n    TagParserStatusChanged: vscode.Event<string>;\r\n    ActiveConfigChanged: vscode.Event<string>;\r\n    RootPath: string;\r\n    RootUri: vscode.Uri;\r\n    Name: string;\r\n    TrackedDocuments: Set<vscode.TextDocument>;\r\n    onDidChangeSettings(): { [key: string] : string };\r\n    onDidChangeVisibleTextEditors(editors: vscode.TextEditor[]): void;\r\n    onRegisterCustomConfigurationProvider(provider: CustomConfigurationProvider1): Thenable<void>;\r\n    updateCustomConfigurations(requestingProvider?: CustomConfigurationProvider1): Thenable<void>;\r\n    updateCustomBrowseConfiguration(requestingProvider?: CustomConfigurationProvider1): Thenable<void>;\r\n    provideCustomConfiguration(document: vscode.TextDocument): Promise<void>;\r\n    getCurrentConfigName(): Thenable<string>;\r\n    getCompilerPath(): Thenable<string>;\r\n    getKnownCompilers(): Thenable<configs.KnownCompiler[]>;\r\n    takeOwnership(document: vscode.TextDocument): void;\r\n    queueTask<T>(task: () => Thenable<T>): Thenable<T>;\r\n    requestWhenReady(request: () => Thenable<any>): Thenable<any>;\r\n    notifyWhenReady(notify: () => void): void;\r\n    requestGoToDeclaration(): Thenable<void>;\r\n    requestSwitchHeaderSource(rootPath: string, fileName: string): Thenable<string>;\r\n    requestNavigationList(document: vscode.TextDocument): Thenable<string>;\r\n    activeDocumentChanged(document: vscode.TextDocument): void;\r\n    activate(): void;\r\n    selectionChanged(selection: Range): void;\r\n    resetDatabase(): void;\r\n    deactivate(): void;\r\n    pauseParsing(): void;\r\n    resumeParsing(): void;\r\n    handleConfigurationSelectCommand(): void;\r\n    handleConfigurationProviderSelectCommand(): void;\r\n    handleShowParsingCommands(): void;\r\n    handleConfigurationEditCommand(): void;\r\n    handleAddToIncludePathCommand(path: string): void;\r\n    onInterval(): void;\r\n    dispose(): Thenable<void>;\r\n}\r\n\r\nexport function createClient(allClients: ClientCollection, workspaceFolder?: vscode.WorkspaceFolder): Client {\r\n    return new DefaultClient(allClients, workspaceFolder);\r\n}\r\n\r\nexport function createNullClient(): Client {\r\n    return new NullClient();\r\n}\r\n\r\nclass DefaultClient implements Client {\r\n    private languageClient: LanguageClient; // The \"client\" that launches and communicates with our language \"server\" process.\r\n    private disposables: vscode.Disposable[] = [];\r\n    private configuration: configs.CppProperties;\r\n    private rootPathFileWatcher: vscode.FileSystemWatcher;\r\n    private rootFolder: vscode.WorkspaceFolder | undefined;\r\n    private trackedDocuments = new Set<vscode.TextDocument>();\r\n    private outputChannel: vscode.OutputChannel;\r\n    private debugChannel: vscode.OutputChannel;\r\n    private crashTimes: number[] = [];\r\n    private isSupported: boolean = true;\r\n    private inactiveRegionsDecorations = new Map<string, DecorationRangesPair>();\r\n    private settingsTracker: SettingsTracker;\r\n    private configurationProvider: string;\r\n\r\n    // The \"model\" that is displayed via the UI (status bar).\r\n    private model: ClientModel = {\r\n        isTagParsing: new DataBinding<boolean>(false),\r\n        isUpdatingIntelliSense: new DataBinding<boolean>(false),\r\n        navigationLocation: new DataBinding<string>(\"\"),\r\n        tagParserStatus: new DataBinding<string>(\"\"),\r\n        activeConfigName: new DataBinding<string>(\"\")\r\n    };\r\n\r\n    public get TagParsingChanged(): vscode.Event<boolean> { return this.model.isTagParsing.ValueChanged; }\r\n    public get IntelliSenseParsingChanged(): vscode.Event<boolean> { return this.model.isUpdatingIntelliSense.ValueChanged; }\r\n    public get NavigationLocationChanged(): vscode.Event<string> { return this.model.navigationLocation.ValueChanged; }\r\n    public get TagParserStatusChanged(): vscode.Event<string> { return this.model.tagParserStatus.ValueChanged; }\r\n    public get ActiveConfigChanged(): vscode.Event<string> { return this.model.activeConfigName.ValueChanged; }\r\n\r\n    /**\r\n     * don't use this.rootFolder directly since it can be undefined\r\n     */\r\n    public get RootPath(): string {\r\n        return (this.rootFolder) ? this.rootFolder.uri.fsPath : \"\";\r\n    }\r\n    public get RootUri(): vscode.Uri {\r\n        return (this.rootFolder) ? this.rootFolder.uri : null;\r\n    }\r\n    public get Name(): string {\r\n        return this.getName(this.rootFolder);\r\n    }\r\n    public get TrackedDocuments(): Set<vscode.TextDocument> {\r\n        return this.trackedDocuments;\r\n    }\r\n\r\n    private get AdditionalEnvironment(): { [key: string]: string | string[] } {\r\n        return { workspaceFolderBasename: this.Name };\r\n    }\r\n\r\n    private getName(workspaceFolder?: vscode.WorkspaceFolder): string {\r\n        return workspaceFolder ? workspaceFolder.name : \"untitled\";\r\n    }\r\n\r\n    /**\r\n     * All public methods on this class must be guarded by the \"pendingTask\" promise. Requests and notifications received before the task is\r\n     * complete are executed after this promise is resolved.\r\n     * @see requestWhenReady<T>(request)\r\n     * @see notifyWhenReady(notify)\r\n     */\r\n\r\n    private pendingTask: BlockingTask<void>;\r\n\r\n    constructor(allClients: ClientCollection, workspaceFolder?: vscode.WorkspaceFolder) {\r\n        try {\r\n            let languageClient: LanguageClient = this.createLanguageClient(allClients, workspaceFolder);\r\n            languageClient.registerProposedFeatures();\r\n            languageClient.start();  // This returns Disposable, but doesn't need to be tracked because we call .stop() explicitly in our dispose()\r\n            util.setProgress(util.getProgressExecutableStarted());\r\n            this.rootFolder = workspaceFolder;\r\n            ui = getUI();\r\n            ui.bind(this);\r\n\r\n            // requests/notifications are deferred until this.languageClient is set.\r\n            this.queueBlockingTask(() => languageClient.onReady().then(\r\n                () => {\r\n                    this.configuration = new configs.CppProperties(this.RootUri);\r\n                    this.configuration.ConfigurationsChanged((e) => this.onConfigurationsChanged(e));\r\n                    this.configuration.SelectionChanged((e) => this.onSelectedConfigurationChanged(e));\r\n                    this.configuration.CompileCommandsChanged((e) => this.onCompileCommandsChanged(e));\r\n                    this.disposables.push(this.configuration);\r\n\r\n                    // The configurations will not be sent to the language server until the default include paths and frameworks have been set.\r\n                    // The event handlers must be set before this happens.\r\n                    languageClient.sendRequest(QueryCompilerDefaultsRequest, {}).then((compilerDefaults: configs.CompilerDefaults) => {\r\n                        this.configuration.CompilerDefaults = compilerDefaults;\r\n                        \r\n                        // Only register the real commands after the extension has finished initializing,\r\n                        // e.g. prevents empty c_cpp_properties.json from generation.\r\n                        registerCommands();\r\n                    });\r\n\r\n                    this.languageClient = languageClient;\r\n                    this.settingsTracker = getTracker(this.RootUri);\r\n                    telemetry.logLanguageServerEvent(\"NonDefaultInitialCppSettings\", this.settingsTracker.getUserModifiedSettings());\r\n                    failureMessageShown = false;\r\n\r\n                    // Listen for messages from the language server.\r\n                    this.registerNotifications();\r\n                    this.registerFileWatcher();\r\n                },\r\n                (err) => {\r\n                    this.isSupported = false;   // Running on an OS we don't support yet.\r\n                    if (!failureMessageShown) {\r\n                        failureMessageShown = true;\r\n                        vscode.window.showErrorMessage(\"Unable to start the C/C++ language server. IntelliSense features will be disabled. Error: \" + String(err));\r\n                    }\r\n                }));\r\n        } catch (err) {\r\n            this.isSupported = false;   // Running on an OS we don't support yet.\r\n            if (!failureMessageShown) {\r\n                failureMessageShown = true;\r\n                let additionalInfo: string;\r\n                if (err.code === \"EPERM\") {\r\n                    additionalInfo = `EPERM: Check permissions for '${getLanguageServerFileName()}'`;\r\n                } else {\r\n                    additionalInfo = String(err);\r\n                }\r\n                vscode.window.showErrorMessage(\"Unable to start the C/C++ language server. IntelliSense features will be disabled. Error: \" + additionalInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    private createLanguageClient(allClients: ClientCollection, workspaceFolder?: vscode.WorkspaceFolder): LanguageClient {\r\n        let serverModule: string = getLanguageServerFileName();\r\n        let exeExists: boolean = fs.existsSync(serverModule);\r\n        if (!exeExists) {\r\n            throw String('Missing binary at ' + serverModule);\r\n        }\r\n        let serverName: string = this.getName(workspaceFolder);\r\n\r\n        let serverOptions: ServerOptions = {\r\n            run: { command: serverModule },\r\n            debug: { command: serverModule, args: [ serverName ] }\r\n        };\r\n        let settings: CppSettings = new CppSettings(workspaceFolder ? workspaceFolder.uri : null);\r\n        let other: OtherSettings = new OtherSettings(workspaceFolder ? workspaceFolder.uri : null);\r\n\r\n        let storagePath: string = util.extensionContext.storagePath;\r\n        if (vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 1) {\r\n            storagePath = path.join(storagePath, serverName);\r\n        }\r\n\r\n        let abTestSettings: ABTestSettings = getABTestSettings();\r\n        \r\n        let intelliSenseCacheDisabled: boolean = false;\r\n        if (os.platform() === \"darwin\") {\r\n            const releaseParts: string[] = os.release().split(\".\");\r\n            if (releaseParts.length >= 1) {\r\n                // AutoPCH doesn't work for older Mac OS's.\r\n                intelliSenseCacheDisabled = parseInt(releaseParts[0]) < 17;\r\n            }\r\n        }\r\n\r\n        let clientOptions: LanguageClientOptions = {\r\n            documentSelector: [\r\n                { scheme: 'file', language: 'cpp' },\r\n                { scheme: 'file', language: 'c' }\r\n            ],\r\n            synchronize: {\r\n                // Synchronize the setting section to the server\r\n                configurationSection: ['C_Cpp', 'files', 'search']\r\n            },\r\n            workspaceFolder: workspaceFolder,\r\n            initializationOptions: {\r\n                clang_format_path: util.resolveVariables(settings.clangFormatPath, this.AdditionalEnvironment),\r\n                clang_format_style: settings.clangFormatStyle,\r\n                clang_format_fallbackStyle: settings.clangFormatFallbackStyle,\r\n                clang_format_sortIncludes: settings.clangFormatSortIncludes,\r\n                formatting: settings.formatting,\r\n                extension_path: util.extensionContext.extensionPath,\r\n                exclude_files: other.filesExclude,\r\n                exclude_search: other.searchExclude,\r\n                storage_path: storagePath,\r\n                tab_size: other.editorTabSize,\r\n                intelliSenseEngine: settings.intelliSenseEngine,\r\n                intelliSenseEngineFallback: settings.intelliSenseEngineFallback,\r\n                intelliSenseCacheDisabled: intelliSenseCacheDisabled,\r\n                intelliSenseCachePath : settings.intelliSenseCachePath,\r\n                intelliSenseCacheSize : settings.intelliSenseCacheSize,\r\n                autocomplete: settings.autoComplete,\r\n                errorSquiggles: settings.errorSquiggles,\r\n                dimInactiveRegions: settings.dimInactiveRegions,\r\n                suggestSnippets: settings.suggestSnippets,\r\n                loggingLevel: settings.loggingLevel,\r\n                workspaceParsingPriority: settings.workspaceParsingPriority,\r\n                workspaceSymbols: settings.workspaceSymbols,\r\n                exclusionPolicy: settings.exclusionPolicy,\r\n                preferredPathSeparator: settings.preferredPathSeparator,\r\n                default: {\r\n                    systemIncludePath: settings.defaultSystemIncludePath\r\n                },\r\n                vcpkg_root: util.getVcpkgRoot(),\r\n                gotoDefIntelliSense: abTestSettings.UseGoToDefIntelliSense\r\n            },\r\n            middleware: createProtocolFilter(this, allClients),  // Only send messages directed at this client.\r\n            errorHandler: {\r\n                error: () => ErrorAction.Continue,\r\n                closed: () => {\r\n                        this.crashTimes.push(Date.now());\r\n                        if (this.crashTimes.length < 5) {\r\n                            let newClient: DefaultClient = <DefaultClient>allClients.replace(this, true);\r\n                            newClient.crashTimes = this.crashTimes;\r\n                        } else {\r\n                            let elapsed: number = this.crashTimes[this.crashTimes.length - 1] - this.crashTimes[0];\r\n                            if (elapsed <= 3 * 60 * 1000) {\r\n                                if (vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 1) {\r\n                                    vscode.window.showErrorMessage(`The language server for '${serverName}' crashed 5 times in the last 3 minutes. It will not be restarted.`);\r\n                                } else {\r\n                                    vscode.window.showErrorMessage(`The language server crashed 5 times in the last 3 minutes. It will not be restarted.`);\r\n                                }\r\n                                allClients.replace(this, false);\r\n                            } else {\r\n                                this.crashTimes.shift();\r\n                                let newClient: DefaultClient = <DefaultClient>allClients.replace(this, true);\r\n                                newClient.crashTimes = this.crashTimes;\r\n                            }\r\n                        }\r\n                        return CloseAction.DoNotRestart;\r\n                    }\r\n            }\r\n\r\n            // TODO: should I set the output channel?  Does this sort output between servers?\r\n        };\r\n\r\n        // Create the language client\r\n        return new LanguageClient(`cpptools: ${serverName}`, serverOptions, clientOptions);\r\n    }\r\n\r\n    public onDidChangeSettings(): { [key: string] : string } {\r\n        let changedSettings: { [key: string] : string } = this.settingsTracker.getChangedSettings();\r\n\r\n        if (Object.keys(changedSettings).length > 0) {\r\n            if (changedSettings[\"commentContinuationPatterns\"]) {\r\n                updateLanguageConfigurations();\r\n            }\r\n            if (changedSettings[\"clang_format_path\"]) {\r\n                let settings: CppSettings = new CppSettings(this.RootUri);\r\n                this.languageClient.sendNotification(UpdateClangFormatPathNotification, util.resolveVariables(settings.clangFormatPath, this.AdditionalEnvironment));\r\n            }\r\n            this.configuration.onDidChangeSettings();\r\n            telemetry.logLanguageServerEvent(\"CppSettingsChange\", changedSettings, null);\r\n        }\r\n\r\n        return changedSettings;\r\n    }\r\n\r\n    public onDidChangeVisibleTextEditors(editors: vscode.TextEditor[]): void {\r\n        let settings: CppSettings = new CppSettings(this.RootUri);\r\n        if (settings.dimInactiveRegions) {\r\n            //Apply text decorations to inactive regions\r\n            for (let e of editors) {\r\n                let valuePair: DecorationRangesPair = this.inactiveRegionsDecorations.get(e.document.uri.toString());\r\n                if (valuePair) {\r\n                    e.setDecorations(valuePair.decoration, valuePair.ranges); // VSCode clears the decorations when the text editor becomes invisible\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public onRegisterCustomConfigurationProvider(provider: CustomConfigurationProvider1): Thenable<void> {\r\n        let onRegistered: () => void = () => {\r\n            // version 2 providers control the browse.path. Avoid thrashing the tag parser database by pausing parsing until\r\n            // the provider has sent the correct browse.path value.\r\n            if (provider.version >= Version.v2) {\r\n                this.pauseParsing();\r\n            }\r\n        };\r\n        return this.notifyWhenReady(() => {\r\n            if (!this.RootPath) {\r\n                return; // There is no c_cpp_properties.json to edit because there is no folder open.\r\n            }\r\n            let selectedProvider: string = this.configuration.CurrentConfigurationProvider;\r\n            if (!selectedProvider) {\r\n                let ask: PersistentFolderState<boolean> = new PersistentFolderState<boolean>(\"Client.registerProvider\", true, this.RootPath);\r\n                if (ask.Value) {\r\n                    ui.showConfigureCustomProviderMessage(() => {\r\n                        let folderStr: string = (vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 1) ? \"the '\" + this.Name + \"'\" : \"this\";\r\n                        const message: string = `${provider.name} would like to configure IntelliSense for ${folderStr} folder.`;\r\n                        const allow: string = \"Allow\";\r\n                        const dontAllow: string = \"Don't Allow\";\r\n                        const askLater: string = \"Ask Me Later\";\r\n\r\n                        return vscode.window.showInformationMessage(message, allow, dontAllow, askLater).then(result => {\r\n                            switch (result) {\r\n                                case allow: {\r\n                                    this.configuration.updateCustomConfigurationProvider(provider.extensionId).then(() => {\r\n                                        onRegistered();\r\n                                        telemetry.logLanguageServerEvent(\"customConfigurationProvider\", { \"providerId\": provider.extensionId });\r\n                                    });\r\n                                    ask.Value = false;\r\n                                    return true;\r\n                                }\r\n                                case dontAllow: {\r\n                                    ask.Value = false;\r\n                                    break;\r\n                                }\r\n                                default: {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            return false;\r\n                        });\r\n                    },\r\n                    () => ask.Value = false);\r\n                }\r\n            } else if (selectedProvider === provider.extensionId) {\r\n                onRegistered();\r\n                telemetry.logLanguageServerEvent(\"customConfigurationProvider\", { \"providerId\": provider.extensionId });\r\n            } else if (selectedProvider === provider.name) {\r\n                onRegistered();\r\n                this.configuration.updateCustomConfigurationProvider(provider.extensionId); // v0 -> v1 upgrade. Update the configurationProvider in c_cpp_properties.json\r\n            }\r\n        });\r\n    }\r\n\r\n    public updateCustomConfigurations(requestingProvider?: CustomConfigurationProvider1): Thenable<void> {\r\n        return this.notifyWhenReady(() => {\r\n            if (!this.configurationProvider) {\r\n                return;\r\n            }\r\n            let currentProvider: CustomConfigurationProvider1 = getCustomConfigProviders().get(this.configurationProvider);\r\n            if (!currentProvider || (requestingProvider && requestingProvider.extensionId !== currentProvider.extensionId) || this.trackedDocuments.size === 0) {\r\n                return;\r\n            }\r\n\r\n            let tokenSource: CancellationTokenSource = new CancellationTokenSource();\r\n            let documentUris: vscode.Uri[] = [];\r\n            this.trackedDocuments.forEach(document => documentUris.push(document.uri));\r\n\r\n            let task: () => Thenable<SourceFileConfigurationItem[]> = () => {\r\n                return currentProvider.provideConfigurations(documentUris, tokenSource.token);\r\n            };\r\n            this.queueTaskWithTimeout(task, configProviderTimeout, tokenSource).then(configs => this.sendCustomConfigurations(configs), () => {});\r\n        });\r\n    }\r\n\r\n    public updateCustomBrowseConfiguration(requestingProvider?: CustomConfigurationProvider1): Thenable<void> {\r\n        return this.notifyWhenReady(() => {\r\n            if (!this.configurationProvider) {\r\n                return;\r\n            }\r\n            console.log(\"updateCustomBrowseConfiguration\");\r\n            let currentProvider: CustomConfigurationProvider1 = getCustomConfigProviders().get(this.configurationProvider);\r\n            if (!currentProvider || (requestingProvider && requestingProvider.extensionId !== currentProvider.extensionId)) {\r\n                return;\r\n            }\r\n\r\n            let tokenSource: CancellationTokenSource = new CancellationTokenSource();\r\n            let task: () => Thenable<WorkspaceBrowseConfiguration> = async () => {\r\n                if (await currentProvider.canProvideBrowseConfiguration(tokenSource.token)) {\r\n                    return currentProvider.provideBrowseConfiguration(tokenSource.token);\r\n                }\r\n                if (currentProvider.version >= Version.v2) {\r\n                    console.warn(\"failed to provide browse configuration\");\r\n                }\r\n                return Promise.reject(\"\");\r\n            };\r\n            this.queueTaskWithTimeout(task, configProviderTimeout, tokenSource).then(\r\n                async config => {\r\n                    await this.sendCustomBrowseConfiguration(config);\r\n                    this.resumeParsing();\r\n                },\r\n                () => {});\r\n        });\r\n    }\r\n\r\n    public async provideCustomConfiguration(document: vscode.TextDocument): Promise<void> {\r\n        let tokenSource: CancellationTokenSource = new CancellationTokenSource();\r\n        let providers: CustomConfigurationProviderCollection = getCustomConfigProviders();\r\n        if (providers.size === 0) {\r\n            return Promise.resolve();\r\n        }\r\n        console.log(\"provideCustomConfiguration\");\r\n        let providerId: string|undefined = await this.getCustomConfigurationProviderId();\r\n        if (!providerId) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        let providerName: string = providerId;\r\n        let configName: string = await this.getCurrentConfigName();\r\n        const notReadyMessage: string = `${providerName} is not ready`;\r\n        let provideConfigurationAsync: () => Thenable<SourceFileConfigurationItem[]> = async () => {\r\n            // The config requests that we use a provider, try to get IntelliSense configuration info from that provider.\r\n            try {\r\n                let provider: CustomConfigurationProvider1|null = providers.get(providerId);\r\n                if (provider) {\r\n                    if (!provider.isReady) {\r\n                        return Promise.reject(notReadyMessage);\r\n                    }\r\n\r\n                    providerName = provider.name;\r\n                    if (await provider.canProvideConfiguration(document.uri, tokenSource.token)) {\r\n                        return provider.provideConfigurations([document.uri], tokenSource.token);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n            }\r\n            console.warn(\"failed to provide configuration\");\r\n            return Promise.reject(\"\");\r\n        };\r\n\r\n        return this.queueTaskWithTimeout(provideConfigurationAsync, configProviderTimeout, tokenSource).then(\r\n            (configs: SourceFileConfigurationItem[]) => {\r\n                if (configs && configs.length > 0) {\r\n                    this.sendCustomConfigurations(configs, true);\r\n                }\r\n            },\r\n            (err) => {\r\n                if (err === notReadyMessage) {\r\n                    return;\r\n                }\r\n                let settings: CppSettings = new CppSettings(this.RootUri);\r\n                if (settings.configurationWarnings === \"Enabled\" && !this.isExternalHeader(document) && !vscode.debug.activeDebugSession) {\r\n                    const dismiss: string = \"Dismiss\";\r\n                    const disable: string = \"Disable Warnings\";\r\n                    let message: string = `'${providerName}' is unable to provide IntelliSense configuration information for '${document.uri.fsPath}'. ` +\r\n                        `Settings from the '${configName}' configuration will be used instead.`;\r\n                    if (err) {\r\n                        message += ` (${err})`;\r\n                    }\r\n\r\n                    vscode.window.showInformationMessage(message, dismiss, disable).then(response => {\r\n                            switch (response) {\r\n                                case disable: {\r\n                                    settings.toggleSetting(\"configurationWarnings\", \"Enabled\", \"Disabled\");\r\n                                    break;\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    private isExternalHeader(document: vscode.TextDocument): boolean {\r\n        return util.isHeader(document) && !document.uri.toString().startsWith(this.RootUri.toString());\r\n    }\r\n\r\n    private getCustomConfigurationProviderId(): Thenable<string|undefined> {\r\n        return this.queueTask(() => Promise.resolve(this.configuration.CurrentConfigurationProvider));\r\n    }\r\n\r\n    public getCurrentConfigName(): Thenable<string> {\r\n        return this.queueTask(() => Promise.resolve(this.configuration.CurrentConfiguration.name));\r\n    }\r\n\r\n    public getCompilerPath(): Thenable<string> {\r\n        return this.queueTask(() => Promise.resolve(this.configuration.CompilerPath));\r\n    }\r\n\r\n    public getKnownCompilers(): Thenable<configs.KnownCompiler[]> {\r\n        return this.queueTask(() => Promise.resolve(this.configuration.KnownCompiler));\r\n    }\r\n\r\n    /**\r\n     * Take ownership of a document that was previously serviced by another client.\r\n     * This process involves sending a textDocument/didOpen message to the server so\r\n     * that it knows about the file, as well as adding it to this client's set of\r\n     * tracked documents.\r\n     */\r\n    public takeOwnership(document: vscode.TextDocument): void {\r\n        let params: DidOpenTextDocumentParams = {\r\n            textDocument: {\r\n                uri: document.uri.toString(),\r\n                languageId: document.languageId,\r\n                version: document.version,\r\n                text: document.getText()\r\n            }\r\n        };\r\n        this.notifyWhenReady(() => this.languageClient.sendNotification(DidOpenNotification, params));\r\n        this.trackedDocuments.add(document);\r\n    }\r\n\r\n    /*************************************************************************************\r\n     * wait until the all pendingTasks are complete (e.g. language client is ready for use)\r\n     * before attempting to send messages or operate on the client.\r\n     *************************************************************************************/\r\n\r\n    public queueTask(task: () => Thenable<any>): Thenable<any> {\r\n        if (this.isSupported) {\r\n            let nextTask: () => Thenable<any> = async () => {\r\n                try {\r\n                    return await task();\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    throw err;\r\n                }\r\n            };\r\n            \r\n            if (this.pendingTask && !this.pendingTask.Done) {\r\n                // We don't want the queue to stall because of a rejected promise.\r\n                return this.pendingTask.then(nextTask, nextTask);\r\n            } else {\r\n                this.pendingTask = undefined;\r\n                return nextTask();\r\n            }\r\n        } else {\r\n            return Promise.reject(\"Unsupported client\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Queue a task that blocks all future tasks until it completes. This is currently only intended to be used\r\n     * during language client startup and for custom configuration providers.\r\n     * @param task The task that blocks all future tasks\r\n     */\r\n    private queueBlockingTask(task: () => Thenable<void>): Thenable<void> {\r\n        if (this.isSupported) {\r\n            this.pendingTask = new BlockingTask<void>(task, this.pendingTask);\r\n        } else {\r\n            return Promise.reject(\"Unsupported client\");\r\n        }\r\n    }\r\n\r\n    private queueTaskWithTimeout(task: () => Thenable<any>, ms: number, cancelToken?: CancellationTokenSource): Thenable<any> {\r\n        let timer: NodeJS.Timer;\r\n        // Create a promise that rejects in <ms> milliseconds\r\n        let timeout: () => Promise<any> = () => new Promise((resolve, reject) => {\r\n            timer = setTimeout(() => {\r\n                clearTimeout(timer);\r\n                if (cancelToken) {\r\n                    cancelToken.cancel();\r\n                }\r\n                reject(\"Timed out in \" + ms + \"ms.\");\r\n            }, ms);\r\n        });\r\n\r\n        // Returns a race between our timeout and the passed in promise\r\n        return this.queueTask(() => {\r\n            return Promise.race([task(), timeout()]).then(\r\n                (result: any) => {\r\n                    clearTimeout(timer);\r\n                    return result;\r\n                },\r\n                (error: any) => {\r\n                    clearTimeout(timer);\r\n                    throw error;\r\n                });\r\n        });\r\n    }\r\n\r\n    public requestWhenReady(request: () => Thenable<any>): Thenable<any> {\r\n        return this.queueTask(request);\r\n    }\r\n\r\n    public notifyWhenReady(notify: () => void, blockingTask?: boolean): Thenable<void> {\r\n        let task: () => Thenable<void> = () => new Promise(resolve => {\r\n            notify();\r\n            resolve();\r\n        });\r\n        if (blockingTask) {\r\n            return this.queueBlockingTask(task);\r\n        } else {\r\n            return this.queueTask(task);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * listen for notifications from the language server.\r\n     */\r\n    private registerNotifications(): void {\r\n        console.assert(this.languageClient !== undefined, \"This method must not be called until this.languageClient is set in \\\"onReady\\\"\");\r\n\r\n        this.languageClient.onNotification(ReloadWindowNotification, () => util.promptForReloadWindowDueToSettingsChange());\r\n        this.languageClient.onNotification(LogTelemetryNotification, (e) => this.logTelemetry(e));\r\n        this.languageClient.onNotification(ReportNavigationNotification, (e) => this.navigate(e));\r\n        this.languageClient.onNotification(ReportStatusNotification, (e) => this.updateStatus(e));\r\n        this.languageClient.onNotification(ReportTagParseStatusNotification, (e) => this.updateTagParseStatus(e));\r\n        this.languageClient.onNotification(InactiveRegionNotification, (e) => this.updateInactiveRegions(e));\r\n        this.languageClient.onNotification(CompileCommandsPathsNotification, (e) => this.promptCompileCommands(e));\r\n        this.setupOutputHandlers();\r\n    }\r\n\r\n    /**\r\n     * listen for file created/deleted events under the ${workspaceFolder} folder\r\n     */\r\n    private registerFileWatcher(): void {\r\n        console.assert(this.languageClient !== undefined, \"This method must not be called until this.languageClient is set in \\\"onReady\\\"\");\r\n\r\n        if (this.rootFolder) {\r\n            // WARNING: The default limit on Linux is 8k, so for big directories, this can cause file watching to fail.\r\n            this.rootPathFileWatcher = vscode.workspace.createFileSystemWatcher(\r\n                \"**/*\",\r\n                false /*ignoreCreateEvents*/,\r\n                true /*ignoreChangeEvents*/,\r\n                false /*ignoreDeleteEvents*/);\r\n\r\n            this.rootPathFileWatcher.onDidCreate((uri) => {\r\n                this.languageClient.sendNotification(FileCreatedNotification, { uri: uri.toString() });\r\n            });\r\n\r\n            this.rootPathFileWatcher.onDidDelete((uri) => {\r\n                this.languageClient.sendNotification(FileDeletedNotification, { uri: uri.toString() });\r\n            });\r\n\r\n            this.disposables.push(this.rootPathFileWatcher);\r\n        } else {\r\n            this.rootPathFileWatcher = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * listen for logging messages from the language server and print them to the Output window\r\n     */\r\n    private setupOutputHandlers(): void {\r\n        console.assert(this.languageClient !== undefined, \"This method must not be called until this.languageClient is set in \\\"onReady\\\"\");\r\n\r\n        this.languageClient.onNotification(DebugProtocolNotification, (output) => {\r\n            if (!this.debugChannel) {\r\n                this.debugChannel = vscode.window.createOutputChannel(`C/C++ Debug Protocol: ${this.Name}`);\r\n                this.disposables.push(this.debugChannel);\r\n            }\r\n            this.debugChannel.appendLine(\"\");\r\n            this.debugChannel.appendLine(\"************************************************************************************************************************\");\r\n            this.debugChannel.append(`${output}`);\r\n        });\r\n\r\n        this.languageClient.onNotification(DebugLogNotification, (output) => {\r\n            if (!this.outputChannel) {\r\n                if (vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 1) {\r\n                    this.outputChannel = vscode.window.createOutputChannel(`C/C++: ${this.Name}`);\r\n                } else {\r\n                    this.outputChannel = logger.getOutputChannel();\r\n                }\r\n                this.disposables.push(this.outputChannel);\r\n            }\r\n            this.outputChannel.appendLine(`${output}`);\r\n        });\r\n    }\r\n\r\n    /*******************************************************\r\n     * handle notifications coming from the language server\r\n     *******************************************************/\r\n\r\n    private logTelemetry(notificationBody: TelemetryPayload): void {\r\n        telemetry.logLanguageServerEvent(notificationBody.event, notificationBody.properties, notificationBody.metrics);\r\n    }\r\n\r\n    private navigate(payload: NavigationPayload): void {\r\n        let cppSettings: CppSettings = new CppSettings(this.RootUri);\r\n\r\n        // TODO: Move this code to a different place?\r\n        if (cppSettings.autoAddFileAssociations && payload.navigation.startsWith(\"<def\")) {\r\n            this.addFileAssociations(payload.navigation.substr(4));\r\n            return;\r\n        }\r\n\r\n        // If it's too big, it doesn't appear.\r\n        // The space available depends on the user's resolution and space taken up by other UI.\r\n        let currentNavigation: string = payload.navigation;\r\n        let maxLength: number = cppSettings.navigationLength;\r\n        if (currentNavigation.length > maxLength) {\r\n            currentNavigation = currentNavigation.substring(0, maxLength - 3).concat(\"...\");\r\n        }\r\n        this.model.navigationLocation.Value = currentNavigation;\r\n    }\r\n\r\n    private addFileAssociations(fileAssociations: string): void {\r\n        let settings: OtherSettings = new OtherSettings(this.RootUri);\r\n        let assocs: any = settings.filesAssociations;\r\n        let is_c: boolean = fileAssociations.startsWith(\"c\");\r\n\r\n        // Skip over rest of header: c>; or >;\r\n        fileAssociations = fileAssociations.substr(is_c ? 3 : 2);\r\n        let filesAndPaths: string[] = fileAssociations.split(\";\");\r\n        let foundNewAssociation: boolean = false;\r\n        for (let i: number = 0; i < filesAndPaths.length - 1; ++i) {\r\n            let fileAndPath: string[] = filesAndPaths[i].split(\"@\");\r\n            let file: string = fileAndPath[0];\r\n            let filePath: string = fileAndPath[1];\r\n            if ((file in assocs) || ((\"**/\" + file) in assocs)) {\r\n                continue; // File already has an association.\r\n            }\r\n            let j: number = file.lastIndexOf('.');\r\n            if (j !== -1) {\r\n                let ext: string = file.substr(j);\r\n                if (((\"*\" + ext) in assocs) || ((\"**/*\" + ext) in assocs)) {\r\n                    continue; // Extension already has an association.\r\n                }\r\n            }\r\n            let foundGlobMatch: boolean = false;\r\n            for (let assoc in assocs) {\r\n                if (minimatch(filePath, assoc)) {\r\n                    foundGlobMatch = true;\r\n                    break; // Assoc matched a glob pattern.\r\n                }\r\n            }\r\n            if (foundGlobMatch) {\r\n                continue;\r\n            }\r\n            assocs[file] = is_c ? \"c\" : \"cpp\";\r\n            foundNewAssociation = true;\r\n        }\r\n        if (foundNewAssociation) {\r\n            settings.filesAssociations = assocs;\r\n        }\r\n    }\r\n\r\n    private updateStatus(notificationBody: ReportStatusNotificationBody): void {\r\n        let message: string = notificationBody.status;\r\n        util.setProgress(util.getProgressExecutableSuccess());\r\n        let testHook: TestHook = getTestHook();\r\n        if (message.endsWith(\"Indexing...\")) {\r\n            this.model.isTagParsing.Value = true;\r\n            testHook.updateStatus(Status.TagParsingBegun);\r\n        } else if (message.endsWith(\"Updating IntelliSense...\")) {\r\n            this.model.isUpdatingIntelliSense.Value = true;\r\n            testHook.updateStatus(Status.IntelliSenseCompiling);\r\n        } else if (message.endsWith(\"IntelliSense Ready\")) {\r\n            this.model.isUpdatingIntelliSense.Value = false;\r\n            testHook.updateStatus(Status.IntelliSenseReady);\r\n        } else if (message.endsWith(\"Ready\")) { // Tag Parser Ready\r\n            this.model.isTagParsing.Value = false;\r\n            testHook.updateStatus(Status.TagParsingDone);\r\n            util.setProgress(util.getProgressParseRootSuccess());\r\n        } else if (message.endsWith(\"No Squiggles\")) {\r\n            util.setIntelliSenseProgress(util.getProgressIntelliSenseNoSquiggles());\r\n        } else if (message.endsWith(\"IntelliSense Fallback\")) {\r\n            let showIntelliSenseFallbackMessage: PersistentState<boolean> = new PersistentState<boolean>(\"CPP.showIntelliSenseFallbackMessage\", true);\r\n            if (showIntelliSenseFallbackMessage.Value) {\r\n                ui.showConfigureIncludePathMessage(() => {\r\n                    let learnMorePanel: string = \"Configuration Help\";\r\n                    let dontShowAgain: string = \"Don't Show Again\";\r\n                    let fallbackMsg: string = this.configuration.VcpkgInstalled ?\r\n                        \"Update your IntelliSense settings or use Vcpkg to install libraries to help find missing headers.\" :\r\n                        \"Configure your IntelliSense settings to help find missing headers.\";\r\n                    return vscode.window.showInformationMessage(fallbackMsg, learnMorePanel, dontShowAgain).then((value) => {\r\n                        switch (value) {\r\n                            case learnMorePanel:\r\n                                let uri: vscode.Uri = vscode.Uri.parse(`https://go.microsoft.com/fwlink/?linkid=864631`);\r\n                                vscode.commands.executeCommand('vscode.open', uri);\r\n                                vscode.commands.getCommands(true).then((commands: string[]) => {\r\n                                    if (commands.indexOf(\"workbench.action.problems.focus\") >= 0) {\r\n                                        vscode.commands.executeCommand(\"workbench.action.problems.focus\");\r\n                                    }\r\n                                });\r\n                                this.handleConfigurationEditCommand();\r\n                                break;\r\n                            case dontShowAgain:\r\n                                showIntelliSenseFallbackMessage.Value = false;\r\n                                break;\r\n                        }\r\n                        return true;\r\n                    });\r\n                },\r\n                () => showIntelliSenseFallbackMessage.Value = false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateTagParseStatus(notificationBody: ReportStatusNotificationBody): void {\r\n        this.model.tagParserStatus.Value = notificationBody.status;\r\n    }\r\n\r\n    private updateInactiveRegions(params: InactiveRegionParams): void {\r\n        let settings: CppSettings = new CppSettings(this.RootUri);\r\n\r\n        let decoration: vscode.TextEditorDecorationType = vscode.window.createTextEditorDecorationType({\r\n            opacity: settings.inactiveRegionOpacity.toString(),\r\n            backgroundColor: settings.inactiveRegionBackgroundColor,\r\n            color: settings.inactiveRegionForegroundColor,\r\n            rangeBehavior: vscode.DecorationRangeBehavior.ClosedOpen\r\n        });\r\n\r\n        // We must convert to vscode.Ranges in order to make use of the API's\r\n        let ranges: vscode.Range[] = [];\r\n        params.regions.forEach(element => {\r\n            let newRange : vscode.Range = new vscode.Range(element.startLine, 0, element.endLine, 0);\r\n            ranges.push(newRange);\r\n        });\r\n\r\n        // Find entry for cached file and act accordingly\r\n        let valuePair: DecorationRangesPair = this.inactiveRegionsDecorations.get(params.uri);\r\n        if (valuePair) {\r\n            // Disposing of and resetting the decoration will undo previously applied text decorations\r\n            valuePair.decoration.dispose();\r\n            valuePair.decoration = decoration;\r\n\r\n            // As vscode.TextEditor.setDecorations only applies to visible editors, we must cache the range for when another editor becomes visible\r\n            valuePair.ranges = ranges;\r\n        } else { // The entry does not exist. Make a new one\r\n            let toInsert: DecorationRangesPair = {\r\n                decoration: decoration,\r\n                ranges: ranges\r\n            };\r\n            this.inactiveRegionsDecorations.set(params.uri, toInsert);\r\n        }\r\n\r\n        if (settings.dimInactiveRegions) {\r\n            // Apply the decorations to all *visible* text editors\r\n            let editors: vscode.TextEditor[] = vscode.window.visibleTextEditors.filter(e => e.document.uri.toString() === params.uri);\r\n            for (let e of editors) {\r\n                e.setDecorations(decoration, ranges);\r\n            }\r\n        }\r\n    }\r\n\r\n    private promptCompileCommands(params: CompileCommandsPaths) : void {\r\n        if (this.configuration.CurrentConfiguration.compileCommands !== undefined) {\r\n            return;\r\n        }\r\n\r\n        let ask: PersistentState<boolean> = new PersistentState<boolean>(\"CPP.showCompileCommandsSelection\", true);\r\n        if (!ask.Value) {\r\n            return;\r\n        }\r\n\r\n        let compileCommandStr: string = params.paths.length > 1 ? \"a compile_commands.json file\" : params.paths[0];\r\n        let folderStr: string = (vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 1) ? \"the '\" + this.Name + \"'\" : \"this\";\r\n        const message: string = `Would you like to use ${compileCommandStr} to auto-configure IntelliSense for ${folderStr} folder?`;\r\n\r\n        ui.showConfigureCompileCommandsMessage(() => {\r\n            const yes: string = \"Yes\";\r\n            const no: string = \"No\";\r\n            const askLater: string = \"Ask Me Later\";\r\n            return vscode.window.showInformationMessage(message, yes, no, askLater).then(async (value) => {\r\n                switch (value) {\r\n                    case yes:\r\n                        if (params.paths.length > 1) {\r\n                            let index: number = await ui.showCompileCommands(params.paths);\r\n                            if (index < 0) {\r\n                                return false;\r\n                            }\r\n                            this.configuration.setCompileCommands(params.paths[index]);\r\n                        } else {\r\n                            this.configuration.setCompileCommands(params.paths[0]);\r\n                        }\r\n                        return true;\r\n                    case askLater:\r\n                        break;\r\n                    case no:\r\n                        ask.Value = false;\r\n                        break;\r\n                }\r\n                return false;\r\n            });\r\n        },\r\n        () => ask.Value = false);\r\n    }\r\n\r\n    /*********************************************\r\n     * requests to the language server\r\n     *********************************************/\r\n\r\n    public requestGoToDeclaration(): Thenable<void> {\r\n        return this.requestWhenReady(() => this.languageClient.sendRequest(GoToDeclarationRequest, null));\r\n    }\r\n\r\n    public requestSwitchHeaderSource(rootPath: string, fileName: string): Thenable<string> {\r\n        let params: SwitchHeaderSourceParams = {\r\n            rootPath: rootPath,\r\n            switchHeaderSourceFileName: fileName\r\n        };\r\n        return this.requestWhenReady(() => this.languageClient.sendRequest(SwitchHeaderSourceRequest, params));\r\n    }\r\n\r\n    public requestNavigationList(document: vscode.TextDocument): Thenable<string> {\r\n        return this.requestWhenReady(() => {\r\n            return this.languageClient.sendRequest(NavigationListRequest, this.languageClient.code2ProtocolConverter.asTextDocumentIdentifier(document));\r\n        });\r\n    }\r\n\r\n    /*********************************************\r\n     * notifications to the language server\r\n     *********************************************/\r\n\r\n    public activeDocumentChanged(document: vscode.TextDocument): void {\r\n        this.notifyWhenReady(() => {\r\n            this.languageClient.sendNotification(ActiveDocumentChangeNotification, this.languageClient.code2ProtocolConverter.asTextDocumentIdentifier(document));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * enable UI updates from this client and resume tag parsing on the server.\r\n     */\r\n    public activate(): void {\r\n        for (let key in this.model) {\r\n            if (this.model.hasOwnProperty(key)) {\r\n                this.model[key].activate();\r\n            }\r\n        }\r\n        this.resumeParsing();\r\n    }\r\n\r\n    public selectionChanged(selection: Range): void {\r\n        this.notifyWhenReady(() => this.languageClient.sendNotification(TextEditorSelectionChangeNotification, selection));\r\n    }\r\n\r\n    public resetDatabase(): void {\r\n        this.notifyWhenReady(() => this.languageClient.sendNotification(ResetDatabaseNotification));\r\n    }\r\n\r\n    /**\r\n     * disable UI updates from this client and pause tag parsing on the server.\r\n     */\r\n    public deactivate(): void {\r\n        for (let key in this.model) {\r\n            if (this.model.hasOwnProperty(key)) {\r\n                this.model[key].deactivate();\r\n            }\r\n        }\r\n        this.pauseParsing();\r\n    }\r\n\r\n    public pauseParsing(): void {\r\n        this.notifyWhenReady(() => this.languageClient.sendNotification(PauseParsingNotification));\r\n    }\r\n\r\n    public resumeParsing(): void {\r\n        this.notifyWhenReady(() => this.languageClient.sendNotification(ResumeParsingNotification));\r\n    }\r\n\r\n    private onConfigurationsChanged(configurations: configs.Configuration[]): void {\r\n        let params: FolderSettingsParams = {\r\n            configurations: configurations,\r\n            currentConfiguration: this.configuration.CurrentConfigurationIndex\r\n        };\r\n        this.notifyWhenReady(() => {\r\n            this.languageClient.sendNotification(ChangeFolderSettingsNotification, params);\r\n            this.model.activeConfigName.Value = configurations[params.currentConfiguration].name;\r\n        }).then(() => {\r\n            let newProvider: string = this.configuration.CurrentConfigurationProvider;\r\n            if (this.configurationProvider !== newProvider) {\r\n                this.configurationProvider = newProvider;\r\n                this.updateCustomConfigurations();\r\n                this.updateCustomBrowseConfiguration();\r\n            }\r\n        });\r\n    }\r\n\r\n    private onSelectedConfigurationChanged(index: number): void {\r\n        let params: FolderSelectedSettingParams = {\r\n            currentConfiguration: index\r\n        };\r\n        this.notifyWhenReady(() => {\r\n            this.languageClient.sendNotification(ChangeSelectedSettingNotification, params);\r\n            this.model.activeConfigName.Value = this.configuration.ConfigurationNames[index];\r\n        });\r\n    }\r\n\r\n    private onCompileCommandsChanged(path: string): void {\r\n        let params: FileChangedParams = {\r\n            uri: path\r\n        };\r\n        this.notifyWhenReady(() => this.languageClient.sendNotification(ChangeCompileCommandsNotification, params));\r\n    }\r\n\r\n    private isSourceFileConfigurationItem(input: any): input is SourceFileConfigurationItem {\r\n        return (input && (util.isString(input.uri) || util.isUri(input.uri)) &&\r\n            input.configuration && util.isArrayOfString(input.configuration.includePath) && util.isArrayOfString(input.configuration.defines) &&\r\n            util.isString(input.configuration.intelliSenseMode) && util.isString(input.configuration.standard) && util.isOptionalString(input.configuration.compilerPath) &&\r\n            util.isOptionalArrayOfString(input.configuration.forcedInclude));\r\n    }\r\n\r\n    private sendCustomConfigurations(configs: any, blockingTask?: boolean): void {\r\n        // configs is marked as 'any' because it is untrusted data coming from a 3rd-party. We need to sanitize it before sending it to the language server.\r\n        if (!configs || !(configs instanceof Array)) {\r\n            console.warn(\"discarding invalid SourceFileConfigurationItems[]: \" + configs);\r\n            return;\r\n        }\r\n\r\n        let settings: CppSettings = new CppSettings(this.RootUri);\r\n        let out: logger.Logger = logger.getOutputChannelLogger();\r\n        if (settings.loggingLevel === \"Debug\") {\r\n            out.appendLine(\"Custom configurations received:\");\r\n        }\r\n        let sanitized: SourceFileConfigurationItemAdapter[] = [];\r\n        configs.forEach(item => {\r\n            if (this.isSourceFileConfigurationItem(item)) {\r\n                sanitized.push({\r\n                    uri: item.uri.toString(),\r\n                    configuration: item.configuration\r\n                });\r\n                if (settings.loggingLevel === \"Debug\") {\r\n                    out.appendLine(`  uri: ${item.uri.toString()}`);\r\n                    out.appendLine(`  config: ${JSON.stringify(item.configuration, null, 2)}`);\r\n                }\r\n                if (item.configuration.includePath.some(path => path.endsWith('**'))) {\r\n                    console.warn(\"custom include paths should not use recursive includes ('**')\");\r\n                }\r\n            } else {\r\n                console.warn(\"discarding invalid SourceFileConfigurationItem: \" + item);\r\n            }\r\n        });\r\n\r\n        if (sanitized.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let params: CustomConfigurationParams = {\r\n            configurationItems: sanitized\r\n        };\r\n        this.notifyWhenReady(() => this.languageClient.sendNotification(CustomConfigurationNotification, params), blockingTask);\r\n    }\r\n\r\n    private sendCustomBrowseConfiguration(config: any): Thenable<void> {\r\n        // config is marked as 'any' because it is untrusted data coming from a 3rd-party. We need to sanitize it before sending it to the language server.\r\n        if (!config || config instanceof Array) {\r\n            console.warn(\"discarding invalid WorkspaceBrowseConfiguration: \" + config);\r\n            return Promise.resolve();\r\n        }\r\n        let sanitized: WorkspaceBrowseConfiguration = <WorkspaceBrowseConfiguration>config;\r\n        if (!util.isArrayOfString(sanitized.browsePath) || !util.isOptionalString(sanitized.compilerPath) ||\r\n            !util.isOptionalString(sanitized.standard) || !util.isOptionalString(sanitized.windowsSdkVersion)) {\r\n            console.warn(\"discarding invalid WorkspaceBrowseConfiguration: \" + config);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        let settings: CppSettings = new CppSettings(this.RootUri);\r\n        let out: logger.Logger = logger.getOutputChannelLogger();\r\n        if (settings.loggingLevel === \"Debug\") {\r\n            out.appendLine(`Custom browse configuration received: ${JSON.stringify(sanitized, null, 2)}`);\r\n        }\r\n\r\n        let params: CustomBrowseConfigurationParams = {\r\n            browseConfiguration: sanitized\r\n        };\r\n        return this.notifyWhenReady(() => this.languageClient.sendNotification(CustomBrowseConfigurationNotification, params));\r\n    }\r\n\r\n    private clearCustomConfigurations(): void {\r\n        this.notifyWhenReady(() => this.languageClient.sendNotification(ClearCustomConfigurationsNotification));\r\n    }\r\n\r\n    /*********************************************\r\n     * command handlers\r\n     *********************************************/\r\n    public handleConfigurationSelectCommand(): void {\r\n        this.notifyWhenReady(() => {\r\n            ui.showConfigurations(this.configuration.ConfigurationNames)\r\n                .then((index: number) => {\r\n                    if (index < 0) {\r\n                        return;\r\n                    }\r\n                    this.configuration.select(index);\r\n                });\r\n        });\r\n    }\r\n\r\n    public handleConfigurationProviderSelectCommand(): void {\r\n        this.notifyWhenReady(() => {\r\n            ui.showConfigurationProviders(this.configuration.CurrentConfigurationProvider)\r\n                .then(extensionId => {\r\n                    if (extensionId === undefined) {\r\n                        // operation was cancelled.\r\n                        return;\r\n                    }\r\n                    this.configuration.updateCustomConfigurationProvider(extensionId)\r\n                        .then(() => {\r\n                            if (extensionId) {\r\n                                let provider: CustomConfigurationProvider1 = getCustomConfigProviders().get(extensionId);\r\n                                this.updateCustomConfigurations(provider);\r\n                                this.updateCustomBrowseConfiguration(provider);\r\n                                telemetry.logLanguageServerEvent(\"customConfigurationProvider\", { \"providerId\": extensionId });\r\n                            } else {\r\n                                this.clearCustomConfigurations();\r\n                            }\r\n                        });\r\n                });\r\n        });\r\n    }\r\n\r\n    public handleShowParsingCommands(): void {\r\n        this.notifyWhenReady(() => {\r\n            ui.showParsingCommands()\r\n                .then((index: number) => {\r\n                    if (index === 0) {\r\n                        this.pauseParsing();\r\n                    } else if (index === 1) {\r\n                        this.resumeParsing();\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    public handleConfigurationEditCommand(): void {\r\n        this.notifyWhenReady(() => this.configuration.handleConfigurationEditCommand(vscode.window.showTextDocument));\r\n    }\r\n\r\n    public handleAddToIncludePathCommand(path: string): void {\r\n        this.notifyWhenReady(() => this.configuration.addToIncludePathCommand(path));\r\n    }\r\n\r\n    public onInterval(): void {\r\n        // These events can be discarded until the language client is ready.\r\n        // Don't queue them up with this.notifyWhenReady calls.\r\n        if (this.languageClient !== undefined && this.configuration !== undefined) {\r\n            this.languageClient.sendNotification(IntervalTimerNotification);\r\n            this.configuration.checkCppProperties();\r\n        }\r\n    }\r\n\r\n    public dispose(): Thenable<void> {\r\n        let promise: Thenable<void> = (this.languageClient) ? this.languageClient.stop() : Promise.resolve();\r\n        return promise.then(() => {\r\n            this.disposables.forEach((d) => d.dispose());\r\n            this.disposables = [];\r\n\r\n            for (let key in this.model) {\r\n                if (this.model.hasOwnProperty(key)) {\r\n                    this.model[key].dispose();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction getLanguageServerFileName(): string {\r\n    let extensionProcessName: string = 'Microsoft.VSCode.CPP.Extension';\r\n    let plat: NodeJS.Platform = process.platform;\r\n    if (plat === 'linux') {\r\n        extensionProcessName += '.linux';\r\n    } else if (plat === 'darwin') {\r\n        extensionProcessName += '.darwin';\r\n    } else if (plat === 'win32') {\r\n        extensionProcessName += '.exe';\r\n    } else {\r\n        throw \"Invalid Platform\";\r\n    }\r\n    return path.resolve(util.getExtensionFilePath(\"bin\"), extensionProcessName);\r\n}\r\n\r\nclass NullClient implements Client {\r\n    private booleanEvent = new vscode.EventEmitter<boolean>();\r\n    private stringEvent = new vscode.EventEmitter<string>();\r\n\r\n    public get TagParsingChanged(): vscode.Event<boolean> { return this.booleanEvent.event; }\r\n    public get IntelliSenseParsingChanged(): vscode.Event<boolean> { return this.booleanEvent.event; }\r\n    public get NavigationLocationChanged(): vscode.Event<string> { return this.stringEvent.event; }\r\n    public get TagParserStatusChanged(): vscode.Event<string> { return this.stringEvent.event; }\r\n    public get ActiveConfigChanged(): vscode.Event<string> { return this.stringEvent.event; }\r\n    RootPath: string = \"/\";\r\n    RootUri: vscode.Uri = vscode.Uri.file(\"/\");\r\n    Name: string = \"(empty)\";\r\n    TrackedDocuments = new Set<vscode.TextDocument>();\r\n    onDidChangeSettings(): { [key: string] : string } { return {}; }\r\n    onDidChangeVisibleTextEditors(editors: vscode.TextEditor[]): void {}\r\n    onRegisterCustomConfigurationProvider(provider: CustomConfigurationProvider1): Thenable<void> { return Promise.resolve(); }\r\n    updateCustomConfigurations(requestingProvider?: CustomConfigurationProvider1): Thenable<void> { return Promise.resolve(); }\r\n    updateCustomBrowseConfiguration(requestingProvider?: CustomConfigurationProvider1): Thenable<void> { return Promise.resolve(); }\r\n    provideCustomConfiguration(document: vscode.TextDocument): Promise<void> { return Promise.resolve(); }\r\n    getCurrentConfigName(): Thenable<string> { return Promise.resolve(\"\"); }\r\n    getCompilerPath(): Thenable<string> { return Promise.resolve(\"\"); }\r\n    getKnownCompilers(): Thenable<configs.KnownCompiler[]> { return Promise.resolve([]); }\r\n    takeOwnership(document: vscode.TextDocument): void {}\r\n    queueTask<T>(task: () => Thenable<T>): Thenable<T> { return task(); }\r\n    requestWhenReady(request: () => Thenable<any>): Thenable<any> { return; }\r\n    notifyWhenReady(notify: () => void): void {}\r\n    requestGoToDeclaration(): Thenable<void> { return Promise.resolve(); }\r\n    requestSwitchHeaderSource(rootPath: string, fileName: string): Thenable<string> { return Promise.resolve(\"\"); }\r\n    requestNavigationList(document: vscode.TextDocument): Thenable<string> { return Promise.resolve(\"\"); }\r\n    activeDocumentChanged(document: vscode.TextDocument): void {}\r\n    activate(): void {}\r\n    selectionChanged(selection: Range): void {}\r\n    resetDatabase(): void {}\r\n    deactivate(): void {}\r\n    pauseParsing(): void {}\r\n    resumeParsing(): void {}\r\n    handleConfigurationSelectCommand(): void {}\r\n    handleConfigurationProviderSelectCommand(): void {}\r\n    handleShowParsingCommands(): void {}\r\n    handleConfigurationEditCommand(): void {}\r\n    handleAddToIncludePathCommand(path: string): void {}\r\n    onInterval(): void {}\r\n    dispose(): Thenable<void> {\r\n        this.booleanEvent.dispose();\r\n        this.stringEvent.dispose();\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = options.loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, options);\n\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.options, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, options);\n\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.options.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.options.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  return cmp(version, this.operator, this.semver, this.options);\n};\n\nComparator.prototype.intersects = function(comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, options);\n\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.options.loose;\n  range = range.trim();\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (!options)\n    options = {}\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  var match = version.match(re[COERCE]);\n\n  if (match == null)\n    return null;\n\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this._emitter = undefined;\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancel();\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\r\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\nvar ResourceOperationKind;\r\n(function (ResourceOperationKind) {\r\n    /**\r\n     * Supports creating new resources.\r\n     */\r\n    ResourceOperationKind.Create = 'create';\r\n    /**\r\n     * Supports renaming existing resources.\r\n     */\r\n    ResourceOperationKind.Rename = 'rename';\r\n    /**\r\n     * Supports deleting existing resources.\r\n     */\r\n    ResourceOperationKind.Delete = 'delete';\r\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\r\nvar FailureHandlingKind;\r\n(function (FailureHandlingKind) {\r\n    /**\r\n     * Applying the workspace change is simply aborted if one of the changes provided\r\n     * fails. All operations executed before the failing operation stay executed.\r\n     */\r\n    FailureHandlingKind.Abort = 'abort';\r\n    /**\r\n     * All operations are executed transactional. That means they either all\r\n     * succeed or no changes at all are applied to the workspace.\r\n     */\r\n    FailureHandlingKind.Transactional = 'transactional';\r\n    /**\r\n     * If the workspace edit contains only textual file changes they are executed transactional.\r\n     * If resource changes (create, rename or delete file) are part of the change the failure\r\n     * handling startegy is abort.\r\n     */\r\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\r\n    /**\r\n     * The client tries to undo the operations already executed. But there is no\r\n     * guaruntee that this is succeeding.\r\n     */\r\n    FailureHandlingKind.Undo = 'undo';\r\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new vscode_jsonrpc_1.RequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new vscode_jsonrpc_1.NotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new vscode_jsonrpc_1.RequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new vscode_jsonrpc_1.NotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n//---- Configuration notification ----\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new vscode_jsonrpc_1.RequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new vscode_jsonrpc_1.NotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didOpen');\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didChange');\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didClose');\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didSave');\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/willSave');\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/willSaveWaitUntil');\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n//---- File eventing ----\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n//---- Diagnostic notification ----\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/completion');\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.type = new vscode_jsonrpc_1.RequestType('completionItem/resolve');\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n//---- Hover Support -------------------------------\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/hover');\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/signatureHelp');\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n//---- Goto Definition -------------------------------------\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/definition');\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/references');\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n//---- Document Highlight ----------------------------------\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentHighlight');\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n//---- Document Symbol Provider ---------------------------\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentSymbol');\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n//---- Workspace Symbol Provider ---------------------------\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.type = new vscode_jsonrpc_1.RequestType('workspace/symbol');\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeAction');\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeLens');\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new vscode_jsonrpc_1.RequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/formatting');\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rangeFormatting');\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/onTypeFormatting');\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rename');\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to test and perform the setup necessary for a rename.\r\n */\r\nvar PrepareRenameRequest;\r\n(function (PrepareRenameRequest) {\r\n    PrepareRenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/prepareRename');\r\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentLink');\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new vscode_jsonrpc_1.RequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new vscode_jsonrpc_1.RequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new vscode_jsonrpc_1.RequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/implementation');\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/typeDefinition');\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new vscode_jsonrpc_1.RequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new vscode_jsonrpc_1.RequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentColor');\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n/**\r\n * A request to provide folding ranges in a document. The request's\r\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\r\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar FoldingRangeRequest;\r\n(function (FoldingRangeRequest) {\r\n    FoldingRangeRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/foldingRange');\r\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst proto = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => value.toString();\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri)\r\n        };\r\n    }\r\n    function asVersionedTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri),\r\n            version: textDocument.version\r\n        };\r\n    }\r\n    function asOpenTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: {\r\n                uri: _uriConverter(textDocument.uri),\r\n                languageId: textDocument.languageId,\r\n                version: textDocument.version,\r\n                text: textDocument.getText()\r\n            }\r\n        };\r\n    }\r\n    function isTextDocumentChangeEvent(value) {\r\n        let candidate = value;\r\n        return !!candidate.document && !!candidate.contentChanges;\r\n    }\r\n    function isTextDocument(value) {\r\n        let candidate = value;\r\n        return !!candidate.uri && !!candidate.version;\r\n    }\r\n    function asChangeTextDocumentParams(arg) {\r\n        if (isTextDocument(arg)) {\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(arg.uri),\r\n                    version: arg.version\r\n                },\r\n                contentChanges: [{ text: arg.getText() }]\r\n            };\r\n            return result;\r\n        }\r\n        else if (isTextDocumentChangeEvent(arg)) {\r\n            let document = arg.document;\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(document.uri),\r\n                    version: document.version\r\n                },\r\n                contentChanges: arg.contentChanges.map((change) => {\r\n                    let range = change.range;\r\n                    return {\r\n                        range: {\r\n                            start: { line: range.start.line, character: range.start.character },\r\n                            end: { line: range.end.line, character: range.end.character }\r\n                        },\r\n                        rangeLength: change.rangeLength,\r\n                        text: change.text\r\n                    };\r\n                })\r\n            };\r\n            return result;\r\n        }\r\n        else {\r\n            throw Error('Unsupported text document change parameter');\r\n        }\r\n    }\r\n    function asCloseTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asSaveTextDocumentParams(textDocument, includeContent = false) {\r\n        let result = {\r\n            textDocument: asVersionedTextDocumentIdentifier(textDocument)\r\n        };\r\n        if (includeContent) {\r\n            result.text = textDocument.getText();\r\n        }\r\n        return result;\r\n    }\r\n    function asTextDocumentSaveReason(reason) {\r\n        switch (reason) {\r\n            case code.TextDocumentSaveReason.Manual:\r\n                return proto.TextDocumentSaveReason.Manual;\r\n            case code.TextDocumentSaveReason.AfterDelay:\r\n                return proto.TextDocumentSaveReason.AfterDelay;\r\n            case code.TextDocumentSaveReason.FocusOut:\r\n                return proto.TextDocumentSaveReason.FocusOut;\r\n        }\r\n        return proto.TextDocumentSaveReason.Manual;\r\n    }\r\n    function asWillSaveTextDocumentParams(event) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(event.document),\r\n            reason: asTextDocumentSaveReason(event.reason)\r\n        };\r\n    }\r\n    function asTextDocumentPositionParams(textDocument, position) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position)\r\n        };\r\n    }\r\n    function asTriggerKind(triggerKind) {\r\n        switch (triggerKind) {\r\n            case code.CompletionTriggerKind.TriggerCharacter:\r\n                return proto.CompletionTriggerKind.TriggerCharacter;\r\n            case code.CompletionTriggerKind.TriggerForIncompleteCompletions:\r\n                return proto.CompletionTriggerKind.TriggerForIncompleteCompletions;\r\n            default:\r\n                return proto.CompletionTriggerKind.Invoked;\r\n        }\r\n    }\r\n    function asCompletionParams(textDocument, position, context) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: {\r\n                triggerKind: asTriggerKind(context.triggerKind),\r\n                triggerCharacter: context.triggerCharacter\r\n            }\r\n        };\r\n    }\r\n    function asWorkerPosition(position) {\r\n        return { line: position.line, character: position.character };\r\n    }\r\n    function asPosition(value) {\r\n        if (value === void 0) {\r\n            return undefined;\r\n        }\r\n        else if (value === null) {\r\n            return null;\r\n        }\r\n        return { line: value.line, character: value.character };\r\n    }\r\n    function asRange(value) {\r\n        if (value === void 0 || value === null) {\r\n            return value;\r\n        }\r\n        return { start: asPosition(value.start), end: asPosition(value.end) };\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        switch (value) {\r\n            case code.DiagnosticSeverity.Error:\r\n                return proto.DiagnosticSeverity.Error;\r\n            case code.DiagnosticSeverity.Warning:\r\n                return proto.DiagnosticSeverity.Warning;\r\n            case code.DiagnosticSeverity.Information:\r\n                return proto.DiagnosticSeverity.Information;\r\n            case code.DiagnosticSeverity.Hint:\r\n                return proto.DiagnosticSeverity.Hint;\r\n        }\r\n    }\r\n    function asDiagnostic(item) {\r\n        let result = proto.Diagnostic.create(asRange(item.range), item.message);\r\n        if (Is.number(item.severity)) {\r\n            result.severity = asDiagnosticSeverity(item.severity);\r\n        }\r\n        if (Is.number(item.code) || Is.string(item.code)) {\r\n            result.code = item.code;\r\n        }\r\n        if (item.source) {\r\n            result.source = item.source;\r\n        }\r\n        return result;\r\n    }\r\n    function asDiagnostics(items) {\r\n        if (items === void 0 || items === null) {\r\n            return items;\r\n        }\r\n        return items.map(asDiagnostic);\r\n    }\r\n    function asDocumentation(format, documentation) {\r\n        switch (format) {\r\n            case '$string':\r\n                return documentation;\r\n            case proto.MarkupKind.PlainText:\r\n                return { kind: format, value: documentation };\r\n            case proto.MarkupKind.Markdown:\r\n                return { kind: format, value: documentation.value };\r\n            default:\r\n                return `Unsupported Markup content received. Kind is: ${format}`;\r\n        }\r\n    }\r\n    function asCompletionItemKind(value, original) {\r\n        if (original !== void 0) {\r\n            return original;\r\n        }\r\n        return value + 1;\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = { label: item.label };\r\n        let protocolItem = item instanceof protocolCompletionItem_1.default ? item : undefined;\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        // We only send items back we created. So this can't be something else than\r\n        // a string right now.\r\n        if (item.documentation) {\r\n            if (!protocolItem || protocolItem.documentationFormat === '$string') {\r\n                result.documentation = item.documentation;\r\n            }\r\n            else {\r\n                result.documentation = asDocumentation(protocolItem.documentationFormat, item.documentation);\r\n            }\r\n        }\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        fillPrimaryInsertText(result, item);\r\n        if (Is.number(item.kind)) {\r\n            result.kind = asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (item.commitCharacters) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.preselect === true || item.preselect === false) {\r\n            result.preselect = item.preselect;\r\n        }\r\n        if (protocolItem) {\r\n            if (protocolItem.data !== void 0) {\r\n                result.data = protocolItem.data;\r\n            }\r\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\r\n                result.deprecated = protocolItem.deprecated;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function fillPrimaryInsertText(target, source) {\r\n        let format = proto.InsertTextFormat.PlainText;\r\n        let text;\r\n        let range = undefined;\r\n        if (source.textEdit) {\r\n            text = source.textEdit.newText;\r\n            range = asRange(source.textEdit.range);\r\n        }\r\n        else if (source.insertText instanceof code.SnippetString) {\r\n            format = proto.InsertTextFormat.Snippet;\r\n            text = source.insertText.value;\r\n        }\r\n        else {\r\n            text = source.insertText;\r\n        }\r\n        if (source.range) {\r\n            range = asRange(source.range);\r\n        }\r\n        target.insertTextFormat = format;\r\n        if (source.fromEdit && text && range) {\r\n            target.textEdit = { newText: text, range: range };\r\n        }\r\n        else {\r\n            target.insertText = text;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        return { range: asRange(edit.range), newText: edit.newText };\r\n    }\r\n    function asTextEdits(edits) {\r\n        if (edits === void 0 || edits === null) {\r\n            return edits;\r\n        }\r\n        return edits.map(asTextEdit);\r\n    }\r\n    function asReferenceParams(textDocument, position, options) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: { includeDeclaration: options.includeDeclaration }\r\n        };\r\n    }\r\n    function asCodeActionContext(context) {\r\n        if (context === void 0 || context === null) {\r\n            return context;\r\n        }\r\n        return proto.CodeActionContext.create(asDiagnostics(context.diagnostics), Is.string(context.only) ? [context.only] : undefined);\r\n    }\r\n    function asCommand(item) {\r\n        let result = proto.Command.create(item.title, item.command);\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLens(item) {\r\n        let result = proto.CodeLens.create(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item instanceof protocolCodeLens_1.default) {\r\n            if (item.data) {\r\n                result.data = item.data;\r\n            }\r\n            ;\r\n        }\r\n        return result;\r\n    }\r\n    function asFormattingOptions(item) {\r\n        return { tabSize: item.tabSize, insertSpaces: item.insertSpaces };\r\n    }\r\n    function asDocumentSymbolParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asCodeLensParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asDocumentLink(item) {\r\n        let result = proto.DocumentLink.create(asRange(item.range));\r\n        if (item.target) {\r\n            result.target = asUri(item.target);\r\n        }\r\n        let protocolItem = item instanceof protocolDocumentLink_1.default ? item : undefined;\r\n        if (protocolItem && protocolItem.data) {\r\n            result.data = protocolItem.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLinkParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    return {\r\n        asUri,\r\n        asTextDocumentIdentifier,\r\n        asOpenTextDocumentParams,\r\n        asChangeTextDocumentParams,\r\n        asCloseTextDocumentParams,\r\n        asSaveTextDocumentParams,\r\n        asWillSaveTextDocumentParams,\r\n        asTextDocumentPositionParams,\r\n        asCompletionParams,\r\n        asWorkerPosition,\r\n        asRange,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asDiagnostic,\r\n        asDiagnostics,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asReferenceParams,\r\n        asCodeActionContext,\r\n        asCommand,\r\n        asCodeLens,\r\n        asFormattingOptions,\r\n        asDocumentSymbolParams,\r\n        asCodeLensParams,\r\n        asDocumentLink,\r\n        asDocumentLinkParams\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst ls = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\r\nvar CodeBlock;\r\n(function (CodeBlock) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\r\n    }\r\n    CodeBlock.is = is;\r\n})(CodeBlock || (CodeBlock = {}));\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => code.Uri.parse(value);\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asDiagnostics(diagnostics) {\r\n        return diagnostics.map(asDiagnostic);\r\n    }\r\n    function asDiagnostic(diagnostic) {\r\n        let result = new code.Diagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity));\r\n        if (Is.number(diagnostic.code) || Is.string(diagnostic.code)) {\r\n            result.code = diagnostic.code;\r\n        }\r\n        if (diagnostic.source) {\r\n            result.source = diagnostic.source;\r\n        }\r\n        if (diagnostic.relatedInformation) {\r\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\r\n        }\r\n        return result;\r\n    }\r\n    function asRelatedInformation(relatedInformation) {\r\n        return relatedInformation.map(asDiagnosticRelatedInformation);\r\n    }\r\n    function asDiagnosticRelatedInformation(information) {\r\n        return new code.DiagnosticRelatedInformation(asLocation(information.location), information.message);\r\n    }\r\n    function asPosition(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Position(value.line, value.character);\r\n    }\r\n    function asRange(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Range(asPosition(value.start), asPosition(value.end));\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        if (value === void 0 || value === null) {\r\n            return code.DiagnosticSeverity.Error;\r\n        }\r\n        switch (value) {\r\n            case ls.DiagnosticSeverity.Error:\r\n                return code.DiagnosticSeverity.Error;\r\n            case ls.DiagnosticSeverity.Warning:\r\n                return code.DiagnosticSeverity.Warning;\r\n            case ls.DiagnosticSeverity.Information:\r\n                return code.DiagnosticSeverity.Information;\r\n            case ls.DiagnosticSeverity.Hint:\r\n                return code.DiagnosticSeverity.Hint;\r\n        }\r\n        return code.DiagnosticSeverity.Error;\r\n    }\r\n    function asHoverContent(value) {\r\n        if (Is.string(value)) {\r\n            return new code.MarkdownString(value);\r\n        }\r\n        else if (CodeBlock.is(value)) {\r\n            let result = new code.MarkdownString();\r\n            return result.appendCodeblock(value.value, value.language);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            let result = [];\r\n            for (let element of value) {\r\n                let item = new code.MarkdownString();\r\n                if (CodeBlock.is(element)) {\r\n                    item.appendCodeblock(element.value, element.language);\r\n                }\r\n                else {\r\n                    item.appendMarkdown(element);\r\n                }\r\n                result.push(item);\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            let result;\r\n            switch (value.kind) {\r\n                case ls.MarkupKind.Markdown:\r\n                    return new code.MarkdownString(value.value);\r\n                case ls.MarkupKind.PlainText:\r\n                    result = new code.MarkdownString();\r\n                    result.appendText(value.value);\r\n                    return result;\r\n                default:\r\n                    result = new code.MarkdownString();\r\n                    result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\r\n                    return result;\r\n            }\r\n        }\r\n    }\r\n    function asDocumentation(value) {\r\n        if (Is.string(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            switch (value.kind) {\r\n                case ls.MarkupKind.Markdown:\r\n                    return new code.MarkdownString(value.value);\r\n                case ls.MarkupKind.PlainText:\r\n                    return value.value;\r\n                default:\r\n                    return `Unsupported Markup content received. Kind is: ${value.kind}`;\r\n            }\r\n        }\r\n    }\r\n    function asHover(hover) {\r\n        if (!hover) {\r\n            return undefined;\r\n        }\r\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\r\n    }\r\n    function asCompletionResult(result) {\r\n        if (!result) {\r\n            return undefined;\r\n        }\r\n        if (Array.isArray(result)) {\r\n            let items = result;\r\n            return items.map(asCompletionItem);\r\n        }\r\n        let list = result;\r\n        return new code.CompletionList(list.items.map(asCompletionItem), list.isIncomplete);\r\n    }\r\n    function asCompletionItemKind(value) {\r\n        // Protocol item kind is 1 based, codes item kind is zero based.\r\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\r\n            return [value - 1, undefined];\r\n        }\r\n        ;\r\n        return [code.CompletionItemKind.Text, value];\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = new protocolCompletionItem_1.default(item.label);\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\r\n        }\r\n        ;\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        let insertText = asCompletionInsertText(item);\r\n        if (insertText) {\r\n            result.insertText = insertText.text;\r\n            result.range = insertText.range;\r\n            result.fromEdit = insertText.fromEdit;\r\n        }\r\n        if (Is.number(item.kind)) {\r\n            let [itemKind, original] = asCompletionItemKind(item.kind);\r\n            result.kind = itemKind;\r\n            if (original) {\r\n                result.originalItemKind = original;\r\n            }\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (Is.stringArray(item.commitCharacters)) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.deprecated === true || item.deprecated === false) {\r\n            result.deprecated = item.deprecated;\r\n        }\r\n        if (item.preselect === true || item.preselect === false) {\r\n            result.preselect = item.preselect;\r\n        }\r\n        if (item.data !== void 0) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCompletionInsertText(item) {\r\n        if (item.textEdit) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.textEdit.newText), range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n            else {\r\n                return { text: item.textEdit.newText, range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n        }\r\n        else if (item.insertText) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\r\n            }\r\n            else {\r\n                return { text: item.insertText, fromEdit: false };\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        if (!edit) {\r\n            return undefined;\r\n        }\r\n        return new code.TextEdit(asRange(edit.range), edit.newText);\r\n    }\r\n    function asTextEdits(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asTextEdit);\r\n    }\r\n    function asSignatureHelp(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.SignatureHelp();\r\n        if (Is.number(item.activeSignature)) {\r\n            result.activeSignature = item.activeSignature;\r\n        }\r\n        else {\r\n            // activeSignature was optional in the past\r\n            result.activeSignature = 0;\r\n        }\r\n        if (Is.number(item.activeParameter)) {\r\n            result.activeParameter = item.activeParameter;\r\n        }\r\n        else {\r\n            // activeParameter was optional in the past\r\n            result.activeParameter = 0;\r\n        }\r\n        if (item.signatures) {\r\n            result.signatures = asSignatureInformations(item.signatures);\r\n        }\r\n        return result;\r\n    }\r\n    function asSignatureInformations(items) {\r\n        return items.map(asSignatureInformation);\r\n    }\r\n    function asSignatureInformation(item) {\r\n        let result = new code.SignatureInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n        }\r\n        if (item.parameters) {\r\n            result.parameters = asParameterInformations(item.parameters);\r\n        }\r\n        return result;\r\n    }\r\n    function asParameterInformations(item) {\r\n        return item.map(asParameterInformation);\r\n    }\r\n    function asParameterInformation(item) {\r\n        let result = new code.ParameterInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n        }\r\n        ;\r\n        return result;\r\n    }\r\n    function asDefinitionResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        if (Is.array(item)) {\r\n            return item.map((location) => asLocation(location));\r\n        }\r\n        else {\r\n            return asLocation(item);\r\n        }\r\n    }\r\n    function asLocation(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return new code.Location(_uriConverter(item.uri), asRange(item.range));\r\n    }\r\n    function asReferences(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(location => asLocation(location));\r\n    }\r\n    function asDocumentHighlights(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(asDocumentHighlight);\r\n    }\r\n    function asDocumentHighlight(item) {\r\n        let result = new code.DocumentHighlight(asRange(item.range));\r\n        if (Is.number(item.kind)) {\r\n            result.kind = asDocumentHighlightKind(item.kind);\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentHighlightKind(item) {\r\n        switch (item) {\r\n            case ls.DocumentHighlightKind.Text:\r\n                return code.DocumentHighlightKind.Text;\r\n            case ls.DocumentHighlightKind.Read:\r\n                return code.DocumentHighlightKind.Read;\r\n            case ls.DocumentHighlightKind.Write:\r\n                return code.DocumentHighlightKind.Write;\r\n        }\r\n        return code.DocumentHighlightKind.Text;\r\n    }\r\n    function asSymbolInformations(values, uri) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(information => asSymbolInformation(information, uri));\r\n    }\r\n    function asSymbolKind(item) {\r\n        if (item <= ls.SymbolKind.TypeParameter) {\r\n            // Symbol kind is one based in the protocol and zero based in code.\r\n            return item - 1;\r\n        }\r\n        return code.SymbolKind.Property;\r\n    }\r\n    function asSymbolInformation(item, uri) {\r\n        // Symbol kind is one based in the protocol and zero based in code.\r\n        let result = new code.SymbolInformation(item.name, asSymbolKind(item.kind), asRange(item.location.range), item.location.uri ? _uriConverter(item.location.uri) : uri);\r\n        if (item.containerName) {\r\n            result.containerName = item.containerName;\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentSymbols(values) {\r\n        if (values === void 0 || values === null) {\r\n            return undefined;\r\n        }\r\n        return values.map(asDocumentSymbol);\r\n    }\r\n    function asDocumentSymbol(value) {\r\n        let result = new code.DocumentSymbol(value.name, value.detail || '', asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\r\n        if (value.children !== void 0 && value.children.length > 0) {\r\n            let children = [];\r\n            for (let child of value.children) {\r\n                children.push(asDocumentSymbol(child));\r\n            }\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommand(item) {\r\n        let result = { title: item.title, command: item.command };\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommands(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asCommand);\r\n    }\r\n    const kindMapping = new Map();\r\n    kindMapping.set('', code.CodeActionKind.Empty);\r\n    kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\r\n    kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\r\n    kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\r\n    kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\r\n    kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\r\n    kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\r\n    kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\r\n    function asCodeActionKind(item) {\r\n        if (item === void 0 || item === null) {\r\n            return undefined;\r\n        }\r\n        let result = kindMapping.get(item);\r\n        if (result) {\r\n            return result;\r\n        }\r\n        let parts = item.split('.');\r\n        result = code.CodeActionKind.Empty;\r\n        for (let part of parts) {\r\n            result = result.append(part);\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeActionKinds(items) {\r\n        if (items === void 0 || items === null) {\r\n            return undefined;\r\n        }\r\n        return items.map(kind => asCodeActionKind(kind));\r\n    }\r\n    function asCodeAction(item) {\r\n        if (item === void 0 || item === null) {\r\n            return undefined;\r\n        }\r\n        let result = new code.CodeAction(item.title);\r\n        if (item.kind !== void 0) {\r\n            result.kind = asCodeActionKind(item.kind);\r\n        }\r\n        if (item.diagnostics) {\r\n            result.diagnostics = asDiagnostics(item.diagnostics);\r\n        }\r\n        if (item.edit) {\r\n            result.edit = asWorkspaceEdit(item.edit);\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLens(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new protocolCodeLens_1.default(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLenses(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map((codeLens) => asCodeLens(codeLens));\r\n    }\r\n    function asWorkspaceEdit(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.WorkspaceEdit();\r\n        if (item.documentChanges) {\r\n            item.documentChanges.forEach(change => {\r\n                if (ls.CreateFile.is(change)) {\r\n                    result.createFile(_uriConverter(change.uri), change.options);\r\n                }\r\n                else if (ls.RenameFile.is(change)) {\r\n                    result.renameFile(_uriConverter(change.oldUri), _uriConverter(change.newUri), change.options);\r\n                }\r\n                else if (ls.DeleteFile.is(change)) {\r\n                    result.deleteFile(_uriConverter(change.uri), change.options);\r\n                }\r\n                else if (ls.TextDocumentEdit.is(change)) {\r\n                    result.set(_uriConverter(change.textDocument.uri), asTextEdits(change.edits));\r\n                }\r\n                else {\r\n                    console.error(`Unknown workspace edit change received:\\n${JSON.stringify(change, undefined, 4)}`);\r\n                }\r\n            });\r\n        }\r\n        else if (item.changes) {\r\n            Object.keys(item.changes).forEach(key => {\r\n                result.set(_uriConverter(key), asTextEdits(item.changes[key]));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLink(item) {\r\n        let range = asRange(item.range);\r\n        let target = item.target ? asUri(item.target) : undefined;\r\n        // target must be optional in DocumentLink\r\n        let link = new protocolDocumentLink_1.default(range, target);\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            link.data = item.data;\r\n        }\r\n        return link;\r\n    }\r\n    function asDocumentLinks(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asDocumentLink);\r\n    }\r\n    function asColor(color) {\r\n        return new code.Color(color.red, color.green, color.blue, color.alpha);\r\n    }\r\n    function asColorInformation(ci) {\r\n        return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\r\n    }\r\n    function asColorInformations(colorInformation) {\r\n        if (Array.isArray(colorInformation)) {\r\n            return colorInformation.map(asColorInformation);\r\n        }\r\n        return undefined;\r\n    }\r\n    function asColorPresentation(cp) {\r\n        let presentation = new code.ColorPresentation(cp.label);\r\n        presentation.additionalTextEdits = asTextEdits(cp.additionalTextEdits);\r\n        if (cp.textEdit) {\r\n            presentation.textEdit = asTextEdit(cp.textEdit);\r\n        }\r\n        return presentation;\r\n    }\r\n    function asColorPresentations(colorPresentations) {\r\n        if (Array.isArray(colorPresentations)) {\r\n            return colorPresentations.map(asColorPresentation);\r\n        }\r\n        return undefined;\r\n    }\r\n    function asFoldingRangeKind(kind) {\r\n        if (kind) {\r\n            switch (kind) {\r\n                case ls.FoldingRangeKind.Comment:\r\n                    return code.FoldingRangeKind.Comment;\r\n                case ls.FoldingRangeKind.Imports:\r\n                    return code.FoldingRangeKind.Imports;\r\n                case ls.FoldingRangeKind.Region:\r\n                    return code.FoldingRangeKind.Region;\r\n            }\r\n        }\r\n        return void 0;\r\n    }\r\n    function asFoldingRange(r) {\r\n        return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\r\n    }\r\n    function asFoldingRanges(foldingRanges) {\r\n        if (Array.isArray(foldingRanges)) {\r\n            return foldingRanges.map(asFoldingRange);\r\n        }\r\n        return void 0;\r\n    }\r\n    return {\r\n        asUri,\r\n        asDiagnostics,\r\n        asDiagnostic,\r\n        asRange,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asHover,\r\n        asCompletionResult,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asTextEdits,\r\n        asSignatureHelp,\r\n        asSignatureInformations,\r\n        asSignatureInformation,\r\n        asParameterInformations,\r\n        asParameterInformation,\r\n        asDefinitionResult,\r\n        asLocation,\r\n        asReferences,\r\n        asDocumentHighlights,\r\n        asDocumentHighlight,\r\n        asDocumentHighlightKind,\r\n        asSymbolInformations,\r\n        asSymbolInformation,\r\n        asDocumentSymbols,\r\n        asDocumentSymbol,\r\n        asCommand,\r\n        asCommands,\r\n        asCodeAction,\r\n        asCodeActionKind,\r\n        asCodeActionKinds,\r\n        asCodeLens,\r\n        asCodeLenses,\r\n        asWorkspaceEdit,\r\n        asDocumentLink,\r\n        asDocumentLinks,\r\n        asFoldingRangeKind,\r\n        asFoldingRange,\r\n        asFoldingRanges,\r\n        asColor,\r\n        asColorInformation,\r\n        asColorInformations,\r\n        asColorPresentation,\r\n        asColorPresentations\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Delayer {\r\n    constructor(defaultDelay) {\r\n        this.defaultDelay = defaultDelay;\r\n        this.timeout = undefined;\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n    }\r\n    trigger(task, delay = this.defaultDelay) {\r\n        this.task = task;\r\n        if (delay >= 0) {\r\n            this.cancelTimeout();\r\n        }\r\n        if (!this.completionPromise) {\r\n            this.completionPromise = new Promise((resolve) => {\r\n                this.onSuccess = resolve;\r\n            }).then(() => {\r\n                this.completionPromise = undefined;\r\n                this.onSuccess = undefined;\r\n                var result = this.task();\r\n                this.task = undefined;\r\n                return result;\r\n            });\r\n        }\r\n        if (delay >= 0 || this.timeout === void 0) {\r\n            this.timeout = setTimeout(() => {\r\n                this.timeout = undefined;\r\n                this.onSuccess(undefined);\r\n            }, delay >= 0 ? delay : this.defaultDelay);\r\n        }\r\n        return this.completionPromise;\r\n    }\r\n    forceDelivery() {\r\n        if (!this.completionPromise) {\r\n            return undefined;\r\n        }\r\n        this.cancelTimeout();\r\n        let result = this.task();\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n        return result;\r\n    }\r\n    isTriggered() {\r\n        return this.timeout !== void 0;\r\n    }\r\n    cancel() {\r\n        this.cancelTimeout();\r\n        this.completionPromise = undefined;\r\n    }\r\n    cancelTimeout() {\r\n        if (this.timeout !== void 0) {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Delayer = Delayer;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass ColorProviderFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentColorRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'colorProvider').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.colorProvider) {\r\n            return;\r\n        }\r\n        const implCapabilities = capabilities.colorProvider;\r\n        const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n        const selector = implCapabilities.documentSelector || documentSelector;\r\n        if (selector) {\r\n            this.register(this.messages, {\r\n                id,\r\n                registerOptions: Object.assign({}, { documentSelector: selector })\r\n            });\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideColorPresentations = (color, context, token) => {\r\n            const requestParams = {\r\n                color,\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(context.document),\r\n                range: client.code2ProtocolConverter.asRange(context.range)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, requestParams, token).then(this.asColorPresentations.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let provideDocumentColors = (document, token) => {\r\n            const requestParams = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, requestParams, token).then(this.asColorInformations.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerColorProvider(options.documentSelector, {\r\n            provideColorPresentations: (color, context, token) => {\r\n                return middleware.provideColorPresentations\r\n                    ? middleware.provideColorPresentations(color, context, token, provideColorPresentations)\r\n                    : provideColorPresentations(color, context, token);\r\n            },\r\n            provideDocumentColors: (document, token) => {\r\n                return middleware.provideDocumentColors\r\n                    ? middleware.provideDocumentColors(document, token, provideDocumentColors)\r\n                    : provideDocumentColors(document, token);\r\n            }\r\n        });\r\n    }\r\n    asColor(color) {\r\n        return new vscode_1.Color(color.red, color.green, color.blue, color.alpha);\r\n    }\r\n    asColorInformations(colorInformation) {\r\n        if (Array.isArray(colorInformation)) {\r\n            return colorInformation.map(ci => {\r\n                return new vscode_1.ColorInformation(this._client.protocol2CodeConverter.asRange(ci.range), this.asColor(ci.color));\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n    asColorPresentations(colorPresentations) {\r\n        if (Array.isArray(colorPresentations)) {\r\n            return colorPresentations.map(cp => {\r\n                let presentation = new vscode_1.ColorPresentation(cp.label);\r\n                presentation.additionalTextEdits = this._client.protocol2CodeConverter.asTextEdits(cp.additionalTextEdits);\r\n                presentation.textEdit = this._client.protocol2CodeConverter.asTextEdit(cp.textEdit);\r\n                return presentation;\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.ColorProviderFeature = ColorProviderFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        capabilities.workspace.configuration = true;\r\n    }\r\n    initialize() {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, (params, token) => {\r\n            let configuration = (params) => {\r\n                let result = [];\r\n                for (let item of params.items) {\r\n                    let resource = item.scopeUri !== void 0 && item.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(item.scopeUri) : undefined;\r\n                    result.push(this.getConfiguration(resource, item.section !== null ? item.section : undefined));\r\n                }\r\n                return result;\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            return middleware && middleware.configuration\r\n                ? middleware.configuration(params, token, configuration)\r\n                : configuration(params, token);\r\n        });\r\n    }\r\n    getConfiguration(resource, section) {\r\n        let result = null;\r\n        if (section) {\r\n            let index = section.lastIndexOf('.');\r\n            if (index === -1) {\r\n                result = vscode_1.workspace.getConfiguration(undefined, resource).get(section);\r\n            }\r\n            else {\r\n                let config = vscode_1.workspace.getConfiguration(section.substr(0, index));\r\n                if (config) {\r\n                    result = config.get(section.substr(index + 1));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let config = vscode_1.workspace.getConfiguration(undefined, resource);\r\n            result = {};\r\n            for (let key of Object.keys(config)) {\r\n                if (config.has(key)) {\r\n                    result[key] = config.get(key);\r\n                }\r\n            }\r\n        }\r\n        if (!result) {\r\n            return null;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.ConfigurationFeature = ConfigurationFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass ImplementationFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ImplementationRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'implementation').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.implementationProvider) {\r\n            return;\r\n        }\r\n        if (capabilities.implementationProvider === true) {\r\n            if (!documentSelector) {\r\n                return;\r\n            }\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n            });\r\n        }\r\n        else {\r\n            const implCapabilities = capabilities.implementationProvider;\r\n            const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n            const selector = implCapabilities.documentSelector || documentSelector;\r\n            if (selector) {\r\n                this.register(this.messages, {\r\n                    id,\r\n                    registerOptions: Object.assign({}, { documentSelector: selector })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideImplementation = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerImplementationProvider(options.documentSelector, {\r\n            provideImplementation: (document, position, token) => {\r\n                return middleware.provideImplementation\r\n                    ? middleware.provideImplementation(document, position, token, provideImplementation)\r\n                    : provideImplementation(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.ImplementationFeature = ImplementationFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass TypeDefinitionFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.TypeDefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'typeDefinition').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.typeDefinitionProvider) {\r\n            return;\r\n        }\r\n        if (capabilities.typeDefinitionProvider === true) {\r\n            if (!documentSelector) {\r\n                return;\r\n            }\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n            });\r\n        }\r\n        else {\r\n            const implCapabilities = capabilities.typeDefinitionProvider;\r\n            const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n            const selector = implCapabilities.documentSelector || documentSelector;\r\n            if (selector) {\r\n                this.register(this.messages, {\r\n                    id,\r\n                    registerOptions: Object.assign({}, { documentSelector: selector })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideTypeDefinition = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerTypeDefinitionProvider(options.documentSelector, {\r\n            provideTypeDefinition: (document, position, token) => {\r\n                return middleware.provideTypeDefinition\r\n                    ? middleware.provideTypeDefinition(document, position, token, provideTypeDefinition)\r\n                    : provideTypeDefinition(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.TypeDefinitionFeature = TypeDefinitionFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nfunction access(target, key) {\r\n    if (target === void 0) {\r\n        return undefined;\r\n    }\r\n    return target[key];\r\n}\r\nclass WorkspaceFoldersFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type;\r\n    }\r\n    fillInitializeParams(params) {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (folders === void 0) {\r\n            params.workspaceFolders = null;\r\n        }\r\n        else {\r\n            params.workspaceFolders = folders.map(folder => this.asProtocol(folder));\r\n        }\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        capabilities.workspace.workspaceFolders = true;\r\n    }\r\n    initialize(capabilities) {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type, (token) => {\r\n            let workspaceFolders = () => {\r\n                let folders = vscode_1.workspace.workspaceFolders;\r\n                if (folders === void 0) {\r\n                    return null;\r\n                }\r\n                let result = folders.map((folder) => {\r\n                    return this.asProtocol(folder);\r\n                });\r\n                return result;\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            return middleware && middleware.workspaceFolders\r\n                ? middleware.workspaceFolders(token, workspaceFolders)\r\n                : workspaceFolders(token);\r\n        });\r\n        let value = access(access(access(capabilities, 'workspace'), 'workspaceFolders'), 'changeNotifications');\r\n        let id;\r\n        if (typeof value === 'string') {\r\n            id = value;\r\n        }\r\n        else if (value === true) {\r\n            id = UUID.generateUuid();\r\n        }\r\n        if (id) {\r\n            this.register(this.messages, {\r\n                id: id,\r\n                registerOptions: undefined\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        let id = data.id;\r\n        let client = this._client;\r\n        let disposable = vscode_1.workspace.onDidChangeWorkspaceFolders((event) => {\r\n            let didChangeWorkspaceFolders = (event) => {\r\n                let params = {\r\n                    event: {\r\n                        added: event.added.map(folder => this.asProtocol(folder)),\r\n                        removed: event.removed.map(folder => this.asProtocol(folder))\r\n                    }\r\n                };\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, params);\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            middleware && middleware.didChangeWorkspaceFolders\r\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\r\n                : didChangeWorkspaceFolders(event);\r\n        });\r\n        this._listeners.set(id, disposable);\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable === void 0) {\r\n            return;\r\n        }\r\n        this._listeners.delete(id);\r\n        disposable.dispose();\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    asProtocol(workspaceFolder) {\r\n        if (workspaceFolder === void 0) {\r\n            return null;\r\n        }\r\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\r\n    }\r\n}\r\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass FoldingRangeFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.FoldingRangeRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'foldingRange');\r\n        capability.dynamicRegistration = true;\r\n        capability.rangeLimit = 5000;\r\n        capability.lineFoldingOnly = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.foldingRangeProvider) {\r\n            return;\r\n        }\r\n        const implCapabilities = capabilities.foldingRangeProvider;\r\n        const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n        const selector = implCapabilities.documentSelector || documentSelector;\r\n        if (selector) {\r\n            this.register(this.messages, {\r\n                id,\r\n                registerOptions: Object.assign({}, { documentSelector: selector })\r\n            });\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideFoldingRanges = (document, _, token) => {\r\n            const requestParams = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, requestParams, token).then(this.asFoldingRanges.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerFoldingRangeProvider(options.documentSelector, {\r\n            provideFoldingRanges(document, context, token) {\r\n                return middleware.provideFoldingRanges\r\n                    ? middleware.provideFoldingRanges(document, context, token, provideFoldingRanges)\r\n                    : provideFoldingRanges(document, context, token);\r\n            }\r\n        });\r\n    }\r\n    asFoldingRangeKind(kind) {\r\n        if (kind) {\r\n            switch (kind) {\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Comment:\r\n                    return vscode_1.FoldingRangeKind.Comment;\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Imports:\r\n                    return vscode_1.FoldingRangeKind.Imports;\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Region:\r\n                    return vscode_1.FoldingRangeKind.Region;\r\n            }\r\n        }\r\n        return void 0;\r\n    }\r\n    asFoldingRanges(foldingRanges) {\r\n        if (Array.isArray(foldingRanges)) {\r\n            return foldingRanges.map(r => {\r\n                return new vscode_1.FoldingRange(r.startLine, r.endLine, this.asFoldingRangeKind(r.kind));\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.FoldingRangeFeature = FoldingRangeFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst path_1 = require(\"path\");\r\nconst isWindows = (process.platform === 'win32');\r\nconst isMacintosh = (process.platform === 'darwin');\r\nconst isLinux = (process.platform === 'linux');\r\nfunction terminate(process, cwd) {\r\n    if (isWindows) {\r\n        try {\r\n            // This we run in Atom execFileSync is available.\r\n            // Ignore stderr since this is otherwise piped to parent.stderr\r\n            // which might be already closed.\r\n            let options = {\r\n                stdio: ['pipe', 'pipe', 'ignore']\r\n            };\r\n            if (cwd) {\r\n                options.cwd = cwd;\r\n            }\r\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else if (isLinux || isMacintosh) {\r\n        try {\r\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\r\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\r\n            return result.error ? false : true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        process.kill('SIGKILL');\r\n        return true;\r\n    }\r\n}\r\nexports.terminate = terminate;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst api_1 = require(\"./api\");\r\nconst vscode = require(\"vscode\");\r\n/**\r\n * Status codes.\r\n */\r\nvar Status;\r\n(function (Status) {\r\n    Status[Status[\"TagParsingBegun\"] = 1] = \"TagParsingBegun\";\r\n    Status[Status[\"TagParsingDone\"] = 2] = \"TagParsingDone\";\r\n    Status[Status[\"IntelliSenseCompiling\"] = 3] = \"IntelliSenseCompiling\";\r\n    Status[Status[\"IntelliSenseReady\"] = 4] = \"IntelliSenseReady\";\r\n})(Status = exports.Status || (exports.Status = {}));\r\nfunction isCppToolsTestExtension(extension) {\r\n    return extension.getTestApi !== undefined;\r\n}\r\nfunction getCppToolsTestApi(version) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let cpptools = vscode.extensions.getExtension(\"ms-vscode.cpptools\");\r\n        let extension;\r\n        let api;\r\n        if (cpptools) {\r\n            if (!cpptools.isActive) {\r\n                extension = yield cpptools.activate();\r\n            }\r\n            else {\r\n                extension = cpptools.exports;\r\n            }\r\n            if (isCppToolsTestExtension(extension)) {\r\n                // ms-vscode.cpptools > 0.17.5\r\n                try {\r\n                    api = extension.getTestApi(version);\r\n                }\r\n                catch (err) {\r\n                    // Unfortunately, ms-vscode.cpptools [0.17.6, 0.18.1] throws a RangeError if you specify a version greater than v1.\r\n                    // These versions of the extension will not be able to act on the newer interface and v2 is a superset of v1, so we can safely fall back to v1.\r\n                    let e = err;\r\n                    if (e.message && e.message.startsWith(\"Invalid version\")) {\r\n                        api = extension.getTestApi(api_1.Version.v1);\r\n                    }\r\n                }\r\n                if (version !== api_1.Version.v1) {\r\n                    if (!api.getVersion) {\r\n                        console.warn(`vscode-cpptools-api version ${version} requested, but is not available in the current version of the cpptools extension. Using version 1 instead.`);\r\n                    }\r\n                    else if (version !== api.getVersion()) {\r\n                        console.warn(`vscode-cpptools-api version ${version} requested, but is not available in the current version of the cpptools extension. Using version ${api.getVersion()} instead.`);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // ms-vscode.cpptools version 0.17.5\r\n                api = extension;\r\n                if (version !== api_1.Version.v0) {\r\n                    console.warn(`vscode-cpptools-api version ${version} requested, but is not available in version 0.17.5 of the cpptools extension. Using version 0 instead.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            console.warn(\"C/C++ extension is not installed\");\r\n        }\r\n        return api;\r\n    });\r\n}\r\nexports.getCppToolsTestApi = getCppToolsTestApi;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as path from 'path';\r\nimport * as fs from \"fs\";\r\nimport * as vscode from 'vscode';\r\nimport * as util from '../common';\r\nimport * as telemetry from '../telemetry';\r\nimport { PersistentFolderState } from './persistentState';\r\nimport { CppSettings } from './settings';\r\nimport { ABTestSettings, getABTestSettings } from '../abTesting';\r\nimport { getCustomConfigProviders } from './customProviders';\r\nimport * as os from 'os';\r\nconst configVersion: number = 4;\r\n\r\ntype Environment = { [key: string]: string | string[] };\r\n\r\n// No properties are set in the config since we want to apply vscode settings first (if applicable).\r\n// That code won't trigger if another value is already set.\r\n// The property defaults are moved down to applyDefaultIncludePathsAndFrameworks.\r\nfunction getDefaultConfig(): Configuration {\r\n    if (process.platform === 'darwin') {\r\n        return { name: \"Mac\" };\r\n    } else if (process.platform === 'win32') {\r\n        return { name: \"Win32\" };\r\n    } else {\r\n        return { name: \"Linux\" };\r\n    }\r\n}\r\n\r\nfunction getDefaultCppProperties(): ConfigurationJson {\r\n    return {\r\n        configurations: [getDefaultConfig()],\r\n        version: configVersion\r\n    };\r\n}\r\n\r\nexport interface ConfigurationJson {\r\n    configurations: Configuration[];\r\n    env?: {[key: string]: string | string[]};\r\n    version: number;\r\n}\r\n\r\nexport interface Configuration {\r\n    name: string;\r\n    compilerPath?: string;\r\n    knownCompilers?: KnownCompiler[];\r\n    cStandard?: string;\r\n    cppStandard?: string;\r\n    includePath?: string[];\r\n    macFrameworkPath?: string[];\r\n    windowsSdkVersion?: string;\r\n    defines?: string[];\r\n    intelliSenseMode?: string;\r\n    compileCommands?: string;\r\n    forcedInclude?: string[];\r\n    configurationProvider?: string;\r\n    browse?: Browse;\r\n}\r\n\r\nexport interface Browse {\r\n    path?: string[];\r\n    limitSymbolsToIncludedHeaders?: boolean | string;\r\n    databaseFilename?: string;\r\n}\r\n\r\nexport interface KnownCompiler {\r\n    path: string;\r\n    isC: boolean;\r\n}\r\n\r\nexport interface CompilerDefaults {\r\n    compilerPath: string;\r\n    knownCompilers: KnownCompiler[];\r\n    cStandard: string;\r\n    cppStandard: string;\r\n    includes: string[];\r\n    frameworks: string[];\r\n    windowsSdkVersion: string;\r\n    intelliSenseMode: string;\r\n    rootfs: string;\r\n}\r\n\r\nexport class CppProperties {\r\n    private rootUri: vscode.Uri;\r\n    private propertiesFile: vscode.Uri = undefined;\r\n    private readonly configFolder: string;\r\n    private configurationJson: ConfigurationJson = null;\r\n    private currentConfigurationIndex: PersistentFolderState<number>;\r\n    private configFileWatcher: vscode.FileSystemWatcher = null;\r\n    private configFileWatcherFallbackTime: Date = new Date(); // Used when file watching fails.\r\n    private compileCommandFileWatchers: fs.FSWatcher[] = [];\r\n    private defaultCompilerPath: string = null;\r\n    private knownCompilers: KnownCompiler[] = null;\r\n    private defaultCStandard: string = null;\r\n    private defaultCppStandard: string = null;\r\n    private defaultIncludes: string[] = null;\r\n    private defaultFrameworks: string[] = null;\r\n    private defaultWindowsSdkVersion: string = null;\r\n    private vcpkgIncludes: string[] = [];\r\n    private vcpkgPathReady: boolean = false;\r\n    private defaultIntelliSenseMode: string = null;\r\n    private readonly configurationGlobPattern: string = \"c_cpp_properties.json\";\r\n    private disposables: vscode.Disposable[] = [];\r\n    private configurationsChanged = new vscode.EventEmitter<Configuration[]>();\r\n    private selectionChanged = new vscode.EventEmitter<number>();\r\n    private compileCommandsChanged = new vscode.EventEmitter<string>();\r\n    private diagnosticCollection: vscode.DiagnosticCollection;\r\n    private prevSquiggleMetrics: Map<string, { [key: string]: number }> = new Map<string, { [key: string]: number }>();\r\n    private rootfs: string = null;\r\n\r\n    // Any time the default settings are parsed and assigned to `this.configurationJson`,\r\n    // we want to track when the default includes have been added to it.\r\n    private configurationIncomplete: boolean = true;\r\n\r\n    constructor(rootUri: vscode.Uri) {\r\n        console.assert(rootUri !== undefined);\r\n        this.rootUri = rootUri;\r\n        let rootPath: string = rootUri ? rootUri.fsPath : \"\";\r\n        this.currentConfigurationIndex = new PersistentFolderState<number>(\"CppProperties.currentConfigurationIndex\", -1, rootPath);\r\n        this.configFolder = path.join(rootPath, \".vscode\");\r\n        this.diagnosticCollection = vscode.languages.createDiagnosticCollection(rootPath);\r\n\r\n        this.buildVcpkgIncludePath();\r\n\r\n        this.disposables.push(vscode.Disposable.from(this.configurationsChanged, this.selectionChanged, this.compileCommandsChanged));\r\n    }\r\n\r\n    public get ConfigurationsChanged(): vscode.Event<Configuration[]> { return this.configurationsChanged.event; }\r\n    public get SelectionChanged(): vscode.Event<number> { return this.selectionChanged.event; }\r\n    public get CompileCommandsChanged(): vscode.Event<string> { return this.compileCommandsChanged.event; }\r\n    public get Configurations(): Configuration[] { return this.configurationJson ? this.configurationJson.configurations : null; }\r\n    public get CurrentConfigurationIndex(): number { return this.currentConfigurationIndex.Value; }\r\n    public get CurrentConfiguration(): Configuration { return this.Configurations ? this.Configurations[this.CurrentConfigurationIndex] : null; }\r\n    public get CompilerPath(): string { return this.CurrentConfiguration ? this.CurrentConfiguration.compilerPath : null; }\r\n    public get KnownCompiler(): KnownCompiler[] { return this.knownCompilers; }\r\n\r\n    public get CurrentConfigurationProvider(): string|null {\r\n        if (this.CurrentConfiguration.configurationProvider) {\r\n            return this.CurrentConfiguration.configurationProvider;\r\n        }\r\n        return new CppSettings(this.rootUri).defaultConfigurationProvider;\r\n    }\r\n\r\n    public get ConfigurationNames(): string[] {\r\n        let result: string[] = [];\r\n        this.configurationJson.configurations.forEach((config: Configuration) => result.push(config.name));\r\n        return result;\r\n    }\r\n\r\n    public set CompilerDefaults(compilerDefaults: CompilerDefaults) {\r\n        this.defaultCompilerPath = compilerDefaults.compilerPath;\r\n        this.knownCompilers = compilerDefaults.knownCompilers;\r\n        this.defaultCStandard = compilerDefaults.cStandard;\r\n        this.defaultCppStandard = compilerDefaults.cppStandard;\r\n        this.defaultIncludes = compilerDefaults.includes;\r\n        this.defaultFrameworks = compilerDefaults.frameworks;\r\n        this.defaultWindowsSdkVersion = compilerDefaults.windowsSdkVersion;\r\n        this.defaultIntelliSenseMode = compilerDefaults.intelliSenseMode;\r\n        this.rootfs = compilerDefaults.rootfs;\r\n\r\n        // defaultPaths is only used when there isn't a c_cpp_properties.json, but we don't send the configuration changed event\r\n        // to the language server until the default include paths and frameworks have been sent.\r\n        let configFilePath: string = path.join(this.configFolder, \"c_cpp_properties.json\");\r\n        if (fs.existsSync(configFilePath)) {\r\n            this.propertiesFile = vscode.Uri.file(configFilePath);\r\n        } else {\r\n            this.propertiesFile = null;\r\n        }\r\n        \r\n        this.configFileWatcher = vscode.workspace.createFileSystemWatcher(path.join(this.configFolder, this.configurationGlobPattern));\r\n        this.disposables.push(this.configFileWatcher);\r\n        this.configFileWatcher.onDidCreate((uri) => {\r\n            this.propertiesFile = uri;\r\n            this.handleConfigurationChange();\r\n        });\r\n\r\n        this.configFileWatcher.onDidDelete(() => {\r\n            this.propertiesFile = null;\r\n            this.resetToDefaultSettings(true);\r\n            this.handleConfigurationChange();\r\n        });\r\n\r\n        this.configFileWatcher.onDidChange(() => {\r\n            this.handleConfigurationChange();\r\n        });\r\n\r\n        this.handleConfigurationChange();\r\n    }\r\n\r\n    public get VcpkgInstalled(): boolean {\r\n        return this.vcpkgIncludes.length > 0;\r\n    }\r\n\r\n    private onConfigurationsChanged(): void {\r\n        this.configurationsChanged.fire(this.Configurations);\r\n    }\r\n\r\n    private onSelectionChanged(): void {\r\n        this.selectionChanged.fire(this.CurrentConfigurationIndex);\r\n        this.handleSquiggles();\r\n    }\r\n\r\n    private onCompileCommandsChanged(path: string): void {\r\n        this.compileCommandsChanged.fire(path);\r\n    }\r\n\r\n    public onDidChangeSettings(): void {\r\n        // Default settings may have changed in a way that affects the configuration.\r\n        // Just send another message since the language server will sort out whether anything important changed or not.\r\n        if (!this.propertiesFile) {\r\n            this.resetToDefaultSettings(true);\r\n            this.handleConfigurationChange();\r\n        } else if (!this.configurationIncomplete) {\r\n            this.handleConfigurationChange();\r\n        }\r\n    }\r\n\r\n    private resetToDefaultSettings(resetIndex: boolean): void {\r\n        this.configurationJson = getDefaultCppProperties();\r\n        if (resetIndex || this.CurrentConfigurationIndex < 0 ||\r\n            this.CurrentConfigurationIndex >= this.configurationJson.configurations.length) {\r\n            this.currentConfigurationIndex.Value = this.getConfigIndexForPlatform(this.configurationJson);\r\n        }\r\n        this.configurationIncomplete = true;\r\n    }\r\n\r\n     private applyDefaultIncludePathsAndFrameworks(): void {\r\n        if (this.configurationIncomplete && this.defaultIncludes && this.defaultFrameworks && this.vcpkgPathReady) {\r\n            let configuration: Configuration = this.CurrentConfiguration;\r\n            let settings: CppSettings = new CppSettings(this.rootUri);\r\n            let isUnset: (input: any) => boolean = (input: any) => {\r\n                // default values for \"default\" config settings is null.\r\n                return input === null;\r\n            };\r\n\r\n            // Anything that has a vscode setting for it will be resolved in updateServerOnFolderSettingsChange.\r\n            // So if a property is currently unset, but has a vscode setting, don't set it yet, otherwise the linkage\r\n            // to the setting will be lost if this configuration is saved into a c_cpp_properties.json file.\r\n\r\n            // Only add settings from the default compiler if user hasn't explicitly set the corresponding VS Code setting.\r\n\r\n            if (isUnset(settings.defaultIncludePath)) {\r\n                // We don't add system includes to the includePath anymore. The language server has this information.\r\n                let abTestSettings: ABTestSettings = getABTestSettings();\r\n                let rootFolder: string = abTestSettings.UseRecursiveIncludes ? \"${workspaceFolder}/**\" : \"${workspaceFolder}\";\r\n                configuration.includePath = [rootFolder].concat(this.vcpkgIncludes);\r\n            }\r\n            // browse.path is not set by default anymore. When it is not set, the includePath will be used instead.\r\n            if (isUnset(settings.defaultDefines)) {\r\n                configuration.defines = (process.platform === 'win32') ? [\"_DEBUG\", \"UNICODE\", \"_UNICODE\"] : [];\r\n            }\r\n            if (isUnset(settings.defaultMacFrameworkPath) && process.platform === 'darwin') {\r\n                configuration.macFrameworkPath = this.defaultFrameworks;\r\n            }\r\n            if (isUnset(settings.defaultWindowsSdkVersion) && this.defaultWindowsSdkVersion && process.platform === 'win32') {\r\n                configuration.windowsSdkVersion = this.defaultWindowsSdkVersion;\r\n            }\r\n            if (isUnset(settings.defaultCompilerPath) && this.defaultCompilerPath &&\r\n                isUnset(settings.defaultCompileCommands) && !configuration.compileCommands) {\r\n                // compile_commands.json already specifies a compiler. compilerPath overrides the compile_commands.json compiler so\r\n                // don't set a default when compileCommands is in use.\r\n                configuration.compilerPath = this.defaultCompilerPath;\r\n            }\r\n            if (this.knownCompilers) {\r\n                configuration.knownCompilers = this.knownCompilers;\r\n            }\r\n            if (isUnset(settings.defaultCStandard) && this.defaultCStandard) {\r\n                configuration.cStandard = this.defaultCStandard;\r\n            }\r\n            if (isUnset(settings.defaultCppStandard) && this.defaultCppStandard) {\r\n                configuration.cppStandard = this.defaultCppStandard;\r\n            }\r\n            if (isUnset(settings.defaultIntelliSenseMode)) {\r\n                configuration.intelliSenseMode = this.defaultIntelliSenseMode;\r\n            }\r\n            this.configurationIncomplete = false;\r\n        }\r\n    }\r\n\r\n    private get ExtendedEnvironment(): Environment {\r\n        let result: Environment = {};\r\n        if (this.configurationJson.env) {\r\n            Object.assign(result, this.configurationJson.env);\r\n        }\r\n\r\n        result[\"workspaceFolderBasename\"] = this.rootUri ? path.basename(this.rootUri.fsPath) : \"\";\r\n        return result;\r\n    }\r\n\r\n    private async buildVcpkgIncludePath(): Promise<void> {\r\n        try {\r\n            // Check for vcpkgRoot and include relevent paths if found.\r\n            let vcpkgRoot: string = util.getVcpkgRoot();\r\n            if (vcpkgRoot) {\r\n                let list: string[] = await util.readDir(vcpkgRoot);\r\n                if (list !== undefined) {\r\n                    // For every *directory* in the list (non-recursive). Each directory is basically a platform.\r\n                    list.forEach((entry) => {\r\n                        if (entry !== \"vcpkg\") {\r\n                            let pathToCheck: string = path.join(vcpkgRoot, entry);\r\n                            if (fs.existsSync(pathToCheck)) {\r\n                                let p: string = path.join(pathToCheck, \"include\");\r\n                                if (fs.existsSync(p)) {\r\n                                    p = p.replace(/\\\\/g, \"/\");\r\n                                    p = p.replace(vcpkgRoot, \"${vcpkgRoot}\");\r\n                                    this.vcpkgIncludes.push(p);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {} finally {\r\n            this.vcpkgPathReady = true;\r\n            this.handleConfigurationChange();\r\n        }\r\n    }\r\n\r\n    private getConfigIndexForPlatform(config: any): number {\r\n        let plat: string;\r\n        if (process.platform === 'darwin') {\r\n            plat = \"Mac\";\r\n        } else if (process.platform === 'win32') {\r\n            plat = \"Win32\";\r\n        } else {\r\n            plat = \"Linux\";\r\n        }\r\n        for (let i: number = 0; i < this.configurationJson.configurations.length; i++) {\r\n            if (config.configurations[i].name === plat) {\r\n                return i;\r\n            }\r\n        }\r\n        return this.configurationJson.configurations.length - 1;\r\n    }\r\n\r\n    private getIntelliSenseModeForPlatform(name: string): string {\r\n        // Do the built-in configs first.\r\n        if (name === \"Linux\") {\r\n            return \"gcc-x64\";\r\n        } else if (name === \"Mac\") {\r\n            return \"clang-x64\";\r\n        } else if (name === \"Win32\") {\r\n            return \"msvc-x64\";\r\n        } else if (process.platform === 'win32') {\r\n            // Custom configs default to the OS's preference.\r\n            return \"msvc-x64\";\r\n        } else if (process.platform === 'darwin') {\r\n            return \"clang-x64\";\r\n        } else {\r\n            return \"gcc-x64\";\r\n        }\r\n    }\r\n\r\n    public addToIncludePathCommand(path: string): void {\r\n        this.handleConfigurationEditCommand((document: vscode.TextDocument) => {\r\n            telemetry.logLanguageServerEvent(\"addToIncludePath\");\r\n            this.parsePropertiesFile(); // Clear out any modifications we may have made internally.\r\n            let config: Configuration = this.CurrentConfiguration;\r\n            if (config.includePath === undefined) {\r\n                config.includePath = [\"${default}\"];\r\n            }\r\n            config.includePath.splice(config.includePath.length, 0, path);\r\n            fs.writeFileSync(this.propertiesFile.fsPath, JSON.stringify(this.configurationJson, null, 4));\r\n            this.handleConfigurationChange();\r\n        });\r\n    }\r\n\r\n    public updateCustomConfigurationProvider(providerId: string): Thenable<void> {\r\n        return new Promise<void>((resolve) => {\r\n            if (this.propertiesFile) {\r\n                this.handleConfigurationEditCommand((document: vscode.TextDocument) => {\r\n                    this.parsePropertiesFile(); // Clear out any modifications we may have made internally.\r\n                    let config: Configuration = this.CurrentConfiguration;\r\n                    if (providerId) {\r\n                        config.configurationProvider = providerId;\r\n                    } else {\r\n                        delete config.configurationProvider;\r\n                    }\r\n                    fs.writeFileSync(this.propertiesFile.fsPath, JSON.stringify(this.configurationJson, null, 4));\r\n                    this.handleConfigurationChange();\r\n                    resolve();\r\n                });\r\n            } else {\r\n                let settings: CppSettings = new CppSettings(this.rootUri);\r\n                if (providerId) {\r\n                    settings.update(\"default.configurationProvider\", providerId);\r\n                } else {\r\n                    settings.update(\"default.configurationProvider\", undefined); // delete the setting\r\n                }\r\n                this.CurrentConfiguration.configurationProvider = providerId;\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    public setCompileCommands(path: string): void {\r\n        this.handleConfigurationEditCommand((document: vscode.TextDocument) => {\r\n            this.parsePropertiesFile(); // Clear out any modifications we may have made internally.\r\n            let config: Configuration = this.CurrentConfiguration;\r\n            config.compileCommands = path;\r\n            fs.writeFileSync(this.propertiesFile.fsPath, JSON.stringify(this.configurationJson, null, 4));\r\n            this.handleConfigurationChange();\r\n        });\r\n    }\r\n\r\n    public select(index: number): Configuration {\r\n        if (index === this.configurationJson.configurations.length) {\r\n            this.handleConfigurationEditCommand(vscode.window.showTextDocument);\r\n            return;\r\n        }\r\n        this.currentConfigurationIndex.Value = index;\r\n        this.onSelectionChanged();\r\n    }\r\n\r\n    private resolveDefaults(entries: string[], defaultValue: string[]): string[] {\r\n        let result: string[] = [];\r\n        entries.forEach(entry => {\r\n            if (entry === \"${default}\") {\r\n                // package.json default values for string[] properties is null.\r\n                // If no default is set, return an empty array instead of an array with `null` in it.\r\n                if (defaultValue !== null) {\r\n                    result = result.concat(defaultValue);\r\n                }\r\n            } else {\r\n                result.push(entry);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    private resolveAndSplit(paths: string[] | undefined, defaultValue: string[], env: Environment): string[] {\r\n        let result: string[] = [];\r\n        if (paths) {\r\n            paths.forEach(entry => {\r\n                let entries: string[] = util.resolveVariables(entry, env).split(\";\").filter(e => e);\r\n                entries = this.resolveDefaults(entries, defaultValue);\r\n                result = result.concat(entries);\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private resolveVariables(input: string | boolean, defaultValue: string | boolean, env: Environment): string | boolean {\r\n        if (input === undefined || input === \"${default}\") {\r\n            input = defaultValue;\r\n        }\r\n        if (typeof input === \"boolean\") {\r\n            return input;\r\n        }\r\n        return util.resolveVariables(input, env);\r\n    }\r\n\r\n    private updateConfiguration(property: string[], defaultValue: string[], env: Environment): string[];\r\n    private updateConfiguration(property: string, defaultValue: string, env: Environment): string;\r\n    private updateConfiguration(property: string | boolean, defaultValue: boolean, env: Environment): boolean;\r\n    private updateConfiguration(property, defaultValue, env): any {\r\n        if (util.isString(property) || util.isString(defaultValue)) {\r\n            return this.resolveVariables(property, defaultValue, env);\r\n        } else if (util.isBoolean(property) || util.isBoolean(defaultValue)) {\r\n            return this.resolveVariables(property, defaultValue, env);\r\n        } else if (util.isArrayOfString(property) || util.isArrayOfString(defaultValue)) {\r\n            if (property) {\r\n                return this.resolveAndSplit(property, defaultValue, env);\r\n            } else if (property === undefined && defaultValue) {\r\n                return this.resolveAndSplit(defaultValue, [], env);\r\n            }\r\n        }\r\n        return property;\r\n    }\r\n\r\n    private updateServerOnFolderSettingsChange(): void {\r\n        if (!this.configurationJson) {\r\n            return;\r\n        }\r\n        let settings: CppSettings = new CppSettings(this.rootUri);\r\n        let env: Environment = this.ExtendedEnvironment;\r\n        for (let i: number = 0; i < this.configurationJson.configurations.length; i++) {\r\n            let configuration: Configuration = this.configurationJson.configurations[i];\r\n\r\n            configuration.includePath = this.updateConfiguration(configuration.includePath, settings.defaultIncludePath, env);\r\n            configuration.defines = this.updateConfiguration(configuration.defines, settings.defaultDefines, env);\r\n            configuration.macFrameworkPath = this.updateConfiguration(configuration.macFrameworkPath, settings.defaultMacFrameworkPath, env);\r\n            configuration.windowsSdkVersion = this.updateConfiguration(configuration.windowsSdkVersion, settings.defaultWindowsSdkVersion, env);\r\n            configuration.forcedInclude = this.updateConfiguration(configuration.forcedInclude, settings.defaultForcedInclude, env);\r\n            configuration.compileCommands = this.updateConfiguration(configuration.compileCommands, settings.defaultCompileCommands, env);\r\n            configuration.compilerPath = this.updateConfiguration(configuration.compilerPath, settings.defaultCompilerPath, env);\r\n            configuration.cStandard = this.updateConfiguration(configuration.cStandard, settings.defaultCStandard, env);\r\n            configuration.cppStandard = this.updateConfiguration(configuration.cppStandard, settings.defaultCppStandard, env);\r\n            configuration.intelliSenseMode = this.updateConfiguration(configuration.intelliSenseMode, settings.defaultIntelliSenseMode, env);\r\n            configuration.configurationProvider = this.updateConfiguration(configuration.configurationProvider, settings.defaultConfigurationProvider, env);\r\n\r\n            if (!configuration.browse) {\r\n                configuration.browse = {};\r\n            }\r\n\r\n            if (!configuration.browse.path) {\r\n                if (settings.defaultBrowsePath) {\r\n                    configuration.browse.path = settings.defaultBrowsePath;\r\n                } else if (configuration.includePath) {\r\n                    // If the user doesn't set browse.path, copy the includePath over. Make sure ${workspaceFolder} is in there though...\r\n                    configuration.browse.path = configuration.includePath.slice(0);\r\n                    if (-1 === configuration.includePath.findIndex((value: string, index: number) => {\r\n                        return !!value.match(/^\\$\\{(workspaceRoot|workspaceFolder)\\}(\\\\\\*{0,2}|\\/\\*{0,2})?$/g);\r\n                    })) {\r\n                        configuration.browse.path.push(\"${workspaceFolder}\");\r\n                    }\r\n                }\r\n            } else {\r\n                configuration.browse.path = this.updateConfiguration(configuration.browse.path, settings.defaultBrowsePath, env);\r\n            }\r\n\r\n            configuration.browse.limitSymbolsToIncludedHeaders = this.updateConfiguration(configuration.browse.limitSymbolsToIncludedHeaders, settings.defaultLimitSymbolsToIncludedHeaders, env);\r\n            configuration.browse.databaseFilename = this.updateConfiguration(configuration.browse.databaseFilename, settings.defaultDatabaseFilename, env);\r\n        }\r\n\r\n        this.updateCompileCommandsFileWatchers();\r\n        if (!this.configurationIncomplete) {\r\n            this.onConfigurationsChanged();\r\n        }\r\n    }\r\n\r\n    // Dispose existing and loop through cpp and populate with each file (exists or not) as you go.\r\n    // paths are expected to have variables resolved already\r\n    public updateCompileCommandsFileWatchers(): void {\r\n        this.compileCommandFileWatchers.forEach((watcher: fs.FSWatcher) => watcher.close());\r\n        this.compileCommandFileWatchers = []; //reset it\r\n        let filePaths: Set<string> = new Set<string>();\r\n        this.configurationJson.configurations.forEach(c => {\r\n            if (c.compileCommands !== undefined && fs.existsSync(c.compileCommands)) {\r\n                filePaths.add(c.compileCommands);\r\n            }\r\n        });\r\n        try {\r\n            filePaths.forEach((path: string) => {\r\n                this.compileCommandFileWatchers.push(fs.watch(path, (event: string, filename: string) => {\r\n                    if (event !== \"rename\") {\r\n                        this.onCompileCommandsChanged(path);\r\n                    }\r\n                }));\r\n            });\r\n        } catch (e) {\r\n            // The file watcher limit is hit.\r\n            // TODO: Check if the compile commands file has a higher timestamp during the interval timer.\r\n        }\r\n    }\r\n\r\n    public handleConfigurationEditCommand(onSuccess: (document: vscode.TextDocument) => void): void {\r\n        if (this.propertiesFile && fs.existsSync(this.propertiesFile.fsPath)) {\r\n            vscode.workspace.openTextDocument(this.propertiesFile).then((document: vscode.TextDocument) => {\r\n                onSuccess(document);\r\n            });\r\n        } else {\r\n            fs.mkdir(this.configFolder, (e: NodeJS.ErrnoException) => {\r\n                if (!e || e.code === 'EEXIST') {\r\n                    let fullPathToFile: string = path.join(this.configFolder, \"c_cpp_properties.json\");\r\n                    let filePath: vscode.Uri = vscode.Uri.file(fullPathToFile).with({ scheme: \"untitled\" });\r\n                    vscode.workspace.openTextDocument(filePath).then((document: vscode.TextDocument) => {\r\n                        let edit: vscode.WorkspaceEdit = new vscode.WorkspaceEdit();\r\n                        if (this.configurationJson) {\r\n                            this.resetToDefaultSettings(true);\r\n                        }\r\n                        this.applyDefaultIncludePathsAndFrameworks();\r\n                        let settings: CppSettings = new CppSettings(this.rootUri);\r\n                        if (settings.defaultConfigurationProvider) {\r\n                            this.configurationJson.configurations.forEach(config => {\r\n                                config.configurationProvider = settings.defaultConfigurationProvider;\r\n                            });\r\n                            settings.update(\"default.configurationProvider\", undefined); // delete the setting\r\n                        }\r\n                        let savedKnownCompilers: KnownCompiler[] = this.configurationJson.configurations[0].knownCompilers;\r\n                        delete this.configurationJson.configurations[0].knownCompilers;\r\n                        edit.insert(document.uri, new vscode.Position(0, 0), JSON.stringify(this.configurationJson, null, 4));\r\n                        this.configurationJson.configurations[0].knownCompilers = savedKnownCompilers;\r\n                        vscode.workspace.applyEdit(edit).then((status) => {\r\n                            // Fix for issue 163\r\n                            // https://github.com/Microsoft/vscppsamples/issues/163\r\n                            // Save the file to disk so that when the user tries to re-open the file it exists.\r\n                            // Before this fix the file existed but was unsaved, so we went through the same\r\n                            // code path and reapplied the edit.\r\n                            document.save().then(() => {\r\n                                this.propertiesFile = vscode.Uri.file(path.join(this.configFolder, \"c_cpp_properties.json\"));\r\n                                vscode.workspace.openTextDocument(this.propertiesFile).then((document: vscode.TextDocument) => {\r\n                                    onSuccess(document);\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private handleConfigurationChange(): void {\r\n        if (this.propertiesFile === undefined) {\r\n            return; // Occurs when propertiesFile hasn't been checked yet.\r\n        }\r\n        this.configFileWatcherFallbackTime = new Date();\r\n        if (this.propertiesFile) {\r\n            this.parsePropertiesFile();\r\n            // parsePropertiesFile can fail, but it won't overwrite an existing configurationJson in the event of failure.\r\n            // this.configurationJson should only be undefined here if we have never successfully parsed the propertiesFile.\r\n            if (this.configurationJson) {\r\n                if (this.CurrentConfigurationIndex < 0 ||\r\n                    this.CurrentConfigurationIndex >= this.configurationJson.configurations.length) {\r\n                    // If the index is out of bounds (during initialization or due to removal of configs), fix it.\r\n                    this.currentConfigurationIndex.Value = this.getConfigIndexForPlatform(this.configurationJson);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!this.configurationJson) {\r\n            this.resetToDefaultSettings(true);  // I don't think there's a case where this will be hit anymore.\r\n        }\r\n\r\n        this.applyDefaultIncludePathsAndFrameworks();\r\n        this.updateServerOnFolderSettingsChange();\r\n    }\r\n\r\n    private parsePropertiesFile(): void {\r\n        try {\r\n            let readResults: string = fs.readFileSync(this.propertiesFile.fsPath, 'utf8');\r\n            if (readResults === \"\") {\r\n                return; // Repros randomly when the file is initially created. The parse will get called again after the file is written.\r\n            }\r\n\r\n            // Replace all \\<escape character> with \\\\<character>.\r\n            // Otherwise, the JSON.parse result will have the \\<escape character> missing.\r\n            readResults = readResults.replace(/\\\\/g, '\\\\\\\\');\r\n            readResults = readResults.replace(/\\\\\\\\\"/g, '\\\\\"'); // Need to revert the change to \\\".\r\n\r\n            // Try to use the same configuration as before the change.\r\n            let newJson: ConfigurationJson = JSON.parse(readResults);\r\n            if (!newJson || !newJson.configurations || newJson.configurations.length === 0) {\r\n                throw { message: \"Invalid configuration file. There must be at least one configuration present in the array.\" };\r\n            }\r\n            if (!this.configurationIncomplete && this.configurationJson && this.configurationJson.configurations &&\r\n                this.CurrentConfigurationIndex >= 0 && this.CurrentConfigurationIndex < this.configurationJson.configurations.length) {\r\n                for (let i: number = 0; i < newJson.configurations.length; i++) {\r\n                    if (newJson.configurations[i].name === this.configurationJson.configurations[this.CurrentConfigurationIndex].name) {\r\n                        this.currentConfigurationIndex.Value = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            this.configurationJson = newJson;\r\n            if (this.CurrentConfigurationIndex < 0 || this.CurrentConfigurationIndex >= newJson.configurations.length) {\r\n                this.currentConfigurationIndex.Value = this.getConfigIndexForPlatform(newJson);\r\n            }\r\n\r\n            let dirty: boolean = false;\r\n            for (let i: number = 0; i < this.configurationJson.configurations.length; i++) {\r\n                let newId: string = getCustomConfigProviders().checkId(this.configurationJson.configurations[i].configurationProvider);\r\n                if (newId !== this.configurationJson.configurations[i].configurationProvider) {\r\n                    dirty = true;\r\n                    this.configurationJson.configurations[i].configurationProvider = newId;\r\n                }\r\n            }\r\n\r\n            // Remove disallowed variable overrides\r\n            if (this.configurationJson.env) {\r\n                delete this.configurationJson.env['workspaceRoot'];\r\n                delete this.configurationJson.env['workspaceFolder'];\r\n                delete this.configurationJson.env['workspaceFolderBasename'];\r\n                delete this.configurationJson.env['default'];\r\n            }\r\n\r\n            // Warning: There is a chance that this is incorrect in the event that the c_cpp_properties.json file was created before\r\n            // the system includes were available.\r\n            this.configurationIncomplete = false;\r\n\r\n            if (this.configurationJson.version !== configVersion) {\r\n                dirty = true;\r\n                if (this.configurationJson.version === undefined) {\r\n                    this.updateToVersion2();\r\n                }\r\n\r\n                if (this.configurationJson.version === 2) {\r\n                    this.updateToVersion3();\r\n                }\r\n\r\n                if (this.configurationJson.version === 3) {\r\n                    this.updateToVersion4();\r\n                } else {\r\n                    this.configurationJson.version = configVersion;\r\n                    vscode.window.showErrorMessage('Unknown version number found in c_cpp_properties.json. Some features may not work as expected.');\r\n                }\r\n            }\r\n\r\n            if (dirty) {\r\n                try {\r\n                    fs.writeFileSync(this.propertiesFile.fsPath, JSON.stringify(this.configurationJson, null, 4));\r\n                } catch (err) {\r\n                    // Ignore write errors, the file may be under source control. Updated settings will only be modified in memory.\r\n                    vscode.window.showWarningMessage(`Attempt to update \"${this.propertiesFile.fsPath}\" failed (do you have write access?)`);\r\n                }\r\n            }\r\n\r\n            this.handleSquiggles();\r\n        } catch (err) {\r\n            vscode.window.showErrorMessage(`Failed to parse \"${this.propertiesFile.fsPath}\": ${err.message}`);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private handleSquiggles(): void {\r\n        if (!this.propertiesFile) {\r\n            return;\r\n        }\r\n        vscode.workspace.openTextDocument(this.propertiesFile).then((document: vscode.TextDocument) => {\r\n            let diagnostics: vscode.Diagnostic[] = new Array<vscode.Diagnostic>();\r\n\r\n            // Get the text of the current configuration.\r\n            let curText: string = document.getText();\r\n            let curTextStartOffset: number = 0;\r\n            const configStart: number = curText.search(new RegExp(`{\\\\s*\"name\"\\\\s*:\\\\s*\"${this.CurrentConfiguration.name}\"`));\r\n            if (configStart === -1) {\r\n                telemetry.logLanguageServerEvent(\"ConfigSquiggles\", { \"error\": \"config name not first\" });\r\n                return;\r\n            }\r\n            curTextStartOffset = configStart + 1;\r\n            curText = curText.substr(curTextStartOffset); // Remove earlier configs.\r\n            const nameEnd: number = curText.indexOf(\":\");\r\n            curTextStartOffset += nameEnd + 1;\r\n            curText = curText.substr(nameEnd + 1);\r\n            const nextNameStart: number = curText.search(new RegExp('\"name\"\\\\s*:\\\\s*\"'));\r\n            if (nextNameStart !== -1) {\r\n                curText = curText.substr(0, nextNameStart + 6); // Remove later configs.\r\n                const nextNameStart2: number = curText.search(new RegExp('\\\\s*}\\\\s*,\\\\s*{\\\\s*\"name\"'));\r\n                if (nextNameStart2 === -1) {\r\n                    telemetry.logLanguageServerEvent(\"ConfigSquiggles\", { \"error\": \"next config name not first\" });\r\n                    return;\r\n                }\r\n                curText = curText.substr(0, nextNameStart2);\r\n            }\r\n\r\n            // TODO: Add other squiggles.\r\n\r\n            // Check for path-related squiggles.\r\n            let paths: Set<string> = new Set<string>();\r\n            for (let pathArray of [ (this.CurrentConfiguration.browse ? this.CurrentConfiguration.browse.path : undefined),\r\n                    this.CurrentConfiguration.includePath, this.CurrentConfiguration.macFrameworkPath, this.CurrentConfiguration.forcedInclude ] ) {\r\n                if (pathArray) {\r\n                    for (let curPath of pathArray) {\r\n                        paths.add(`\"${curPath}\"`);\r\n                    }\r\n                }\r\n            }\r\n            if (this.CurrentConfiguration.compileCommands) {\r\n                paths.add(`\"${this.CurrentConfiguration.compileCommands}\"`);\r\n            }\r\n\r\n            const isWindows: boolean = os.platform() === 'win32';\r\n            if (this.CurrentConfiguration.compilerPath) {\r\n                let compilerPathAndArgs: util.CompilerPathAndArgs;\r\n                compilerPathAndArgs = util.extractCompilerPathAndArgs(this.CurrentConfiguration.compilerPath);\r\n                if (!(isWindows && compilerPathAndArgs.compilerPath.endsWith(\"cl.exe\"))) {\r\n                    // Unlike other cases, compilerPath may not start or end with \" due to trimming of whitespace.\r\n                    // This is checked to determine if the path is a compilerPath later on.\r\n                    paths.add(`${compilerPathAndArgs.compilerPath}`);\r\n                }\r\n            }\r\n\r\n            // Get the start/end for properties that are file-only.\r\n            const forcedIncludeStart: number = curText.search(/\\s*\\\"forcedInclude\\\"\\s*:\\s*\\[/);\r\n            const forcedeIncludeEnd: number = forcedIncludeStart === -1 ? -1 : curText.indexOf(\"]\", forcedIncludeStart);\r\n            const compileCommandsStart: number = curText.search(/\\s*\\\"compileCommands\\\"\\s*:\\s*\\\"/);\r\n            const compileCommandsEnd: number = compileCommandsStart === -1 ? -1 : curText.indexOf('\"', curText.indexOf('\"', curText.indexOf(\":\", compileCommandsStart)) + 1);\r\n            const compilerPathStart: number = curText.search(/\\s*\\\"compilerPath\\\"\\s*:\\s*\\\"/);\r\n            const compilerPathEnd: number = compilerPathStart === -1 ? -1 : curText.indexOf('\"', curText.indexOf('\"', curText.indexOf(\":\", compilerPathStart)) + 1) + 1;\r\n\r\n            if (this.prevSquiggleMetrics[this.CurrentConfiguration.name] === undefined) {\r\n                this.prevSquiggleMetrics[this.CurrentConfiguration.name] = { PathNonExistent: 0, PathNotAFile: 0, PathNotADirectory: 0 };\r\n            }\r\n            let newSquiggleMetrics: { [key: string]: number } = { PathNonExistent: 0, PathNotAFile: 0, PathNotADirectory: 0 };\r\n\r\n            for (let curPath of paths) {\r\n                const isCompilerPath: boolean = !curPath.startsWith('\"'); // This check probably will need to change later.\r\n                let resolvedPath: string = curPath.substr((!isCompilerPath ? 1 : 0), curPath.length + (!isCompilerPath ? - 2 : 0));\r\n                // Resolve special path cases.\r\n                if (resolvedPath === \"${default}\") {\r\n                    // TODO: Add squiggles for when the C_Cpp.default.* paths are invalid.\r\n                    continue;\r\n                }\r\n                resolvedPath = util.resolveVariables(resolvedPath, this.ExtendedEnvironment);\r\n                if (resolvedPath.includes(\"${workspaceFolder}\")) {\r\n                    resolvedPath = resolvedPath.replace(\"${workspaceFolder}\", this.rootUri.fsPath);\r\n                }\r\n                if (resolvedPath.includes(\"${workspaceRoot}\")) {\r\n                    resolvedPath = resolvedPath.replace(\"${workspaceRoot}\", this.rootUri.fsPath);\r\n                }\r\n                if (resolvedPath.includes(\"${vcpkgRoot}\")) {\r\n                    resolvedPath = resolvedPath.replace(\"${vcpkgRoot}\", util.getVcpkgRoot());\r\n                }\r\n                if (resolvedPath.includes(\"*\")) {\r\n                    resolvedPath = resolvedPath.replace(/\\*/g, \"\");\r\n                }\r\n\r\n                // Handle WSL paths.\r\n                const isWSL: boolean = isWindows && resolvedPath.startsWith(\"/\");\r\n                if (isWSL) {\r\n                    const mntStr: string = \"/mnt/\";\r\n                    if (resolvedPath.length > \"/mnt/c/\".length && resolvedPath.substr(0, mntStr.length) === mntStr) {\r\n                        resolvedPath = resolvedPath.substr(mntStr.length);\r\n                        resolvedPath = resolvedPath.substr(0, 1) + \":\" + resolvedPath.substr(1);\r\n                    } else if (this.rootfs && this.rootfs.length > 0) {\r\n                        resolvedPath = this.rootfs + resolvedPath.substr(1);\r\n                        resolvedPath = resolvedPath.replace(/\\//g, path.sep);\r\n                        // TODO: Handle WSL symlinks.\r\n                    }\r\n                }\r\n\r\n                let pathExists: boolean = true;\r\n                let existsWithExeAdded: (path: string) => boolean = (path: string) => {\r\n                    return isCompilerPath && isWindows && !isWSL && fs.existsSync(path + \".exe\");\r\n                };\r\n                if (!fs.existsSync(resolvedPath)) {\r\n                    if (existsWithExeAdded(resolvedPath)) {\r\n                        resolvedPath += \".exe\";\r\n                    } else {\r\n                        // Check again for a relative path.\r\n                        const relativePath: string = this.rootUri.fsPath + path.sep + resolvedPath;\r\n                        if (!fs.existsSync(relativePath)) {\r\n                            if (existsWithExeAdded(resolvedPath)) {\r\n                                resolvedPath += \".exe\";\r\n                            } else {\r\n                                pathExists = false;\r\n                            }\r\n                        } else {\r\n                            resolvedPath = relativePath;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Iterate through the text and apply squiggles.\r\n                for (let curOffset: number = curText.indexOf(curPath); curOffset !== -1; curOffset = curText.indexOf(curPath, curOffset + curPath.length)) {\r\n                    let message: string;\r\n                    if (!pathExists) {\r\n                        message = `Cannot find \"${resolvedPath}\".`;\r\n                        newSquiggleMetrics.PathNonExistent++;\r\n                    } else {\r\n                        // Check for file versus path mismatches.\r\n                        if ((curOffset >= forcedIncludeStart && curOffset <= forcedeIncludeEnd) ||\r\n                            (curOffset >= compileCommandsStart && curOffset <= compileCommandsEnd) ||\r\n                            (curOffset >= compilerPathStart && curOffset <= compilerPathEnd)) {\r\n                            if (util.checkFileExistsSync(resolvedPath)) {\r\n                                continue;\r\n                            }\r\n                            message = `Path is not a file: \"${resolvedPath}\".`;\r\n                            newSquiggleMetrics.PathNotAFile++;\r\n                        } else {\r\n                            if (util.checkDirectoryExistsSync(resolvedPath)) {\r\n                                continue;\r\n                            }\r\n                            message = `Path is not a directory: \"${resolvedPath}\".`;\r\n                            newSquiggleMetrics.PathNotADirectory++;\r\n                        }\r\n                    }\r\n                    let diagnostic: vscode.Diagnostic = new vscode.Diagnostic(\r\n                        new vscode.Range(document.positionAt(curTextStartOffset + curOffset),\r\n                            document.positionAt(curTextStartOffset + curOffset + curPath.length + (!isCompilerPath ? - 1 : 0))),\r\n                        message, vscode.DiagnosticSeverity.Warning);\r\n                    diagnostics.push(diagnostic);\r\n                }\r\n            }\r\n            if (diagnostics.length !== 0) {\r\n                this.diagnosticCollection.set(document.uri, diagnostics);\r\n            } else {\r\n                this.diagnosticCollection.clear();\r\n            }\r\n\r\n            // Send telemetry on squiggle changes.\r\n            let changedSquiggleMetrics: { [key: string]: number } = {};\r\n            if (newSquiggleMetrics.PathNonExistent !== this.prevSquiggleMetrics[this.CurrentConfiguration.name].PathNonExistent) {\r\n                changedSquiggleMetrics.PathNonExistent = newSquiggleMetrics.PathNonExistent;\r\n            }\r\n            if (newSquiggleMetrics.PathNotAFile !== this.prevSquiggleMetrics[this.CurrentConfiguration.name].PathNotAFile) {\r\n                changedSquiggleMetrics.PathNotAFile = newSquiggleMetrics.PathNotAFile;\r\n            }\r\n            if (newSquiggleMetrics.PathNotADirectory !== this.prevSquiggleMetrics[this.CurrentConfiguration.name].PathNotADirectory) {\r\n                changedSquiggleMetrics.PathNotADirectory = newSquiggleMetrics.PathNotADirectory;\r\n            }\r\n            if (Object.keys(changedSquiggleMetrics).length > 0) {\r\n                telemetry.logLanguageServerEvent(\"ConfigSquiggles\", null, changedSquiggleMetrics);\r\n            }\r\n            this.prevSquiggleMetrics[this.CurrentConfiguration.name] = newSquiggleMetrics;\r\n        });\r\n    }\r\n\r\n    private updateToVersion2(): void {\r\n        this.configurationJson.version = 2;\r\n        // no-op. We don't automatically populate the browse.path anymore.\r\n        // We use includePath if browse.path is not present which is what this code used to do.\r\n    }\r\n\r\n    private updateToVersion3(): void {\r\n        this.configurationJson.version = 3;\r\n        for (let i: number = 0; i < this.configurationJson.configurations.length; i++) {\r\n            let config: Configuration = this.configurationJson.configurations[i];\r\n            // Look for Mac configs and extra configs on Mac systems\r\n            if (config.name === \"Mac\" || (process.platform === 'darwin' && config.name !== \"Win32\" && config.name !== \"Linux\")) {\r\n                if (config.macFrameworkPath === undefined) {\r\n                    config.macFrameworkPath = [\r\n                        \"/System/Library/Frameworks\",\r\n                        \"/Library/Frameworks\"\r\n                    ];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateToVersion4(): void {\r\n        this.configurationJson.version = 4;\r\n        // Update intelliSenseMode, compilerPath, cStandard, and cppStandard with the defaults if they're missing.\r\n        // If VS Code settings exist for these properties, don't add them to c_cpp_properties.json\r\n        let settings: CppSettings = new CppSettings(this.rootUri);\r\n        for (let i: number = 0; i < this.configurationJson.configurations.length; i++) {\r\n            let config: Configuration = this.configurationJson.configurations[i];\r\n\r\n            if (config.intelliSenseMode === undefined && !settings.defaultIntelliSenseMode) {\r\n                config.intelliSenseMode = this.getIntelliSenseModeForPlatform(config.name);\r\n            }\r\n            // Don't set the default if compileCommands exist, until it is fixed to have the correct value.\r\n            if (config.compilerPath === undefined && this.defaultCompilerPath && !config.compileCommands && !settings.defaultCompilerPath) {\r\n                config.compilerPath = this.defaultCompilerPath;\r\n            }\r\n            if (!config.cStandard && this.defaultCStandard && !settings.defaultCStandard) {\r\n                config.cStandard = this.defaultCStandard;\r\n            }\r\n            if (!config.cppStandard && this.defaultCppStandard && !settings.defaultCppStandard) {\r\n                config.cppStandard = this.defaultCppStandard;\r\n            }\r\n        }\r\n    }\r\n\r\n    public checkCppProperties(): void {\r\n        // Check for change properties in case of file watcher failure.\r\n        let propertiesFile: string = path.join(this.configFolder, \"c_cpp_properties.json\");\r\n        fs.stat(propertiesFile, (err, stats) => {\r\n            if (err) {\r\n                if (this.propertiesFile) {\r\n                    this.propertiesFile = null; // File deleted.\r\n                    this.resetToDefaultSettings(true);\r\n                    this.handleConfigurationChange();\r\n                }\r\n            } else if (stats.mtime > this.configFileWatcherFallbackTime) {\r\n                if (!this.propertiesFile) {\r\n                    this.propertiesFile = vscode.Uri.file(propertiesFile); // File created.\r\n                }\r\n                this.handleConfigurationChange();\r\n            }\r\n        });\r\n    }\r\n\r\n    dispose(): void {\r\n        this.disposables.forEach((d) => d.dispose());\r\n        this.disposables = [];\r\n\r\n        this.compileCommandFileWatchers.forEach((watcher: fs.FSWatcher) => watcher.close());\r\n        this.compileCommandFileWatchers = []; //reset it\r\n\r\n        this.diagnosticCollection.dispose();\r\n    }\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport { Middleware } from 'vscode-languageclient';\r\nimport { ClientCollection } from './clientCollection';\r\nimport { Client } from './client';\r\n\r\nexport function createProtocolFilter(me: Client, clients: ClientCollection): Middleware {\r\n    // Disabling lint for invoke handlers\r\n    /* tslint:disable */\r\n    let defaultHandler: (data: any, callback: (data: any) => void) => void = (data, callback: (data) => void) => { if (clients.ActiveClient === me) {me.notifyWhenReady(() => callback(data));}};\r\n    let invoke1 = (a, callback: (a) => any) => { if (clients.ActiveClient === me) { return me.requestWhenReady(() => callback(a)); } return null; };\r\n    let invoke2 = (a, b, callback: (a, b) => any) => { if (clients.ActiveClient === me) { return me.requestWhenReady(() => callback(a, b)); } return null; };\r\n    let invoke3 = (a, b, c, callback: (a, b, c) => any) => { if (clients.ActiveClient === me)  { return me.requestWhenReady(() => callback(a, b, c)); } return null; };\r\n    let invoke4 = (a, b, c, d, callback: (a, b, c, d) => any) => { if (clients.ActiveClient === me)  { return me.requestWhenReady(() => callback(a, b, c, d)); } return null; };\r\n    let invoke5 = (a, b, c, d, e, callback: (a, b, c, d, e) => any) => { if (clients.ActiveClient === me)  { return me.requestWhenReady(() => callback(a, b, c, d, e)); } return null; };\r\n    /* tslint:enable */\r\n\r\n    return {\r\n        didOpen: (document, sendMessage) => {\r\n            if (clients.checkOwnership(me, document)) {\r\n                me.TrackedDocuments.add(document);\r\n                me.provideCustomConfiguration(document).then(() => {\r\n                    sendMessage(document);\r\n                }, () => {\r\n                    sendMessage(document);\r\n                });\r\n            }\r\n        },\r\n        didChange: defaultHandler,\r\n        willSave: defaultHandler,\r\n        willSaveWaitUntil: (event, sendMessage) => {\r\n            if (clients.ActiveClient === me) {\r\n                return me.requestWhenReady(() => sendMessage(event));\r\n            }\r\n            return Promise.resolve([]);\r\n        },\r\n        didSave: defaultHandler,\r\n        didClose: (document, sendMessage) => {\r\n            if (clients.ActiveClient === me) {\r\n                console.assert(me.TrackedDocuments.has(document));\r\n                me.TrackedDocuments.delete(document);\r\n                me.notifyWhenReady(() => sendMessage(document));\r\n            }\r\n        },\r\n\r\n        provideCompletionItem: invoke4,\r\n        resolveCompletionItem: invoke2,\r\n        provideHover: invoke3,\r\n        provideSignatureHelp: invoke3,\r\n        provideDefinition: invoke3,\r\n        provideReferences: invoke4,\r\n        provideDocumentHighlights: invoke3,\r\n        provideDocumentSymbols: invoke2,\r\n        provideWorkspaceSymbols: invoke2,\r\n        provideCodeActions: invoke4,\r\n        provideCodeLenses: invoke2,\r\n        resolveCodeLens: invoke2,\r\n        provideDocumentFormattingEdits: invoke3,\r\n        provideDocumentRangeFormattingEdits: invoke4,\r\n        provideOnTypeFormattingEdits: invoke5,\r\n        provideRenameEdits: invoke4,\r\n        provideDocumentLinks: invoke2,\r\n        resolveDocumentLink: invoke2,\r\n\r\n        // I believe the default handler will do the same thing.\r\n        // workspace: {\r\n        //     didChangeConfiguration: (sections, sendMessage) => sendMessage(sections)\r\n        // }\r\n    };\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport * as vscode from 'vscode';\r\n\r\nexport class DataBinding<T> {\r\n    private value: T;\r\n    private valueChanged = new vscode.EventEmitter<T>();\r\n    private isActive: boolean = true;\r\n\r\n    constructor(value: T) {\r\n        this.value = value;\r\n        this.isActive = true;\r\n    }\r\n\r\n    public get Value(): T {\r\n        return this.value;\r\n    }\r\n\r\n    public set Value(value: T) {\r\n        if (value !== this.value) {\r\n            this.value = value;\r\n            if (this.isActive) {\r\n                this.valueChanged.fire(this.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get ValueChanged(): vscode.Event<T> {\r\n        return this.valueChanged.event;\r\n    }\r\n\r\n    public activate(): void {\r\n        this.isActive = true;\r\n        this.valueChanged.fire(this.value);\r\n    }\r\n\r\n    public deactivate(): void {\r\n        this.isActive = false;\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.deactivate();\r\n        this.valueChanged.dispose();\r\n    }\r\n}","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as util from '../common';\r\n\r\n/**\r\n * track settings changes for telemetry\r\n */\r\ntype FilterFunction = (key: string, val: string, settings: vscode.WorkspaceConfiguration) => boolean;\r\ntype KeyValuePair = { key: string; value: string };\r\n\r\nconst maxSettingLengthForTelemetry: number = 50;\r\nlet cache: SettingsTracker = undefined;\r\n\r\nexport class SettingsTracker {\r\n    private previousCppSettings: { [key: string]: any } = {};\r\n    private resource: vscode.Uri;\r\n\r\n    constructor(resource: vscode.Uri) {\r\n        this.resource = resource;\r\n        this.collectSettings(() => true);\r\n    }\r\n\r\n    public getUserModifiedSettings(): { [key: string]: string } {\r\n        let filter: FilterFunction = (key: string, val: string, settings: vscode.WorkspaceConfiguration) => {\r\n            return !this.areEqual(val, settings.inspect(key).defaultValue);\r\n        };\r\n        return this.collectSettings(filter);\r\n    }\r\n\r\n    public getChangedSettings(): { [key: string]: string } {\r\n        let filter: FilterFunction = (key: string, val: string) => {\r\n            return !(key in this.previousCppSettings) || !this.areEqual(val, this.previousCppSettings[key]);\r\n        };\r\n        return this.collectSettings(filter);\r\n    }\r\n\r\n    private collectSettings(filter: FilterFunction): { [key: string]: string } {\r\n        let settings: vscode.WorkspaceConfiguration = vscode.workspace.getConfiguration(\"C_Cpp\", this.resource);\r\n        let result: { [key: string]: string } = {};\r\n\r\n        for (let key in settings) {\r\n            let val: any = this.getSetting(settings, key);\r\n            if (val === undefined) {\r\n                continue;\r\n            }\r\n            if (val instanceof Object && !(val instanceof Array)) {\r\n                for (let subKey in val) {\r\n                    let newKey: string = key + \".\" + subKey;\r\n                    let subVal: any = this.getSetting(settings, newKey);\r\n                    if (subVal === undefined) {\r\n                        continue;\r\n                    }\r\n                    let entry: KeyValuePair = this.filterAndSanitize(newKey, subVal, settings, filter);\r\n                    if (entry && entry.key && entry.value) {\r\n                        result[entry.key] = entry.value;\r\n                    }\r\n                }\r\n                continue;\r\n            }\r\n\r\n            let entry: KeyValuePair = this.filterAndSanitize(key, val, settings, filter);\r\n            if (entry && entry.key && entry.value) {\r\n                result[entry.key] = entry.value;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private getSetting(settings: vscode.WorkspaceConfiguration, key: string): any {\r\n        // Ignore methods and settings that don't exist\r\n        if (settings.inspect(key).defaultValue !== undefined) {\r\n            let val: any = settings.get(key);\r\n            if (val instanceof Object) {\r\n                return val; // It's a sub-section.\r\n            }\r\n\r\n            // Only return values that match the setting's type and enum (if applicable).\r\n            let curSetting: any = util.packageJson.contributes.configuration.properties[\"C_Cpp.\" + key];\r\n            if (curSetting) {\r\n                let type: string = this.typeMatch(val, curSetting[\"type\"]);\r\n                if (type) {\r\n                    if (type !== \"string\") {\r\n                        return val;\r\n                    }\r\n                    let curEnum: any[] = curSetting[\"enum\"];\r\n                    if (curEnum && curEnum.indexOf(val) === -1) {\r\n                        return \"<invalid>\";\r\n                    }\r\n                    return val;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private typeMatch(value: any, type?: string | string[]): string {\r\n        if (type) {\r\n            if (type instanceof Array) {\r\n                for (let i: number = 0; i < type.length; i++) {\r\n                    let t: string = type[i];\r\n                    if (t) {\r\n                        if (typeof value === t) {\r\n                            return t;\r\n                        }\r\n                        if (t === \"array\" && value instanceof Array) {\r\n                            return t;\r\n                        }\r\n                        if (t === \"null\" && value === null) {\r\n                            return t;\r\n                        }\r\n                    }\r\n                }\r\n            } else if (typeof type === \"string\" && typeof value === type) {\r\n                return type;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private filterAndSanitize(key: string, val: any, settings: vscode.WorkspaceConfiguration, filter: FilterFunction): KeyValuePair {\r\n        if (filter(key, val, settings)) {\r\n            let value: string;\r\n            this.previousCppSettings[key] = val;\r\n            switch (key) {\r\n                case \"clang_format_style\":\r\n                case \"clang_format_fallbackStyle\": {\r\n                    let newKey: string = key + \"2\";\r\n                    if (val) {\r\n                        switch (String(val).toLowerCase()) {\r\n                            case \"visual studio\":\r\n                            case \"llvm\":\r\n                            case \"google\":\r\n                            case \"chromium\":\r\n                            case \"mozilla\":\r\n                            case \"webkit\":\r\n                            case \"file\":\r\n                            case \"none\": {\r\n                                value = String(this.previousCppSettings[key]);\r\n                                break;\r\n                            }\r\n                            default: {\r\n                                value = \"...\";\r\n                                break;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        value = \"null\";\r\n                    }\r\n                    key = newKey;\r\n                    break;\r\n                }\r\n                case \"commentContinuationPatterns\": {\r\n                    value = this.areEqual(val, settings.inspect(key).defaultValue) ? \"<default>\" : \"...\"; // Track whether it's being used, but nothing specific about it.\r\n                    break;\r\n                }\r\n                default: {\r\n                    if (key === \"clang_format_path\" || key === \"intelliSenseCachePath\" || key.startsWith(\"default.\")) {\r\n                        value = this.areEqual(val, settings.inspect(key).defaultValue) ? \"<default>\" : \"...\"; // Track whether it's being used, but nothing specific about it.\r\n                    } else {\r\n                        value = String(this.previousCppSettings[key]);\r\n                    }\r\n                }\r\n            }\r\n            if (value && value.length > maxSettingLengthForTelemetry) {\r\n                value = value.substr(0, maxSettingLengthForTelemetry) + \"...\";\r\n            }\r\n            return {key: key, value: value};\r\n        }\r\n    }\r\n\r\n    private areEqual(value1: any, value2: any): boolean {\r\n        if (value1 instanceof Object && value2 instanceof Object) {\r\n            return JSON.stringify(value1) === JSON.stringify(value2);\r\n        }\r\n        return value1 === value2;\r\n    }\r\n}\r\n\r\nexport function getTracker(resource: vscode.Uri): SettingsTracker {\r\n    if (!cache) {\r\n        cache = new SettingsTracker(resource);\r\n    }\r\n    return cache;\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport { CppSettings } from './settings';\r\nimport { getOutputChannel } from '../logger';\r\n\r\nexport interface CommentPattern {\r\n    begin: string;\r\n    continue: string;\r\n}\r\n\r\nconst escapeChars: RegExp = /[\\\\\\^\\$\\*\\+\\?\\{\\}\\(\\)\\.\\!\\=\\|\\[\\]\\ \\/]/;  // characters that should be escaped.\r\n\r\n// Insert '\\\\' in front of regexp escape chars.\r\nfunction escape(chars: string): string {\r\n    let result: string = \"\";\r\n    for (let char of chars) {\r\n        if (char.match(escapeChars)) {\r\n            result += `\\\\${char}`;\r\n        } else {\r\n            result += char;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n// BEWARE: below are string representations of regular expressions, so the backslashes must all be escaped.\r\n\r\nfunction getMLBeginPattern(insert: string): string | undefined {\r\n    if (insert && insert.startsWith(\"/*\")) {\r\n        let match: string = escape(insert.substr(2)); // trim the leading '/*' and escape any troublesome characters.\r\n        return `^\\\\s*\\\\/\\\\*${match}(?!\\\\/)([^\\\\*]|\\\\*(?!\\\\/))*$`;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getMLSplitAfterPattern(): string {\r\n    return \"^\\\\s*\\\\*\\\\/$\";\r\n}\r\n\r\nfunction getMLContinuePattern(insert: string): string | undefined {\r\n    if (insert) {\r\n        let match: string = escape(insert.trimRight());\r\n        if (match) {\r\n            let right: string = escape(insert.substr(insert.trimRight().length));\r\n            return `^\\\\s*${match}(${right}([^\\\\*]|\\\\*(?!\\\\/))*)?$`;\r\n        }\r\n        // else: if the continuation is just whitespace, vscode already does indentation preservation.\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getMLEndPattern(insert: string): string | undefined {\r\n    if (insert) {\r\n        let match: string = escape(insert.trimRight().trimLeft());\r\n        if (match) {\r\n            return `^\\\\s*${match}[^/]*\\\\*\\\\/\\\\s*$`;\r\n        }\r\n        // else: if the continuation is just whitespace, don't mess with indentation\r\n        // since we don't know if this is a continuation line or not.\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getMLEmptyEndPattern(insert: string): string | undefined {\r\n    if (insert) {\r\n        insert = insert.trimRight();\r\n        if (insert) {\r\n            if (insert.endsWith('*')) {\r\n                insert = insert.substr(0, insert.length - 1);\r\n            }\r\n            let match: string = escape(insert.trimRight());\r\n            return `^\\\\s*${match}\\\\*\\\\/\\\\s*$`;\r\n        }\r\n        // else: if the continuation is just whitespace, don't mess with indentation\r\n        // since we don't know if this is a continuation line or not.\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getSLBeginPattern(insert: string): string | undefined {\r\n    if (insert) {\r\n        let match: string = escape(insert.trimRight());\r\n        return `^\\\\s*${match}.*$`;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getSLContinuePattern(insert: string): string | undefined {\r\n    if (insert) {\r\n        let match: string = escape(insert.trimRight());\r\n        return `^\\\\s*${match}.+$`;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getSLEndPattern(insert: string): string | undefined {\r\n    if (insert) {\r\n        let match: string = escape(insert);\r\n        let trimmed: string = escape(insert.trimRight());\r\n        if (match !== trimmed) {\r\n            match = `(${match}|${trimmed})`;\r\n        }\r\n        return `^\\\\s*${match}$`;\r\n    }\r\n    return undefined;\r\n}\r\n\r\n// When Enter is pressed while the cursor is between '/**' and '*/' on the same line.\r\nfunction getMLSplitRule(comment: CommentPattern): vscode.OnEnterRule | undefined {\r\n    if (comment) {\r\n        let beforePattern: string | undefined = getMLBeginPattern(comment.begin);\r\n        if (beforePattern) {\r\n            return {\r\n                beforeText: new RegExp(beforePattern),\r\n                afterText: new RegExp(getMLSplitAfterPattern()),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.IndentOutdent,\r\n                    appendText: comment.continue ? comment.continue : ''\r\n                }\r\n            };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\n// When Enter is pressed while the cursor is after '/**' and there is no '*/' on the same line after the cursor\r\nfunction getMLFirstLineRule(comment: CommentPattern): vscode.OnEnterRule | undefined {\r\n    if (comment) {\r\n        let beforePattern: string | undefined = getMLBeginPattern(comment.begin);\r\n        if (beforePattern) {\r\n            return {\r\n                beforeText: new RegExp(beforePattern),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.None,\r\n                    appendText: comment.continue ? comment.continue : ''\r\n                }\r\n            };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\n// When Enter is pressed while the cursor is after the continuation pattern\r\nfunction getMLContinuationRule(comment: CommentPattern): vscode.OnEnterRule | undefined {\r\n    if (comment) {\r\n        let continuePattern: string = getMLContinuePattern(comment.continue);\r\n        if (continuePattern) {\r\n            return {\r\n                beforeText: new RegExp(continuePattern),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.None,\r\n                    appendText: comment.continue.trimLeft()\r\n                }\r\n            };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\n// When Enter is pressed while the cursor is after '*/' (and '*/' plus leading whitespace is all that is on the line) \r\nfunction getMLEndRule(comment: CommentPattern): vscode.OnEnterRule | undefined {\r\n    if (comment) {\r\n        let endPattern: string = getMLEndPattern(comment.continue);\r\n        if (endPattern) {\r\n            return {\r\n                beforeText: new RegExp(endPattern),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.None,\r\n                    removeText: comment.continue.length - comment.continue.trimLeft().length\r\n                }\r\n            };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\n// When Enter is pressed while the cursor is after the continuation pattern and '*/'\r\nfunction getMLEmptyEndRule(comment: CommentPattern): vscode.OnEnterRule | undefined {\r\n    if (comment) {\r\n        let endPattern: string = getMLEmptyEndPattern(comment.continue);\r\n        if (endPattern) {\r\n            return {\r\n                beforeText: new RegExp(endPattern),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.None,\r\n                    removeText: comment.continue.length - comment.continue.trimLeft().length\r\n                }\r\n            };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\n// When the continue rule is different than the begin rule for single line comments\r\nfunction getSLFirstLineRule(comment: CommentPattern): vscode.OnEnterRule | undefined {\r\n    if (comment) {\r\n        let continuePattern: string = getSLBeginPattern(comment.begin);\r\n        if (continuePattern) {\r\n            return {\r\n                beforeText: new RegExp(continuePattern),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.None,\r\n                    appendText: comment.continue.trimLeft()\r\n                }\r\n            };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\n// When Enter is pressed while the cursor is after the continuation pattern plus at least one other character.\r\nfunction getSLContinuationRule(comment: CommentPattern): vscode.OnEnterRule | undefined {\r\n    if (comment) {\r\n        let continuePattern: string = getSLContinuePattern(comment.continue);\r\n        if (continuePattern) {\r\n            return {\r\n                beforeText: new RegExp(continuePattern),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.None,\r\n                    appendText: comment.continue.trimLeft()\r\n                }\r\n            };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\n// When Enter is pressed while the cursor is immediately after the continuation pattern\r\nfunction getSLEndRule(comment: CommentPattern): vscode.OnEnterRule | undefined {\r\n    if (comment) {\r\n        let endPattern: string = getSLEndPattern(comment.continue);\r\n        if (endPattern) {\r\n            return {\r\n                beforeText: new RegExp(endPattern),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.None,\r\n                    removeText: comment.continue.length - comment.continue.trimLeft().length\r\n                }\r\n            };\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\ninterface Rules {\r\n    begin: vscode.OnEnterRule[];\r\n    continue: vscode.OnEnterRule[];\r\n    end: vscode.OnEnterRule[];\r\n}\r\n\r\nexport function getLanguageConfig(languageId: string, resource?: vscode.Uri): vscode.LanguageConfiguration {\r\n    let settings: CppSettings = new CppSettings(resource);\r\n    let patterns: (string | CommentPattern)[] = settings.commentContinuationPatterns;\r\n    return getLanguageConfigFromPatterns(languageId, patterns);\r\n}\r\n\r\nexport function getLanguageConfigFromPatterns(languageId: string, patterns: (string | CommentPattern)[]): vscode.LanguageConfiguration {\r\n    let beginPatterns: string[] = [];       // avoid duplicate rules\r\n    let continuePatterns: string[] = [];    // avoid duplicate rules\r\n    let duplicates: boolean = false;\r\n    let beginRules: vscode.OnEnterRule[] = [];\r\n    let continueRules: vscode.OnEnterRule[] = [];\r\n    let endRules: vscode.OnEnterRule[] = [];\r\n    patterns.forEach(pattern => {\r\n        let c: CommentPattern = (typeof pattern === \"string\") ? { begin: pattern, continue: pattern.startsWith('/*') ? \" * \" : pattern } : <CommentPattern>pattern;\r\n        let r: Rules = constructCommentRules(c, languageId);\r\n        if (beginPatterns.indexOf(c.begin) < 0) {\r\n            if (r.begin && r.begin.length > 0) {\r\n                beginRules = beginRules.concat(r.begin);\r\n            }\r\n            beginPatterns.push(c.begin);\r\n        } else {\r\n            duplicates = true;\r\n        }\r\n        if (continuePatterns.indexOf(c.continue) < 0) {\r\n            if (r.continue && r.continue.length > 0) {\r\n                continueRules = continueRules.concat(r.continue);\r\n            }\r\n            if (r.end && r.end.length > 0) {\r\n                endRules = endRules.concat(r.end);\r\n            }\r\n            continuePatterns.push(c.continue);\r\n        }\r\n    });\r\n    if (duplicates) {\r\n        getOutputChannel().appendLine(\"Duplicate multiline comment patterns detected.\");\r\n    }\r\n    return { onEnterRules: beginRules.concat(continueRules).concat(endRules).filter(e => (e)) };    // Remove any 'undefined' entries\r\n}\r\n\r\nfunction constructCommentRules(comment: CommentPattern, languageId: string): Rules {\r\n    if (comment && comment.begin && comment.begin.startsWith('/*') && (languageId === 'c' || languageId === 'cpp')) {\r\n        return {\r\n            begin: [\r\n                getMLSplitRule(comment),\r\n                getMLFirstLineRule(comment)\r\n            ],\r\n            continue: [ getMLContinuationRule(comment) ],\r\n            end: [\r\n                getMLEmptyEndRule(comment),\r\n                getMLEndRule(comment)\r\n            ]\r\n        };\r\n    } else if (comment && comment.begin && comment.begin.startsWith('//') && languageId === 'cpp') {\r\n        return {\r\n            begin: (comment.begin === comment.continue) ? [] : [ getSLFirstLineRule(comment) ],\r\n            continue: [ getSLContinuationRule(comment) ],\r\n            end: [ getSLEndRule(comment) ]\r\n        };\r\n    }\r\n    return {\r\n        begin: [],\r\n        continue: [],\r\n        end: []\r\n    };\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as fs from 'fs';\r\nimport * as os from 'os';\r\n\r\nexport class LinuxDistribution {\r\n    constructor(public name, public version) { }\r\n\r\n    /**\r\n     * There is no standard way on Linux to find the distribution name and version.\r\n     * Recently, systemd has pushed to standardize the os-release file. This has\r\n     * seen adoption in \"recent\" versions of all major distributions.\r\n     * https://www.freedesktop.org/software/systemd/man/os-release.html\r\n     */\r\n    public static GetDistroInformation(): Promise<LinuxDistribution> {\r\n        let linuxDistro: Promise<LinuxDistribution>;\r\n\r\n        // First check /etc/os-release and only fallback to /usr/lib/os-release\r\n        // as per the os-release documentation.\r\n        linuxDistro = LinuxDistribution.getDistroInformationFromFile('/etc/os-release')\r\n            .catch(() => {\r\n                return LinuxDistribution.getDistroInformationFromFile('/usr/lib/os-release');\r\n            }).catch(() => {\r\n                // couldn't get distro information\r\n                return Promise.resolve(new LinuxDistribution('unknown', 'unknown'));\r\n            });\r\n\r\n        return linuxDistro;\r\n    }\r\n\r\n    private static getDistroInformationFromFile(path: string): Promise<LinuxDistribution> {\r\n        return new Promise<LinuxDistribution>((resolve, reject) => {\r\n            fs.readFile(path, 'utf8', (error, data) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                resolve(LinuxDistribution.getDistroInformation(data));\r\n            });\r\n        });\r\n    }\r\n\r\n    // Only public for tests.\r\n    public static getDistroInformation(data: string): LinuxDistribution {\r\n        const idKey: string = 'ID';\r\n        const versionKey: string = 'VERSION_ID';\r\n        let distroName: string = 'unknown';\r\n        let distroVersion: string = 'unknown';\r\n\r\n        let keyValues: string[] = data.split(os.EOL);\r\n        for (let i: number = 0; i < keyValues.length; i++) {\r\n            let keyValue: string[] = keyValues[i].split('=');\r\n            if (keyValue.length === 2) {\r\n                if (keyValue[0] === idKey) {\r\n                    distroName = keyValue[1];\r\n                } else if (keyValue[0] === versionKey) {\r\n                    distroVersion = keyValue[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return new LinuxDistribution(distroName, distroVersion);\r\n    }\r\n}\r\n","'use strict';\nvar isWindows = process.platform === 'win32';\nvar trailingSlashRe = isWindows ? /[^:]\\\\$/ : /.\\/$/;\n\n// https://github.com/nodejs/node/blob/3e7a14381497a3b73dda68d05b5130563cdab420/lib/os.js#L25-L43\nmodule.exports = function () {\n\tvar path;\n\n\tif (isWindows) {\n\t\tpath = process.env.TEMP ||\n\t\t\tprocess.env.TMP ||\n\t\t\t(process.env.SystemRoot || process.env.windir) + '\\\\temp';\n\t} else {\n\t\tpath = process.env.TMPDIR ||\n\t\t\tprocess.env.TMP ||\n\t\t\tprocess.env.TEMP ||\n\t\t\t'/tmp';\n\t}\n\n\tif (trailingSlashRe.test(path)) {\n\t\tpath = path.slice(0, -1);\n\t}\n\n\treturn path;\n};\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport { PackageVersion } from './packageVersion';\r\nimport * as util from './common';\r\nimport { PlatformInformation } from './platform';\r\nimport { OutgoingHttpHeaders } from 'http';\r\n\r\nconst testingInsidersVsixInstall: boolean = false; // Change this to true to enable testing of the Insiders vsix installation.\r\n\r\n/**\r\n * The object representation of a Build Asset. Each Asset corresponds to information about a release file on GitHub.\r\n */\r\ninterface Asset {\r\n    name: string;\r\n    browser_download_url: string;\r\n}\r\n\r\n/**\r\n * The object representation of a release in the GitHub API's release JSON.\r\n * Named Build so as to reduce confusion between a \"Release\" release and \"Insiders\" release.\r\n */\r\ninterface Build {\r\n    name: string;\r\n    assets: Asset[];\r\n}\r\n\r\n/**\r\n* Search each Asset by name to retrieve the download URL for a VSIX package\r\n* @param vsixName The name of the VSIX to search for\r\n* @return The download URL of the VSIX\r\n*/\r\nfunction getVsixDownloadUrl(build: Build, vsixName: string): string {\r\n    const downloadUrl: string = build.assets.find(asset => {\r\n        return asset.name === vsixName;\r\n    }).browser_download_url;\r\n    if (!downloadUrl) {\r\n        throw new Error('Failed to find VSIX: ' + vsixName + ' in build: ' + build.name);\r\n    }\r\n    return downloadUrl;\r\n}\r\n\r\n/**\r\n * Determine whether an object is of type Asset.\r\n * @param input Incoming object.\r\n * @return Whether input is of type Asset.\r\n */\r\nfunction isAsset(input: any): input is Asset {\r\n    return input && input.name && typeof(input.name) === \"string\" &&\r\n        input.browser_download_url && typeof(input.browser_download_url) === \"string\";\r\n}\r\n\r\n/**\r\n * Determine whether an object is of type Build. Note that earlier releases of the extension\r\n * do not have 4 or greater Assets (Mac, Win, Linux 32/64). Only call this on more recent Builds.\r\n * @param input Incoming object.\r\n * @return Whether input is of type Build.\r\n */\r\nfunction isBuild(input: any): input is Build {\r\n    return input && input.name && typeof(input.name) === \"string\" && isArrayOfAssets(input.assets) && input.assets.length >= 4;\r\n}\r\n\r\n/**\r\n * Determine whether an object is of type Asset[].\r\n * @param input Incoming object.\r\n * @return Whether input is of type Asset[].\r\n */\r\nfunction isArrayOfAssets(input: any): input is Asset[] {\r\n    return input instanceof Array && input.every(item => isAsset(item));\r\n}\r\n\r\n/**\r\n * Determine whether an object is of type Build[].\r\n * @param input Incoming object.\r\n * @return Whether input is of type Build[].\r\n */\r\nfunction isArrayOfBuilds(input: any): input is Build[] {\r\n    if (!input || !(input instanceof Array) || input.length === 0) {\r\n        return false;\r\n    }\r\n    // Only check the five most recent builds for validity -- no need to check all of them\r\n    for (let i: number = 0; i < 5 && i < input.length; i++) {\r\n        if (!isBuild(input[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Match the user's platform information to the VSIX name relevant to them.\r\n * @param info Information about the user's operating system.\r\n * @return VSIX filename for the extension's releases matched to the user's platform.\r\n */\r\nfunction vsixNameForPlatform(info: PlatformInformation): string {\r\n    const vsixName: string = function(platformInfo): string {\r\n        switch (platformInfo.platform) {\r\n            case 'win32': return 'cpptools-win32.vsix';\r\n            case 'darwin': return 'cpptools-osx.vsix';\r\n            default: {\r\n                switch (platformInfo.architecture) {\r\n                    case 'x86_64': return 'cpptools-linux.vsix';\r\n                    case 'x86':\r\n                    case 'i386':\r\n                    case 'i686': return 'cpptools-linux32.vsix';\r\n                }\r\n            }\r\n        }\r\n    }(info);\r\n    if (!vsixName) {\r\n        throw new Error('Failed to match VSIX name for: ' + info.platform + ':' + info.architecture);\r\n    }\r\n    return vsixName;\r\n}\r\n\r\n/**\r\n * Interface for return value of getTargetBuildInfo containing the download URL and version of a Build.\r\n */\r\nexport interface BuildInfo {\r\n    downloadUrl: string;\r\n    name: string;\r\n}\r\n\r\n/**\r\n * Use the GitHub API to retrieve the download URL of the extension version the user should update to, if any.\r\n * @param updateChannel The user's updateChannel setting.\r\n * @return Download URL for the extension VSIX package that the user should install. If the user\r\n * does not need to update, resolves to undefined.\r\n */\r\nexport async function getTargetBuildInfo(updateChannel: string): Promise<BuildInfo> {\r\n    return getReleaseJson()\r\n        .then(builds => {\r\n            if (!builds || builds.length === 0) {\r\n                return undefined;\r\n            }\r\n\r\n            // If the user version is greater than or incomparable to the latest available verion then there is no need to update\r\n            // Allows testing pre-releases without accidentally downgrading to the latest version\r\n            const userVersion: PackageVersion = new PackageVersion(util.packageJson.version);\r\n            const latestVersion: PackageVersion = new PackageVersion(builds[0].name);\r\n            if (!testingInsidersVsixInstall && (userVersion.isGreaterThan(latestVersion) || (userVersion.suffix && userVersion.suffix !== 'insiders'))) {\r\n                return undefined;\r\n            }\r\n\r\n            return getTargetBuild(builds, userVersion, updateChannel);\r\n        })\r\n        .then(async build => {\r\n            if (!build) {\r\n                return Promise.resolve(undefined);\r\n            }\r\n            try {\r\n                const platformInfo: PlatformInformation = await PlatformInformation.GetPlatformInformation();\r\n                const vsixName: string = vsixNameForPlatform(platformInfo);\r\n                const downloadUrl: string = getVsixDownloadUrl(build, vsixName);\r\n                return { downloadUrl: downloadUrl, name: build.name };\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n}\r\n\r\n/**\r\n * Determines whether there exists a Build in the given Build[] that should be installed.\r\n * @param builds The GitHub release list parsed as an array of Builds.\r\n * @param userVersion The verion of the extension that the user is running.\r\n * @param updateChannel The user's updateChannel setting.\r\n * @return The Build if the user should update to it, otherwise undefined.\r\n */\r\nfunction getTargetBuild(builds: Build[], userVersion: PackageVersion, updateChannel: string): Build {\r\n    // Get predicates to determine the build to install, if any\r\n    let needsUpdate: (installed: PackageVersion, target: PackageVersion) => boolean;\r\n    let useBuild: (build: Build) => boolean;\r\n    if (updateChannel === 'Insiders') {\r\n        needsUpdate = (installed: PackageVersion, target: PackageVersion) => { return testingInsidersVsixInstall || target.isGreaterThan(installed); };\r\n        useBuild = (build: Build): boolean => { return true; };\r\n    } else if (updateChannel === 'Default') {\r\n        needsUpdate = function(installed: PackageVersion, target: PackageVersion): boolean { return installed.isGreaterThan(target); };\r\n        useBuild = (build: Build): boolean => { return build.name.indexOf('-') === -1; };\r\n    } else {\r\n        throw new Error('Incorrect updateChannel setting provided');\r\n    }\r\n\r\n    // Get the build to install\r\n    const targetBuild: Build = builds.find((build) => useBuild(build));\r\n    if (!targetBuild) {\r\n        throw new Error('Failed to determine installation candidate');\r\n    }\r\n\r\n    // Check current version against target's version to determine if the installation should happen\r\n    const targetVersion: PackageVersion = new PackageVersion(targetBuild.name);\r\n    if (needsUpdate(userVersion, targetVersion)) {\r\n        return targetBuild;\r\n    }\r\n    return undefined;\r\n}\r\n\r\ninterface Rate {\r\n    remaining: number;\r\n}\r\n\r\ninterface RateLimit {\r\n    rate: Rate;\r\n}\r\n\r\nfunction isRate(input: any): input is Rate {\r\n    return input && util.isNumber(input.remaining);\r\n}\r\n\r\nfunction isRateLimit(input: any): input is RateLimit {\r\n    return input && isRate(input.rate);\r\n}\r\n\r\nasync function getRateLimit(): Promise<RateLimit> {\r\n    const header: OutgoingHttpHeaders = { 'User-Agent': 'vscode-cpptools' };\r\n    const data: string = await util.downloadFileToStr('https://api.github.com/rate_limit', header)\r\n        .catch((error) => {\r\n            if (error && error.code && error.code !== \"ENOENT\") {\r\n                // Only throw if the user is connected to the Internet.\r\n                throw new Error('Failed to download rate limit JSON');\r\n            }\r\n        });\r\n    if (!data) {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    let rateLimit: any;\r\n    try {\r\n        rateLimit = JSON.parse(data);\r\n    } catch (error) {\r\n        throw new Error('Failed to parse rate limit JSON');\r\n    }\r\n\r\n    if (isRateLimit(rateLimit)) {\r\n        return Promise.resolve(rateLimit);\r\n    } else {\r\n        throw new Error('Rate limit JSON is not of type RateLimit');\r\n    }\r\n}\r\n\r\nasync function rateLimitExceeded(): Promise<boolean> {\r\n    const rateLimit: RateLimit = await getRateLimit();\r\n    return rateLimit && rateLimit.rate.remaining <= 0;\r\n}\r\n\r\n/**\r\n * Download and parse the release list JSON from the GitHub API into a Build[].\r\n * @return Information about the released builds of the C/C++ extension.\r\n */\r\nasync function getReleaseJson(): Promise<Build[]> {\r\n    if (await rateLimitExceeded()) {\r\n        throw new Error('Failed to stay within GitHub API rate limit');\r\n    }\r\n\r\n    // Download release JSON\r\n    const releaseUrl: string = 'https://api.github.com/repos/Microsoft/vscode-cpptools/releases';\r\n    const header: OutgoingHttpHeaders = { 'User-Agent': 'vscode-cpptools' };\r\n\r\n    const data: string = await util.downloadFileToStr(releaseUrl, header)\r\n        .catch((error) => {\r\n            if (error && error.code && error.code !== \"ENOENT\") {\r\n                // Only throw if the user is connected to the Internet.\r\n                throw new Error('Failed to download release JSON');\r\n            }\r\n        });\r\n    if (!data) {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    // Parse the file\r\n    let releaseJson: any;\r\n    try {\r\n        releaseJson = JSON.parse(data);\r\n    } catch (error) {\r\n        throw new Error('Failed to parse release JSON');\r\n    }\r\n\r\n    // Type check\r\n    if (isArrayOfBuilds(releaseJson)) {\r\n        return releaseJson;\r\n    } else {\r\n        throw new Error('Release JSON is not of type Build[]');\r\n    }\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport { execChildProcess } from '../common';\r\nimport { PsProcessParser } from './nativeAttach';\r\nimport { AttachItem, showQuickPick } from './attachQuickPick';\r\n\r\nimport * as debugUtils from './utils';\r\nimport * as fs from 'fs';\r\nimport * as os from 'os';\r\nimport * as path from 'path';\r\nimport * as util from '../common';\r\nimport * as vscode from 'vscode';\r\n\r\nexport interface AttachItemsProvider {\r\n    getAttachItems(): Promise<AttachItem[]>;\r\n}\r\n\r\nexport class AttachPicker {\r\n    constructor(private attachItemsProvider: AttachItemsProvider) { }\r\n\r\n    public ShowAttachEntries(): Promise<string> {\r\n        return util.isExtensionReady().then(ready => {\r\n            if (!ready) {\r\n                util.displayExtensionNotReadyPrompt();\r\n            } else {\r\n                return showQuickPick(() => this.attachItemsProvider.getAttachItems());\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class RemoteAttachPicker {\r\n    constructor() {\r\n        this._channel = vscode.window.createOutputChannel('remote-attach');\r\n    }\r\n\r\n    private _channel: vscode.OutputChannel = null;\r\n\r\n    public ShowAttachEntries(config: any): Promise<string> {\r\n        return util.isExtensionReady().then(ready => {\r\n            if (!ready) {\r\n                util.displayExtensionNotReadyPrompt();\r\n            } else {\r\n                this._channel.clear();\r\n\r\n                let pipeTransport: any = config ? config.pipeTransport : null;\r\n\r\n                if (pipeTransport === null) {\r\n                    return Promise.reject<string>(new Error(\"Chosen debug configuration does not contain pipeTransport\"));\r\n                }\r\n\r\n                let pipeProgram: string = null;\r\n\r\n                if (os.platform() === 'win32' &&\r\n                    pipeTransport.pipeProgram &&\r\n                    !fs.existsSync(pipeTransport.pipeProgram)) {\r\n                    const pipeProgramStr: string = pipeTransport.pipeProgram.toLowerCase().trim();\r\n                    const expectedArch: debugUtils.ArchType = debugUtils.ArchType[process.arch];\r\n\r\n                    // Check for pipeProgram\r\n                    if (!fs.existsSync(config.pipeTransport.pipeProgram)) {\r\n                        pipeProgram = debugUtils.ArchitectureReplacer.checkAndReplaceWSLPipeProgram(pipeProgramStr, expectedArch);\r\n                    }\r\n\r\n                    // If pipeProgram does not get replaced and there is a pipeCwd, concatenate with pipeProgramStr and attempt to replace.\r\n                    if (!pipeProgram && config.pipeTransport.pipeCwd) {\r\n                        const pipeCwdStr: string = config.pipeTransport.pipeCwd.toLowerCase().trim();\r\n                        const newPipeProgramStr: string = path.join(pipeCwdStr, pipeProgramStr);\r\n\r\n                        if (!fs.existsSync(newPipeProgramStr)) {\r\n                            pipeProgram = debugUtils.ArchitectureReplacer.checkAndReplaceWSLPipeProgram(newPipeProgramStr, expectedArch);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!pipeProgram) {\r\n                    pipeProgram = pipeTransport.pipeProgram;\r\n                }\r\n\r\n                let pipeArgs: string[] = pipeTransport.pipeArgs;\r\n\r\n                let argList: string = RemoteAttachPicker.createArgumentList(pipeArgs);\r\n\r\n                let pipeCmd: string = `\"${pipeProgram}\" ${argList}`;\r\n\r\n                return this.getRemoteOSAndProcesses(pipeCmd)\r\n                    .then(processes => {\r\n                        let attachPickOptions: vscode.QuickPickOptions = {\r\n                            matchOnDetail: true,\r\n                            matchOnDescription: true,\r\n                            placeHolder: \"Select the process to attach to\"\r\n                        };\r\n\r\n                        return vscode.window.showQuickPick(processes, attachPickOptions)\r\n                            .then(item => {\r\n                                return item ? item.id : Promise.reject<string>(new Error(\"Process not selected.\"));\r\n                            });\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    private getRemoteOSAndProcesses(pipeCmd: string): Promise<AttachItem[]> {\r\n        // Commands to get OS and processes\r\n        const command: string = `sh -c \"uname && if [ $(uname) = \\\\\\\"Linux\\\\\\\" ] ; then ${PsProcessParser.psLinuxCommand} ; elif [ $(uname) = \\\\\\\"Darwin\\\\\\\" ] ; ` +\r\n            `then ${PsProcessParser.psDarwinCommand}; fi\"`;\r\n\r\n        // Must use single quotes around ${command}. Linux systems evaluate $() within double-quotes.\r\n        return execChildProcess(`${pipeCmd} '${command}'`, null, this._channel).then(output => {\r\n            // OS will be on first line\r\n            // Processess will follow if listed\r\n            let lines: string[] = output.split(/\\r?\\n/);\r\n\r\n            if (lines.length === 0) {\r\n                return Promise.reject<AttachItem[]>(new Error(\"Pipe transport failed to get OS and processes.\"));\r\n            } else {\r\n                let remoteOS: string = lines[0].replace(/[\\r\\n]+/g, '');\r\n\r\n                if (remoteOS !== \"Linux\" && remoteOS !== \"Darwin\") {\r\n                    return Promise.reject<AttachItem[]>(new Error(`Operating system \"${remoteOS}\" not supported.`));\r\n                }\r\n\r\n                // Only got OS from uname\r\n                if (lines.length === 1) {\r\n                    return Promise.reject<AttachItem[]>(new Error(\"Transport attach could not obtain processes list.\"));\r\n                } else {\r\n                    let processes: string[] = lines.slice(1);\r\n                    return PsProcessParser.ParseProcessFromPsArray(processes)\r\n                        .sort((a, b) => {\r\n                            if (a.name === undefined) {\r\n                                if (b.name === undefined) {\r\n                                    return 0;\r\n                                }\r\n                                return 1;\r\n                            }\r\n                            if (b.name === undefined) {\r\n                                return -1;\r\n                            }\r\n                            let aLower: string = a.name.toLowerCase();\r\n                            let bLower: string = b.name.toLowerCase();\r\n                            if (aLower === bLower) {\r\n                                return 0;\r\n                            }\r\n                            return aLower < bLower ? -1 : 1;\r\n                        })\r\n                        .map(p => p.toAttachItem());\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private static createArgumentList(args: string[]): string {\r\n        let argsString: string = \"\";\r\n\r\n        for (let arg of args) {\r\n            if (argsString) {\r\n                argsString += \" \";\r\n            }\r\n            argsString += `\"${arg}\"`;\r\n        }\r\n\r\n        return argsString;\r\n    }\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as util from '../common';\r\nimport * as vscode from 'vscode';\r\n\r\nclass RefreshButton implements vscode.QuickInputButton {\r\n    get iconPath(): { dark: vscode.Uri; light: vscode.Uri } {\r\n        const refreshImagePathDark: string = util.getExtensionFilePath(\"assets/Refresh_inverse.svg\");\r\n        const refreshImagePathLight: string = util.getExtensionFilePath(\"assets/Refresh.svg\");\r\n\r\n        return {\r\n            dark: vscode.Uri.file(refreshImagePathDark),\r\n            light: vscode.Uri.file(refreshImagePathLight)\r\n        };\r\n    }\r\n\r\n    get tooltip(): string {\r\n        return \"Refresh process list\";\r\n    }\r\n}\r\n\r\nexport interface AttachItem extends vscode.QuickPickItem {\r\n    id: string;\r\n}\r\n\r\nexport function showQuickPick(getAttachItems: () => Promise<AttachItem[]>): Promise<string> {\r\n    return getAttachItems().then(processEntries => {\r\n        return new Promise<string>((resolve, reject) => {\r\n            let quickPick: vscode.QuickPick<AttachItem> = vscode.window.createQuickPick<AttachItem>();\r\n            quickPick.title = \"Attach to process\";\r\n            quickPick.canSelectMany = false;\r\n            quickPick.matchOnDescription = true;\r\n            quickPick.matchOnDetail = true;\r\n            quickPick.placeholder = \"Select the process to attach to\";\r\n            quickPick.items = processEntries;\r\n            quickPick.buttons = [new RefreshButton()];\r\n\r\n            let disposables: vscode.Disposable[] = [];\r\n\r\n            quickPick.onDidTriggerButton(button => {\r\n                getAttachItems().then(processEntries => quickPick.items = processEntries);\r\n            }, undefined, disposables);\r\n\r\n            quickPick.onDidAccept(() => {\r\n                if (quickPick.selectedItems.length !== 1) {\r\n                    reject(new Error(\"Process not selected\"));\r\n                }\r\n\r\n                let selectedId: string = quickPick.selectedItems[0].id;\r\n\r\n                disposables.forEach(item => item.dispose());\r\n                quickPick.dispose();\r\n\r\n                resolve(selectedId);\r\n            }, undefined, disposables);\r\n\r\n            quickPick.onDidHide(() => {\r\n                disposables.forEach(item => item.dispose());\r\n                quickPick.dispose();\r\n\r\n                reject(new Error(\"Process not selected.\"));\r\n            }, undefined, disposables);\r\n\r\n            quickPick.show();\r\n        });\r\n    });\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as debugUtils from './utils';\r\nimport * as os from 'os';\r\nimport * as path from 'path';\r\nimport * as vscode from 'vscode';\r\nimport { getBuildTasks, BuildTaskDefinition } from '../LanguageServer/extension';\r\nimport * as util from '../common';\r\nimport * as fs from 'fs';\r\nimport * as Telemetry from '../telemetry';\r\nimport { buildAndDebugActiveFileStr } from './extension';\r\n\r\nimport { IConfiguration, IConfigurationSnippet, DebuggerType, MIConfigurations, WindowsConfigurations, WSLConfigurations, PipeTransportConfigurations } from './configurations';\r\nimport { parse } from 'jsonc-parser';\r\nimport { PlatformInformation } from '../platform';\r\n\r\nfunction isDebugLaunchStr(str: string): boolean {\r\n    return str === \"(gdb) Launch\" || str === \"(lldb) Launch\" || str === \"(Windows) Launch\";\r\n}\r\n\r\n/*\r\n * Retrieves configurations from a provider and displays them in a quickpick menu to be selected.\r\n * Ensures that the selected configuration's preLaunchTask (if existent) is populated in the user's task.json.\r\n * Automatically starts debugging for \"Build and Debug\" configurations.\r\n */\r\nexport class QuickPickConfigurationProvider implements vscode.DebugConfigurationProvider {\r\n    private underlyingProvider: vscode.DebugConfigurationProvider;\r\n\r\n    public constructor(provider: CppConfigurationProvider) {\r\n        this.underlyingProvider = provider;\r\n    }\r\n\r\n    async provideDebugConfigurations(folder: vscode.WorkspaceFolder | undefined, token?: vscode.CancellationToken): Promise<vscode.DebugConfiguration[]> {\r\n        const configs: vscode.DebugConfiguration[] = await this.underlyingProvider.provideDebugConfigurations(folder, token);\r\n        const defaultConfig: vscode.DebugConfiguration = configs.find(config => { return isDebugLaunchStr(config.name); });\r\n        console.assert(defaultConfig);\r\n        const editor: vscode.TextEditor = vscode.window.activeTextEditor;\r\n        if (!editor || !util.fileIsCOrCppSource(editor.document.fileName) || configs.length <= 1) {\r\n            return [defaultConfig];\r\n        }\r\n        interface MenuItem extends vscode.QuickPickItem {\r\n            configuration: vscode.DebugConfiguration;\r\n        }\r\n\r\n        const items: MenuItem[] = configs.map<MenuItem>(config => {\r\n            let menuItem: MenuItem = {label: config.name, configuration: config};\r\n            // Rename the menu item for the default configuration as its name is non-descriptive.\r\n            if (isDebugLaunchStr(menuItem.label)) {\r\n                menuItem.label = \"Default Configuration\";\r\n            }\r\n            return menuItem;\r\n        });\r\n\r\n        const selection: MenuItem = await vscode.window.showQuickPick(items, {placeHolder: \"Select a configuration\"});\r\n        if (!selection) {\r\n            throw new Error(); // User canceled it.\r\n        }\r\n        if (selection.label.startsWith(\"cl.exe\")) {\r\n            if (!process.env.DevEnvDir || process.env.DevEnvDir.length === 0) {\r\n                vscode.window.showErrorMessage('cl.exe build and debug is only usable when VS Code is run from the Developer Command Prompt for VS.');\r\n                throw new Error();\r\n            }\r\n        }\r\n        if (selection.label.indexOf(buildAndDebugActiveFileStr()) !== -1 && selection.configuration.preLaunchTask) {\r\n            try {\r\n                await util.ensureBuildTaskExists(selection.configuration.preLaunchTask);\r\n                await vscode.debug.startDebugging(folder, selection.configuration);\r\n                Telemetry.logDebuggerEvent(\"buildAndDebug\", { \"success\": \"true\" });\r\n            } catch (e) {\r\n                Telemetry.logDebuggerEvent(\"buildAndDebug\", { \"success\": \"false\" });\r\n            }\r\n        }\r\n        return [selection.configuration];\r\n    }\r\n\r\n    resolveDebugConfiguration(folder: vscode.WorkspaceFolder | undefined, config: vscode.DebugConfiguration, token?: vscode.CancellationToken): vscode.ProviderResult<vscode.DebugConfiguration> {\r\n        return this.underlyingProvider.resolveDebugConfiguration(folder, config, token);\r\n    }\r\n}\r\n\r\nclass CppConfigurationProvider implements vscode.DebugConfigurationProvider {\r\n    private type: DebuggerType;\r\n    private provider: IConfigurationAssetProvider;\r\n\r\n    public constructor(provider: IConfigurationAssetProvider, type: DebuggerType) {\r\n        this.provider = provider;\r\n        this.type = type;\r\n    }\r\n\r\n    /**\r\n\t * Returns a list of initial debug configurations based on contextual information, e.g. package.json or folder.\r\n\t */\r\n    async provideDebugConfigurations(folder: vscode.WorkspaceFolder | undefined, token?: vscode.CancellationToken): Promise<vscode.DebugConfiguration[]> {\r\n        let buildTasks: vscode.Task[] = await getBuildTasks(); \r\n        if (buildTasks.length === 0) {\r\n            return Promise.resolve(this.provider.getInitialConfigurations(this.type));\r\n        }\r\n        const defaultConfig: vscode.DebugConfiguration = this.provider.getInitialConfigurations(this.type).find(config => {\r\n            return isDebugLaunchStr(config.name);\r\n        });\r\n        console.assert(defaultConfig, \"Could not find default debug configuration.\");\r\n\r\n        const platformInfo: PlatformInformation = await PlatformInformation.GetPlatformInformation();\r\n        const platform: string = platformInfo.platform;\r\n\r\n        // Filter out build tasks that don't match the currently selectede debug configuration type.\r\n        buildTasks = buildTasks.filter((task: vscode.Task) => {\r\n            if (defaultConfig.name === \"(Windows) Launch\") {\r\n                if (task.name.startsWith(\"cl.exe\")) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                if (!task.name.startsWith(\"cl.exe\")) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n\r\n        // Generate new configurations for each build task.\r\n        // Generating a task is async, therefore we must *await* *all* map(task => config) Promises to resolve.\r\n        let configs: vscode.DebugConfiguration[] = await Promise.all(buildTasks.map<Promise<vscode.DebugConfiguration>>(async task => {\r\n            const definition: BuildTaskDefinition = task.definition as BuildTaskDefinition;\r\n            const compilerName: string = path.basename(definition.compilerPath);\r\n\r\n            let newConfig: vscode.DebugConfiguration = Object.assign({}, defaultConfig); // Copy enumerables and properties\r\n\r\n            newConfig.name = compilerName + buildAndDebugActiveFileStr();\r\n            newConfig.preLaunchTask = task.name;\r\n            newConfig.externalConsole = false;\r\n            const exeName: string = path.join(\"${fileDirname}\", \"${fileBasenameNoExtension}\");\r\n            newConfig.program = platform === \"win32\" ? exeName + \".exe\" : exeName;\r\n\r\n            return new Promise<vscode.DebugConfiguration>(resolve => {\r\n                if (platform === \"darwin\") {\r\n                    return resolve(newConfig);\r\n                } else {\r\n                    let debuggerName: string;\r\n                    if (compilerName.startsWith(\"clang\")) {\r\n                        newConfig.MIMode = \"lldb\";\r\n                        const suffixIndex: number = compilerName.indexOf(\"-\");\r\n                        const suffix: string = suffixIndex === -1 ? \"\" : compilerName.substr(suffixIndex);\r\n                        debuggerName = \"lldb-mi\" + suffix;\r\n                    } else if (compilerName === \"cl.exe\") {\r\n                        newConfig.miDebuggerPath = undefined;\r\n                        newConfig.type = \"cppvsdbg\";\r\n                        return resolve(newConfig);\r\n                    } else {\r\n                        debuggerName = \"gdb\";\r\n                    }\r\n        \r\n                    if (platform === \"win32\") {\r\n                        debuggerName += \".exe\";\r\n                    }\r\n        \r\n                    const compilerDirname: string = path.dirname(definition.compilerPath);\r\n                    const debuggerPath: string = path.join(compilerDirname, debuggerName);\r\n                    fs.stat(debuggerPath, (err, stats: fs.Stats) => {\r\n                        if (!err && stats && stats.isFile) {\r\n                            newConfig.miDebuggerPath = debuggerPath;\r\n                        } else {\r\n                            // TODO should probably resolve a missing debugger in a more graceful fashion for win32.\r\n                            newConfig.miDebuggerPath = path.join(\"/usr\", \"bin\", debuggerName);\r\n                        }\r\n                        return resolve(newConfig);\r\n                    });\r\n                }\r\n            });\r\n        }));\r\n        configs.push(defaultConfig);\r\n        return configs;\r\n    }\r\n\r\n    /**\r\n\t * Try to add all missing attributes to the debug configuration being launched.\r\n\t */\r\n    resolveDebugConfiguration(folder: vscode.WorkspaceFolder | undefined, config: vscode.DebugConfiguration, token?: vscode.CancellationToken): vscode.ProviderResult<vscode.DebugConfiguration> {\r\n        if (config) {\r\n            // Fail if cppvsdbg type is running on non-Windows\r\n            if (config.type === 'cppvsdbg' && os.platform() !== 'win32') {\r\n                vscode.window.showErrorMessage(\"Debugger of type: 'cppvsdbg' is only available on Windows. Use type: 'cppdbg' on the current OS platform.\");\r\n                return undefined;\r\n            }\r\n\r\n            // Modify WSL config for OpenDebugAD7\r\n            if (os.platform() === 'win32' &&\r\n                config.pipeTransport &&\r\n                config.pipeTransport.pipeProgram) {\r\n                let replacedPipeProgram: string = null;\r\n                const pipeProgramStr: string = config.pipeTransport.pipeProgram.toLowerCase().trim();\r\n\r\n                // OpenDebugAD7 is a 32-bit process. Make sure the WSL pipe transport is using the correct program.\r\n                replacedPipeProgram = debugUtils.ArchitectureReplacer.checkAndReplaceWSLPipeProgram(pipeProgramStr, debugUtils.ArchType.ia32);\r\n\r\n                // If pipeProgram does not get replaced and there is a pipeCwd, concatenate with pipeProgramStr and attempt to replace.\r\n                if (!replacedPipeProgram && !path.isAbsolute(pipeProgramStr) && config.pipeTransport.pipeCwd) {\r\n                    const pipeCwdStr: string = config.pipeTransport.pipeCwd.toLowerCase().trim();\r\n                    const newPipeProgramStr: string = path.join(pipeCwdStr, pipeProgramStr);\r\n\r\n                    replacedPipeProgram = debugUtils.ArchitectureReplacer.checkAndReplaceWSLPipeProgram(newPipeProgramStr, debugUtils.ArchType.ia32);\r\n                }\r\n\r\n                if (replacedPipeProgram) {\r\n                    config.pipeTransport.pipeProgram = replacedPipeProgram;\r\n                }\r\n            }\r\n        }\r\n        // if config or type is not specified, return null to trigger VS Code to open a configuration file https://github.com/Microsoft/vscode/issues/54213 \r\n        return config && config.type ? config : null;\r\n    }\r\n}\r\n\r\nexport class CppVsDbgConfigurationProvider extends CppConfigurationProvider {\r\n    public constructor(provider: IConfigurationAssetProvider) {\r\n        super(provider, DebuggerType.cppvsdbg);\r\n    }\r\n}\r\n\r\nexport class CppDbgConfigurationProvider extends CppConfigurationProvider {\r\n    public constructor(provider: IConfigurationAssetProvider) {\r\n        super(provider, DebuggerType.cppdbg);\r\n    }\r\n}\r\n\r\nexport interface IConfigurationAssetProvider {\r\n    getInitialConfigurations(debuggerType: DebuggerType): any;\r\n    getConfigurationSnippets(): vscode.CompletionItem[];\r\n}\r\n\r\nexport class ConfigurationAssetProviderFactory {\r\n    public static getConfigurationProvider(): IConfigurationAssetProvider {\r\n        switch (os.platform()) {\r\n            case 'win32':\r\n                return new WindowsConfigurationProvider();\r\n            case 'darwin':\r\n                return new OSXConfigurationProvider();\r\n            case 'linux':\r\n                return new LinuxConfigurationProvider();\r\n            default:\r\n                throw new Error(\"Unexpected OS type\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract class DefaultConfigurationProvider implements IConfigurationAssetProvider {\r\n    configurations: IConfiguration[];\r\n\r\n    public getInitialConfigurations(debuggerType: DebuggerType): any {\r\n        let configurationSnippet: IConfigurationSnippet[] = [];\r\n\r\n        // Only launch configurations are initial configurations\r\n        this.configurations.forEach(configuration => {\r\n            configurationSnippet.push(configuration.GetLaunchConfiguration());\r\n        });\r\n\r\n        let initialConfigurations: any = configurationSnippet.filter(snippet => snippet.debuggerType === debuggerType && snippet.isInitialConfiguration)\r\n            .map(snippet => JSON.parse(snippet.bodyText));\r\n\r\n        // If configurations is empty, then it will only have an empty configurations array in launch.json. Users can still add snippets.\r\n        return initialConfigurations;\r\n    }\r\n\r\n    public getConfigurationSnippets(): vscode.CompletionItem[] {\r\n        let completionItems: vscode.CompletionItem[] = [];\r\n\r\n        this.configurations.forEach(configuration => {\r\n            completionItems.push(convertConfigurationSnippetToCompetionItem(configuration.GetLaunchConfiguration()));\r\n            completionItems.push(convertConfigurationSnippetToCompetionItem(configuration.GetAttachConfiguration()));\r\n        });\r\n\r\n        return completionItems;\r\n    }\r\n}\r\n\r\nclass WindowsConfigurationProvider extends DefaultConfigurationProvider {\r\n    private executable: string = \"a.exe\";\r\n    private pipeProgram: string = \"<full path to pipe program such as plink.exe>\";\r\n    private MIMode: string = 'gdb';\r\n    private setupCommandsBlock: string = `\"setupCommands\": [\r\n    {\r\n        \"description\": \"Enable pretty-printing for gdb\",\r\n        \"text\": \"-enable-pretty-printing\",\r\n        \"ignoreFailures\": true\r\n    }\r\n]`;\r\n\r\n    constructor() {\r\n        super();\r\n        this.configurations = [\r\n            new MIConfigurations(this.MIMode, this.executable, this.pipeProgram, this.setupCommandsBlock),\r\n            new PipeTransportConfigurations(this.MIMode, this.executable, this.pipeProgram, this.setupCommandsBlock),\r\n            new WindowsConfigurations(this.MIMode, this.executable, this.pipeProgram, this.setupCommandsBlock),\r\n            new WSLConfigurations(this.MIMode, this.executable, this.pipeProgram, this.setupCommandsBlock),\r\n        ];\r\n    }\r\n}\r\n\r\nclass OSXConfigurationProvider extends DefaultConfigurationProvider {\r\n    private MIMode: string = 'lldb';\r\n    private executable: string = \"a.out\";\r\n    private pipeProgram: string = \"/usr/bin/ssh\";\r\n\r\n    constructor() {\r\n        super();\r\n        this.configurations = [\r\n            new MIConfigurations(this.MIMode, this.executable, this.pipeProgram),\r\n        ];\r\n    }\r\n}\r\n\r\nclass LinuxConfigurationProvider extends DefaultConfigurationProvider {\r\n    private MIMode: string = 'gdb';\r\n    private setupCommandsBlock: string = `\"setupCommands\": [\r\n    {\r\n        \"description\": \"Enable pretty-printing for gdb\",\r\n        \"text\": \"-enable-pretty-printing\",\r\n        \"ignoreFailures\": true\r\n    }\r\n]`;\r\n    private executable: string = \"a.out\";\r\n    private pipeProgram: string = \"/usr/bin/ssh\";\r\n\r\n    constructor() {\r\n        super();\r\n        this.configurations = [\r\n            new MIConfigurations(this.MIMode, this.executable, this.pipeProgram, this.setupCommandsBlock),\r\n            new PipeTransportConfigurations(this.MIMode, this.executable, this.pipeProgram, this.setupCommandsBlock)\r\n        ];\r\n    }\r\n}\r\n\r\nfunction convertConfigurationSnippetToCompetionItem(snippet: IConfigurationSnippet): vscode.CompletionItem {\r\n    let item: vscode.CompletionItem = new vscode.CompletionItem(snippet.label, vscode.CompletionItemKind.Snippet);\r\n\r\n    item.insertText = snippet.bodyText;\r\n\r\n    return item;\r\n}\r\n\r\nexport class ConfigurationSnippetProvider implements vscode.CompletionItemProvider {\r\n    private provider: IConfigurationAssetProvider;\r\n    private snippets: vscode.CompletionItem[];\r\n\r\n    constructor(provider: IConfigurationAssetProvider) {\r\n        this.provider = provider;\r\n        this.snippets = this.provider.getConfigurationSnippets();\r\n    }\r\n    public resolveCompletionItem(item: vscode.CompletionItem, token: vscode.CancellationToken): Thenable<vscode.CompletionItem> {\r\n        return Promise.resolve(item);\r\n    }\r\n\r\n    // This function will only provide completion items via the Add Configuration Button\r\n    // There are two cases where the configuration array has nothing or has some items.\r\n    // 1. If it has nothing, insert a snippet the user selected.\r\n    // 2. If there are items, the Add Configuration button will append it to the start of the configuration array. This function inserts a comma at the end of the snippet.\r\n    public provideCompletionItems(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken, context: vscode.CompletionContext): Thenable<vscode.CompletionList> {\r\n        let items: vscode.CompletionItem[] = this.snippets;\r\n\r\n        const launch: any = parse(document.getText());\r\n        // Check to see if the array is empty, so any additional inserted snippets will need commas.\r\n        if (launch.configurations.length !== 0) {\r\n            items = [];\r\n\r\n            // Make a copy of each snippet since we are adding a comma to the end of the insertText.\r\n            this.snippets.forEach((item) => items.push(Object.assign({}, item)));\r\n\r\n            items.map((item) => {\r\n                item.insertText = item.insertText + ','; // Add comma \r\n            });\r\n        }\r\n\r\n        return Promise.resolve(new vscode.CompletionList(items, true));\r\n    }\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\n import * as os from 'os';\r\n\r\nexport enum DebuggerType {\r\n    cppvsdbg,\r\n    cppdbg\r\n}\r\n\r\nexport interface IConfigurationSnippet {\r\n    label: string;\r\n    description: string;\r\n    bodyText: string;\r\n\r\n    // Internal\r\n    isInitialConfiguration?: boolean;\r\n    debuggerType: DebuggerType;\r\n}\r\n\r\nexport function indentJsonString(json: string, numTabs: number = 1): string {\r\n    return json.split('\\n').map(line => '\\t'.repeat(numTabs) + line).join('\\n').trim();\r\n}\r\n\r\nfunction formatString(format: string, args: string[]): string {\r\n    for (let arg in args) {\r\n        format = format.replace(\"{\" + arg + \"}\", args[arg]);\r\n    }\r\n    return format;\r\n}\r\n\r\nfunction createLaunchString(name: string, type: string, executable: string): string {\r\n        return `\"name\": \"${name}\",\r\n\"type\": \"${type}\",\r\n\"request\": \"launch\",\r\n\"program\": \"${\"enter program name, for example \" + \"$\\{workspaceFolder\\}\" + \"/\" + executable}\",\r\n\"args\": [],\r\n\"stopAtEntry\": false,\r\n\"cwd\": \"$\\{workspaceFolder\\}\",\r\n\"environment\": [],\r\n\"externalConsole\": true\r\n`;\r\n    }\r\n\r\nfunction createAttachString(name: string, type: string, executable: string): string {\r\n    return formatString(`\r\n\"name\": \"${name}\",\r\n\"type\": \"${type}\",\r\n\"request\": \"attach\",{0}\r\n\"processId\": \"$\\{command:pickProcess\\}\"\r\n`, [type === \"cppdbg\" ? `${os.EOL}\"program\": \"${\"enter program name, for example $\\{workspaceFolder\\}/\" + executable}\",` : \"\"]);\r\n    }\r\n\r\nfunction createRemoteAttachString(name: string, type: string, executable: string): string {\r\n        return `\r\n\"name\": \"${name}\",\r\n\"type\": \"${type}\",\r\n\"request\": \"attach\",\r\n\"program\": \"${\"enter program name, for example $\\{workspaceFolder\\}/\" + executable}\",\r\n\"processId\": \"$\\{command:pickRemoteProcess\\}\"\r\n`;\r\n    }\r\n\r\n function createPipeTransportString(pipeProgram: string, debuggerProgram: string, pipeArgs: string[] = []): string {\r\n        return `\r\n\"pipeTransport\": {\r\n\\t\"debuggerPath\": \"/usr/bin/${debuggerProgram}\",\r\n\\t\"pipeProgram\": \"${pipeProgram}\",\r\n\\t\"pipeArgs\": ${JSON.stringify(pipeArgs)},\r\n\\t\"pipeCwd\": \"\"\r\n}`;\r\n    }\r\n\r\nexport interface IConfiguration {\r\n    GetLaunchConfiguration(): IConfigurationSnippet;\r\n    GetAttachConfiguration(): IConfigurationSnippet;\r\n}\r\n\r\nabstract class Configuration implements IConfiguration {\r\n    public snippetPrefix = \"C/C++: \";\r\n\r\n    public executable: string;\r\n    public pipeProgram: string;\r\n    public MIMode: string;\r\n    public additionalProperties: string;\r\n\r\n    public miDebugger = \"cppdbg\";\r\n    public windowsDebugger = \"cppvsdbg\";\r\n\r\n    constructor(MIMode: string, executable: string, pipeProgram: string, additionalProperties: string = \"\") {\r\n        this.MIMode = MIMode;\r\n        this.executable = executable;\r\n        this.pipeProgram = pipeProgram;\r\n        this.additionalProperties = additionalProperties;\r\n    }\r\n\r\n    abstract GetLaunchConfiguration(): IConfigurationSnippet;\r\n    abstract GetAttachConfiguration(): IConfigurationSnippet;\r\n}\r\n\r\nexport class MIConfigurations extends Configuration {\r\n\r\n    public GetLaunchConfiguration(): IConfigurationSnippet {\r\n        let name: string = `(${this.MIMode}) Launch`;\r\n\r\n        let body: string = formatString(`{\r\n\\t${indentJsonString(createLaunchString(name, this.miDebugger, this.executable))},\r\n\\t\"MIMode\": \"${this.MIMode}\"{0}{1}\r\n}`, [this.miDebugger === \"cppdbg\" && os.platform() === \"win32\" ? `,${os.EOL}\\t\"miDebuggerPath\": \"/path/to/gdb\"` : \"\", \r\nthis.additionalProperties ? `,${os.EOL}\\t${indentJsonString(this.additionalProperties)}` : \"\"]);\r\n\r\n        return {\r\n            \"label\": this.snippetPrefix + name,\r\n            \"description\": `Launch with ${this.MIMode}.`,\r\n            \"bodyText\": body.trim(),\r\n            \"isInitialConfiguration\": true,\r\n            \"debuggerType\": DebuggerType.cppdbg\r\n        };\r\n    }\r\n\r\n    public GetAttachConfiguration(): IConfigurationSnippet {\r\n        let name: string = `(${this.MIMode}) Attach`;\r\n\r\n        let body: string = formatString(`{ \r\n\\t${indentJsonString(createAttachString(name, this.miDebugger, this.executable))},\r\n\\t\"MIMode\": \"${this.MIMode}\"{0}{1}\r\n}`, [this.miDebugger === \"cppdbg\" && os.platform() === \"win32\" ? `,${os.EOL}\\t\"miDebuggerPath\": \"/path/to/gdb\"` : \"\",\r\nthis.additionalProperties ? `,${os.EOL}\\t${indentJsonString(this.additionalProperties)}` : \"\"]);\r\n\r\n        return {\r\n            \"label\": this.snippetPrefix + name,\r\n            \"description\": `Attach with ${this.MIMode}.`,\r\n            \"bodyText\": body.trim(),\r\n            \"debuggerType\": DebuggerType.cppdbg\r\n        };\r\n\r\n    }\r\n}\r\n\r\nexport class PipeTransportConfigurations extends Configuration {\r\n\r\n    public GetLaunchConfiguration(): IConfigurationSnippet {\r\n        let name: string = `(${this.MIMode}) Pipe Launch`;\r\n\r\n        let body: string = formatString(`\r\n{\r\n\\t${indentJsonString(createLaunchString(name, this.miDebugger, this.executable))},\r\n\\t${indentJsonString(createPipeTransportString(this.pipeProgram, this.MIMode))},\r\n\\t\"MIMode\": \"${this.MIMode}\"{0}\r\n}`, [this.additionalProperties ? `,${os.EOL}\\t${indentJsonString(this.additionalProperties)}` : \"\"]);\r\n\r\n        return {\r\n            \"label\": this.snippetPrefix + name,\r\n            \"description\": `Pipe Launch with ${this.MIMode}.`,\r\n            \"bodyText\": body.trim(),\r\n            \"debuggerType\": DebuggerType.cppdbg\r\n        };\r\n\r\n    }\r\n\r\n    public GetAttachConfiguration(): IConfigurationSnippet {\r\n        let name: string = `(${this.MIMode}) Pipe Attach`;\r\n\r\n        let body: string = formatString(`\r\n{\r\n\\t${indentJsonString(createRemoteAttachString(name, this.miDebugger, this.executable))},\r\n\\t${indentJsonString(createPipeTransportString(this.pipeProgram, this.MIMode))},\r\n\\t\"MIMode\": \"${this.MIMode}\"{0}\r\n}`, [this.additionalProperties ? `,${os.EOL}\\t${indentJsonString(this.additionalProperties)}` : \"\"]);\r\n        return {\r\n            \"label\": this.snippetPrefix + name,\r\n            \"description\": `Pipe Attach with ${this.MIMode}.`,\r\n            \"bodyText\": body.trim(),\r\n            \"debuggerType\": DebuggerType.cppdbg\r\n        };\r\n\r\n    }\r\n}\r\n\r\nexport class WindowsConfigurations extends Configuration {\r\n\r\n    public GetLaunchConfiguration(): IConfigurationSnippet {\r\n        let name: string = \"(Windows) Launch\";\r\n\r\n        let body: string = `\r\n{\r\n\\t${indentJsonString(createLaunchString(name, this.windowsDebugger, this.executable))}\r\n}`;\r\n\r\n        return {\r\n            \"label\": this.snippetPrefix + name,\r\n            \"description\": \"Launch with the Visual Studio C/C++ debugger.\",\r\n            \"bodyText\": body.trim(),\r\n            \"isInitialConfiguration\": true,\r\n            \"debuggerType\": DebuggerType.cppvsdbg\r\n        };\r\n\r\n    }\r\n\r\n    public GetAttachConfiguration(): IConfigurationSnippet {\r\n        let name: string = \"(Windows) Attach\";\r\n\r\n        let body: string = `\r\n{\r\n\\t${indentJsonString(createAttachString(name, this.windowsDebugger, this.executable))}\r\n}`;\r\n\r\n        return {\r\n            \"label\": this.snippetPrefix + name,\r\n            \"description\": \"Attach to a process with the Visual Studio C/C++ debugger.\",\r\n            \"bodyText\": body.trim(),\r\n            \"debuggerType\": DebuggerType.cppvsdbg\r\n        };\r\n\r\n    }\r\n}\r\n\r\nexport class WSLConfigurations extends Configuration {\r\n    // Detects if the current VSCode is 32-bit and uses the correct bash.exe\r\n    public bashPipeProgram = process.arch === 'ia32' ? \"${env:windir}\\\\\\\\sysnative\\\\\\\\bash.exe\" : \"${env:windir}\\\\\\\\system32\\\\\\\\bash.exe\";\r\n\r\n    public GetLaunchConfiguration(): IConfigurationSnippet {\r\n        let name: string = `(${this.MIMode}) Bash on Windows Launch`;\r\n\r\n        let body: string = formatString(`\r\n{\r\n\\t${indentJsonString(createLaunchString(name, this.miDebugger, this.executable))},\r\n\\t${indentJsonString(createPipeTransportString(this.bashPipeProgram, this.MIMode, [\"-c\"]))}{0}\r\n}`, [this.additionalProperties ? `,${os.EOL}\\t${indentJsonString(this.additionalProperties)}` : \"\"]);\r\n\r\n        return {\r\n            \"label\": this.snippetPrefix + name,\r\n            \"description\": `Launch in Bash on Windows using ${this.MIMode}.`,\r\n            \"bodyText\": body.trim(),\r\n            \"debuggerType\": DebuggerType.cppdbg\r\n        };\r\n    }\r\n\r\n    public GetAttachConfiguration(): IConfigurationSnippet {\r\n        let name: string = `(${this.MIMode}) Bash on Windows Attach`;\r\n\r\n        let body: string = formatString(`\r\n{\r\n\\t${indentJsonString(createRemoteAttachString(name, this.miDebugger, this.executable))},\r\n\\t${indentJsonString(createPipeTransportString(this.bashPipeProgram, this.MIMode, [\"-c\"]))}{0}\r\n}`, [this.additionalProperties ? `,${os.EOL}\\t${indentJsonString(this.additionalProperties)}` : \"\"]);\r\n\r\n        return {\r\n            \"label\": this.snippetPrefix + name,\r\n            \"description\": `Attach to a remote process running in Bash on Windows using ${this.MIMode}.`,\r\n            \"bodyText\": body.trim(),\r\n            \"debuggerType\": DebuggerType.cppdbg\r\n        };\r\n    }\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as vscode from \"vscode\";\r\nimport * as util from '../common';\r\nimport * as path from 'path';\r\nimport * as os from 'os';\r\n\r\n// Registers DebugAdapterDescriptorFactory for `cppdbg` and `cppvsdbg`. If it is not ready, it will prompt a wait for the download dialog.\r\n// NOTE: This file is not automatically tested.\r\n\r\nabstract class AbstractDebugAdapterDescriptorFactory implements vscode.DebugAdapterDescriptorFactory {\r\n    protected readonly context: vscode.ExtensionContext;\r\n\r\n    // This is important for the Mock Debugger since it can not use src/common\r\n    constructor(context: vscode.ExtensionContext) {\r\n        this.context = context;\r\n    }\r\n\r\n    abstract createDebugAdapterDescriptor(session: vscode.DebugSession, executable: vscode.DebugAdapterExecutable | undefined): vscode.ProviderResult<vscode.DebugAdapterDescriptor>;\r\n}\r\n\r\nexport class CppdbgDebugAdapterDescriptorFactory extends AbstractDebugAdapterDescriptorFactory {\r\n    public static DEBUG_TYPE : string = \"cppdbg\";\r\n\r\n    constructor(context: vscode.ExtensionContext) {\r\n        super(context);\r\n    }\r\n\r\n    createDebugAdapterDescriptor(session: vscode.DebugSession, executable: vscode.DebugAdapterExecutable | undefined): vscode.ProviderResult<vscode.DebugAdapterDescriptor> {\r\n        return util.isExtensionReady().then(ready => {\r\n            if (ready) {\r\n                let command: string = path.join(this.context.extensionPath, './debugAdapters/OpenDebugAD7');\r\n\r\n                // Windows has the exe in debugAdapters/bin.\r\n                if (os.platform() === 'win32') {\r\n                    command = path.join(this.context.extensionPath, \"./debugAdapters/bin/OpenDebugAD7.exe\");\r\n                }\r\n\r\n                return new vscode.DebugAdapterExecutable(command, []);\r\n            } else {\r\n                throw new Error(util.extensionNotReadyString);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class CppvsdbgDebugAdapterDescriptorFactory extends AbstractDebugAdapterDescriptorFactory {\r\n    public static DEBUG_TYPE : string = \"cppvsdbg\";\r\n\r\n    constructor(context: vscode.ExtensionContext) {\r\n        super(context);\r\n    }\r\n\r\n    createDebugAdapterDescriptor(session: vscode.DebugSession, executable: vscode.DebugAdapterExecutable | undefined): vscode.ProviderResult<vscode.DebugAdapterDescriptor> {\r\n        if (os.platform() !== 'win32') {\r\n            vscode.window.showErrorMessage(\"Debugger type 'cppvsdbg' is not avaliable for non-Windows machines.\");\r\n            return null;\r\n        } else {\r\n            return util.isExtensionReady().then(ready => {\r\n                if (ready) {\r\n                    return new vscode.DebugAdapterExecutable(\r\n                        path.join(this.context.extensionPath, './debugAdapters/vsdbg/bin/vsdbg.exe'),\r\n                        ['--interpreter=vscode']\r\n                    );\r\n                } else {\r\n                    throw new Error(util.extensionNotReadyString);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as fs from 'fs';\r\nimport * as net from 'net';\r\nimport * as https from 'https';\r\nimport * as path from 'path';\r\nimport * as vscode from 'vscode';\r\nimport * as url from 'url';\r\nimport * as tmp from 'tmp';\r\nimport * as yauzl from 'yauzl';\r\nimport * as mkdirp from 'mkdirp';\r\n\r\nimport * as util from './common';\r\nimport { PlatformInformation } from './platform';\r\nimport * as Telemetry from './telemetry';\r\nimport { IncomingMessage, ClientRequest } from 'http';\r\nimport { Logger } from './logger';\r\n\r\nexport interface IPackage {\r\n    // Description of the package\r\n    description: string;\r\n\r\n    // URL of the package\r\n    url: string;\r\n\r\n    // Platforms for which the package should be downloaded\r\n    platforms: string[];\r\n\r\n    // Architectures for which the package is applicable\r\n    architectures: string[];\r\n\r\n    // Binaries in the package that should be executable when deployed\r\n    binaries: string[];\r\n\r\n    // Internal location to which the package was downloaded\r\n    tmpFile: tmp.SyncResult;\r\n}\r\n\r\nexport class PackageManagerError extends Error {\r\n    constructor(\r\n        public message: string,\r\n        public methodName: string,\r\n        public pkg: IPackage = null,\r\n        public innerError: any = null,\r\n        public errorCode: string = '') {\r\n        super(message);\r\n    }\r\n}\r\n\r\nexport class PackageManagerWebResponseError extends PackageManagerError {\r\n    constructor(\r\n        public socket: net.Socket,\r\n        public message: string,\r\n        public methodName: string,\r\n        public pkg: IPackage = null,\r\n        public innerError: any = null,\r\n        public errorCode: string = '') {\r\n        super(message, methodName, pkg, innerError, errorCode);\r\n    }\r\n}\r\n\r\nexport class PackageManager {\r\n    private allPackages: IPackage[];\r\n\r\n    public constructor(\r\n        private platformInfo: PlatformInformation,\r\n        private outputChannel?: Logger) {\r\n        // Ensure our temp files get cleaned up in case of error\r\n        tmp.setGracefulCleanup();\r\n    }\r\n\r\n    public DownloadPackages(progress: vscode.Progress<{message?: string; increment?: number}>): Promise<void> {\r\n        return this.GetPackages()\r\n            .then((packages) => {\r\n                let count: number = 1;\r\n                return this.BuildPromiseChain(packages, (pkg): Promise<void> => {\r\n                    const p: Promise<void> = this.DownloadPackage(pkg, `${count}/${packages.length}`, progress);\r\n                    count += 1;\r\n                    return p;\r\n                });\r\n            });\r\n    }\r\n\r\n    public InstallPackages(progress: vscode.Progress<{message?: string; increment?: number}>): Promise<void> {\r\n        return this.GetPackages()\r\n        .then((packages) => {\r\n            let count: number = 1;\r\n            return this.BuildPromiseChain(packages, (pkg): Promise<void> => {\r\n                const p: Promise<void> = this.InstallPackage(pkg, `${count}/${packages.length}`, progress);\r\n                count += 1;\r\n                return p;\r\n            });\r\n        });\r\n    }\r\n\r\n    /** Builds a chain of promises by calling the promiseBuilder function once per item in the list.\r\n     *  Like Promise.all, but runs the promises in sequence rather than simultaneously.\r\n     */\r\n    private BuildPromiseChain<TItem, TPromise>(items: TItem[], promiseBuilder: (TItem) => Promise<TPromise>): Promise<TPromise> {\r\n        let promiseChain: Promise<TPromise> = Promise.resolve<TPromise>(null);\r\n\r\n        for (let item of items) {\r\n            promiseChain = promiseChain.then(() => {\r\n                return promiseBuilder(item);\r\n            });\r\n        }\r\n\r\n        return promiseChain;\r\n    }\r\n\r\n    private GetPackageList(): Promise<IPackage[]> {\r\n        return new Promise<IPackage[]>((resolve, reject) => {\r\n            if (!this.allPackages) {\r\n                if (util.packageJson.runtimeDependencies) {\r\n                    this.allPackages = <IPackage[]>util.packageJson.runtimeDependencies;\r\n\r\n                    // Convert relative binary paths to absolute\r\n                    for (let pkg of this.allPackages) {\r\n                        if (pkg.binaries) {\r\n                            pkg.binaries = pkg.binaries.map((value) => {\r\n                                return util.getExtensionFilePath(value);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    resolve(this.allPackages);\r\n                } else {\r\n                    reject(new PackageManagerError('Package manifest does not exist', 'GetPackageList'));\r\n                }\r\n            } else {\r\n                resolve(this.allPackages);\r\n            }\r\n        });\r\n    }\r\n\r\n    private GetPackages(): Promise<IPackage[]> {\r\n        return this.GetPackageList()\r\n            .then((list) => {\r\n                return list.filter((value, index, array) => {\r\n                    return (!value.architectures || value.architectures.indexOf(this.platformInfo.architecture) !== -1) &&\r\n                        (!value.platforms || value.platforms.indexOf(this.platformInfo.platform) !== -1);\r\n                });\r\n            });\r\n    }\r\n\r\n    private async DownloadPackage(pkg: IPackage, progressCount: string, progress: vscode.Progress<{message?: string; increment?: number}>): Promise<void> {\r\n        this.AppendChannel(`Downloading package '${pkg.description}' `);\r\n\r\n        progress.report({message: `Downloading ${progressCount}: ${pkg.description}`});\r\n\r\n        const tmpResult: tmp.SyncResult = await this.CreateTempFile(pkg);\r\n        await this.DownloadPackageWithRetries(pkg, tmpResult, progress);\r\n    }\r\n\r\n    private async CreateTempFile(pkg: IPackage): Promise<tmp.SyncResult> {\r\n        return new Promise<tmp.SyncResult>((resolve, reject) => {\r\n            tmp.file({ prefix: \"package-\" }, (err, path, fd, cleanupCallback) => {\r\n                if (err) {\r\n                    return reject(new PackageManagerError('Error from temp.file', 'DownloadPackage', pkg, err));\r\n                }\r\n\r\n                return resolve(<tmp.SyncResult>{ name: path, fd: fd, removeCallback: cleanupCallback });\r\n            });\r\n        });\r\n    }\r\n\r\n    private async DownloadPackageWithRetries(pkg: IPackage, tmpResult: tmp.SyncResult, progress: vscode.Progress<{message?: string; increment?: number}>): Promise<void> {\r\n        pkg.tmpFile = tmpResult;\r\n\r\n        let success: boolean = false;\r\n        let lastError: any = null;\r\n        let retryCount: number = 0;\r\n        const MAX_RETRIES: number = 5;\r\n\r\n        // Retry the download at most MAX_RETRIES times with 2-32 seconds delay.\r\n        do {\r\n            try {\r\n                await this.DownloadFile(pkg.url, pkg, retryCount, progress);\r\n                success = true;\r\n            } catch (error) {\r\n                retryCount += 1;\r\n                lastError = error;\r\n                if (retryCount > MAX_RETRIES) {\r\n                    this.AppendChannel(` Failed to download ` + pkg.url);\r\n                    throw error;\r\n                } else {\r\n                    this.AppendChannel(` Failed. Retrying...`);\r\n                    continue;\r\n                }\r\n            }\r\n        } while (!success && retryCount < MAX_RETRIES);\r\n\r\n        this.AppendLineChannel(\" Done!\");\r\n        if (retryCount !== 0) {\r\n            // Log telemetry to see if retrying helps.\r\n            let telemetryProperties: { [key: string]: string } = {};\r\n            telemetryProperties[\"success\"] = success ? `OnRetry${retryCount}` : 'false';\r\n            if (lastError instanceof PackageManagerError) {\r\n                let packageError: PackageManagerError = lastError;\r\n                telemetryProperties['error.methodName'] = packageError.methodName;\r\n                telemetryProperties['error.message'] = packageError.message;\r\n                if (packageError.pkg) {\r\n                    telemetryProperties['error.packageName'] = packageError.pkg.description;\r\n                    telemetryProperties['error.packageUrl'] = packageError.pkg.url;\r\n                }\r\n                if (packageError.errorCode) {\r\n                    telemetryProperties['error.errorCode'] = packageError.errorCode;\r\n                }\r\n            }\r\n            Telemetry.logDebuggerEvent(\"acquisition\", telemetryProperties);\r\n        }\r\n    }\r\n\r\n    // reloadCpptoolsJson in main.ts uses ~25% of this function.\r\n    private DownloadFile(urlString: any, pkg: IPackage, delay: number, progress: vscode.Progress<{message?: string; increment?: number}>): Promise<void> {\r\n        let parsedUrl: url.Url = url.parse(urlString);\r\n        let proxyStrictSSL: any = vscode.workspace.getConfiguration().get(\"http.proxyStrictSSL\", true);\r\n\r\n        let options: https.RequestOptions = {\r\n            host: parsedUrl.host,\r\n            path: parsedUrl.path,\r\n            agent: util.getHttpsProxyAgent(),\r\n            rejectUnauthorized: proxyStrictSSL\r\n        };\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let secondsDelay: number = Math.pow(2, delay);\r\n            if (secondsDelay === 1) {\r\n                secondsDelay = 0;\r\n            }\r\n            if (secondsDelay > 4) {\r\n                this.AppendChannel(`Waiting ${secondsDelay} seconds...`);\r\n            }\r\n            setTimeout(() => {\r\n                if (!pkg.tmpFile || pkg.tmpFile.fd === 0) {\r\n                    return reject(new PackageManagerError('Temporary Package file unavailable', 'DownloadFile', pkg));\r\n                }\r\n\r\n                let handleHttpResponse: (response: IncomingMessage) => void = (response: IncomingMessage) => {\r\n                    if (response.statusCode === 301 || response.statusCode === 302) {\r\n                        // Redirect - download from new location\r\n                        let redirectUrl: string | string[];\r\n                        if (typeof response.headers.location === \"string\") {\r\n                            redirectUrl = response.headers.location;\r\n                        } else {\r\n                            redirectUrl = response.headers.location[0];\r\n                        }\r\n                        return resolve(this.DownloadFile(redirectUrl, pkg, 0, progress));\r\n                    } else if (response.statusCode !== 200) {\r\n                        // Download failed - print error message\r\n                        let errorMessage: string = `failed (error code '${response.statusCode}')`;\r\n                        return reject(new PackageManagerWebResponseError(response.socket, 'HTTP/HTTPS Response Error', 'DownloadFile', pkg, errorMessage, response.statusCode.toString()));\r\n                    } else {\r\n                        // Downloading - hook up events\r\n                        let contentLength: any = response.headers['content-length'];\r\n                        if (typeof response.headers['content-length'] === \"string\") {\r\n                            contentLength = response.headers['content-length'];\r\n                        } else {\r\n                            contentLength = response.headers['content-length'][0];\r\n                        }\r\n                        let packageSize: number = parseInt(contentLength, 10);\r\n                        let downloadPercentage: number = 0;\r\n                        let dots: number = 0;\r\n                        let tmpFile: fs.WriteStream = fs.createWriteStream(null, { fd: pkg.tmpFile.fd });\r\n\r\n                        this.AppendChannel(`(${Math.ceil(packageSize / 1024)} KB) `);\r\n\r\n                        response.on('data', (data) => {\r\n                            // Update dots after package name in output console\r\n                            let newDots: number = Math.ceil(downloadPercentage / 5);\r\n                            if (newDots > dots) {\r\n                                this.AppendChannel(\".\".repeat(newDots - dots));\r\n                                dots = newDots;\r\n                            }\r\n                        });\r\n\r\n                        response.on('end', () => {\r\n                            return resolve();\r\n                        });\r\n\r\n                        response.on('error', (error) => {\r\n                            return reject(new PackageManagerWebResponseError(response.socket, 'HTTP/HTTPS Response error', 'DownloadFile', pkg, error.stack, error.name));\r\n                        });\r\n\r\n                        // Begin piping data from the response to the package file\r\n                        response.pipe(tmpFile, { end: false });\r\n                    }\r\n                };\r\n\r\n                let request: ClientRequest = https.request(options, handleHttpResponse);\r\n\r\n                request.on('error', (error) => {\r\n                    return reject(new PackageManagerError('HTTP/HTTPS Request error' + (urlString.includes(\"fwlink\") ? \": fwlink\" : \"\"), 'DownloadFile', pkg, error.stack, error.message));\r\n                });\r\n\r\n                // Execute the request\r\n                request.end();\r\n            }, secondsDelay * 1000);\r\n        });\r\n    }\r\n\r\n    private InstallPackage(pkg: IPackage, progressCount: string, progress: vscode.Progress<{message?: string; increment?: number}>): Promise<void> {\r\n        this.AppendLineChannel(`Installing package '${pkg.description}'`);\r\n\r\n        progress.report({message: `Installing ${progressCount}: ${pkg.description}`});\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            if (!pkg.tmpFile || pkg.tmpFile.fd === 0) {\r\n                return reject(new PackageManagerError('Downloaded file unavailable', 'InstallPackage', pkg));\r\n            }\r\n\r\n            yauzl.fromFd(pkg.tmpFile.fd, { lazyEntries: true }, (err, zipfile) => {\r\n                if (err) {\r\n                    return reject(new PackageManagerError('Zip file error', 'InstallPackage', pkg, err));\r\n                }\r\n\r\n                // setup zip file events\r\n                zipfile.on('end', () => {\r\n                    return resolve();\r\n                });\r\n\r\n                zipfile.on('error', err => {\r\n                    return reject(new PackageManagerError('Zip File Error', 'InstallPackage', pkg, err, err.code));\r\n                });\r\n\r\n                zipfile.readEntry();\r\n\r\n                zipfile.on('entry', (entry: yauzl.Entry) => {\r\n                    let absoluteEntryPath: string = util.getExtensionFilePath(entry.fileName);\r\n\r\n                    if (entry.fileName.endsWith(\"/\")) {\r\n                        // Directory - create it\r\n                        mkdirp.mkdirp(absoluteEntryPath, { mode: 0o775 }, (err) => {\r\n                            if (err) {\r\n                                return reject(new PackageManagerError('Error creating directory', 'InstallPackage', pkg, err, err.code));\r\n                            }\r\n\r\n                            zipfile.readEntry();\r\n                        });\r\n                    } else {\r\n                        util.checkFileExists(absoluteEntryPath).then((exists: boolean) => {\r\n                            if (!exists) {\r\n                                // File - extract it\r\n                                zipfile.openReadStream(entry, (err, readStream: fs.ReadStream) => {\r\n                                    if (err) {\r\n                                        return reject(new PackageManagerError('Error reading zip stream', 'InstallPackage', pkg, err));\r\n                                    }\r\n\r\n                                    readStream.on('error', (err) => {\r\n                                        return reject(new PackageManagerError('Error in readStream', 'InstallPackage', pkg, err));\r\n                                    });\r\n\r\n                                    mkdirp.mkdirp(path.dirname(absoluteEntryPath), { mode: 0o775 }, async (err) => {\r\n                                        if (err) {\r\n                                            return reject(new PackageManagerError('Error creating directory', 'InstallPackage', pkg, err, err.code));\r\n                                        }\r\n\r\n                                        // Create as a .tmp file to avoid partially unzipped files \r\n                                        // counting as completed files.\r\n                                        let absoluteEntryTempFile: string = absoluteEntryPath + \".tmp\";\r\n                                        if (fs.existsSync(absoluteEntryTempFile)) {\r\n                                            try {\r\n                                                await util.unlinkPromise(absoluteEntryTempFile);\r\n                                            } catch (err) {\r\n                                                return reject(new PackageManagerError(`Error unlinking file ${absoluteEntryTempFile}`, 'InstallPackage', pkg, err));\r\n                                            }\r\n                                        }\r\n\r\n                                        // Make sure executable files have correct permissions when extracted\r\n                                        let fileMode: number = (pkg.binaries && pkg.binaries.indexOf(absoluteEntryPath) !== -1) ? 0o755 : 0o664;\r\n                                        let writeStream: fs.WriteStream = fs.createWriteStream(absoluteEntryTempFile, { mode: fileMode });\r\n\r\n                                        writeStream.on('close', async () => {\r\n                                            try {\r\n                                                // Remove .tmp extension from the file.\r\n                                                await util.renamePromise(absoluteEntryTempFile, absoluteEntryPath);\r\n                                            } catch (err) {\r\n                                                return reject(new PackageManagerError(`Error renaming file ${absoluteEntryTempFile}`, 'InstallPackage', pkg, err));\r\n                                            }\r\n                                            // Wait till output is done writing before reading the next zip entry.\r\n                                            // Otherwise, it's possible to try to launch the .exe before it is done being created.\r\n                                            zipfile.readEntry();\r\n                                        });\r\n\r\n                                        writeStream.on('error', (err) => {\r\n                                            return reject(new PackageManagerError('Error in writeStream', 'InstallPackage', pkg, err));\r\n                                        });\r\n\r\n                                        readStream.pipe(writeStream);\r\n                                    });\r\n                                });\r\n                            } else {\r\n                                // Skip the message for text files, because there is a duplicate text file unzipped.\r\n                                if (path.extname(absoluteEntryPath) !== \".txt\") {\r\n                                    this.AppendLineChannel(`Warning: File '${absoluteEntryPath}' already exists and was not updated.`);\r\n                                }\r\n                                zipfile.readEntry();\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }).then(() => {\r\n            // Clean up temp file\r\n            pkg.tmpFile.removeCallback();\r\n        });\r\n    }\r\n\r\n    private AppendChannel(text: string): void {\r\n        if (this.outputChannel) {\r\n            this.outputChannel.append(text);\r\n        }\r\n    }\r\n\r\n    private AppendLineChannel(text: string): void {\r\n        if (this.outputChannel) {\r\n            this.outputChannel.appendLine(text);\r\n        }\r\n    }\r\n}","var fs = require(\"fs\");\nvar zlib = require(\"zlib\");\nvar fd_slicer = require(\"fd-slicer\");\nvar crc32 = require(\"buffer-crc32\");\nvar util = require(\"util\");\nvar EventEmitter = require(\"events\").EventEmitter;\nvar Transform = require(\"stream\").Transform;\nvar PassThrough = require(\"stream\").PassThrough;\nvar Writable = require(\"stream\").Writable;\n\nexports.open = open;\nexports.fromFd = fromFd;\nexports.fromBuffer = fromBuffer;\nexports.fromRandomAccessReader = fromRandomAccessReader;\nexports.dosDateTimeToDate = dosDateTimeToDate;\nexports.validateFileName = validateFileName;\nexports.ZipFile = ZipFile;\nexports.Entry = Entry;\nexports.RandomAccessReader = RandomAccessReader;\n\nfunction open(path, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = true;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (options.decodeStrings == null) options.decodeStrings = true;\n  if (options.validateEntrySizes == null) options.validateEntrySizes = true;\n  if (options.strictFileNames == null) options.strictFileNames = false;\n  if (callback == null) callback = defaultCallback;\n  fs.open(path, \"r\", function(err, fd) {\n    if (err) return callback(err);\n    fromFd(fd, options, function(err, zipfile) {\n      if (err) fs.close(fd, defaultCallback);\n      callback(err, zipfile);\n    });\n  });\n}\n\nfunction fromFd(fd, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = false;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (options.decodeStrings == null) options.decodeStrings = true;\n  if (options.validateEntrySizes == null) options.validateEntrySizes = true;\n  if (options.strictFileNames == null) options.strictFileNames = false;\n  if (callback == null) callback = defaultCallback;\n  fs.fstat(fd, function(err, stats) {\n    if (err) return callback(err);\n    var reader = fd_slicer.createFromFd(fd, {autoClose: true});\n    fromRandomAccessReader(reader, stats.size, options, callback);\n  });\n}\n\nfunction fromBuffer(buffer, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  options.autoClose = false;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (options.decodeStrings == null) options.decodeStrings = true;\n  if (options.validateEntrySizes == null) options.validateEntrySizes = true;\n  if (options.strictFileNames == null) options.strictFileNames = false;\n  // limit the max chunk size. see https://github.com/thejoshwolfe/yauzl/issues/87\n  var reader = fd_slicer.createFromBuffer(buffer, {maxChunkSize: 0x10000});\n  fromRandomAccessReader(reader, buffer.length, options, callback);\n}\n\nfunction fromRandomAccessReader(reader, totalSize, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = true;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (options.decodeStrings == null) options.decodeStrings = true;\n  var decodeStrings = !!options.decodeStrings;\n  if (options.validateEntrySizes == null) options.validateEntrySizes = true;\n  if (options.strictFileNames == null) options.strictFileNames = false;\n  if (callback == null) callback = defaultCallback;\n  if (typeof totalSize !== \"number\") throw new Error(\"expected totalSize parameter to be a number\");\n  if (totalSize > Number.MAX_SAFE_INTEGER) {\n    throw new Error(\"zip file too large. only file sizes up to 2^52 are supported due to JavaScript's Number type being an IEEE 754 double.\");\n  }\n\n  // the matching unref() call is in zipfile.close()\n  reader.ref();\n\n  // eocdr means End of Central Directory Record.\n  // search backwards for the eocdr signature.\n  // the last field of the eocdr is a variable-length comment.\n  // the comment size is encoded in a 2-byte field in the eocdr, which we can't find without trudging backwards through the comment to find it.\n  // as a consequence of this design decision, it's possible to have ambiguous zip file metadata if a coherent eocdr was in the comment.\n  // we search backwards for a eocdr signature, and hope that whoever made the zip file was smart enough to forbid the eocdr signature in the comment.\n  var eocdrWithoutCommentSize = 22;\n  var maxCommentSize = 0xffff; // 2-byte size\n  var bufferSize = Math.min(eocdrWithoutCommentSize + maxCommentSize, totalSize);\n  var buffer = newBuffer(bufferSize);\n  var bufferReadStart = totalSize - buffer.length;\n  readAndAssertNoEof(reader, buffer, 0, bufferSize, bufferReadStart, function(err) {\n    if (err) return callback(err);\n    for (var i = bufferSize - eocdrWithoutCommentSize; i >= 0; i -= 1) {\n      if (buffer.readUInt32LE(i) !== 0x06054b50) continue;\n      // found eocdr\n      var eocdrBuffer = buffer.slice(i);\n\n      // 0 - End of central directory signature = 0x06054b50\n      // 4 - Number of this disk\n      var diskNumber = eocdrBuffer.readUInt16LE(4);\n      if (diskNumber !== 0) {\n        return callback(new Error(\"multi-disk zip files are not supported: found disk number: \" + diskNumber));\n      }\n      // 6 - Disk where central directory starts\n      // 8 - Number of central directory records on this disk\n      // 10 - Total number of central directory records\n      var entryCount = eocdrBuffer.readUInt16LE(10);\n      // 12 - Size of central directory (bytes)\n      // 16 - Offset of start of central directory, relative to start of archive\n      var centralDirectoryOffset = eocdrBuffer.readUInt32LE(16);\n      // 20 - Comment length\n      var commentLength = eocdrBuffer.readUInt16LE(20);\n      var expectedCommentLength = eocdrBuffer.length - eocdrWithoutCommentSize;\n      if (commentLength !== expectedCommentLength) {\n        return callback(new Error(\"invalid comment length. expected: \" + expectedCommentLength + \". found: \" + commentLength));\n      }\n      // 22 - Comment\n      // the encoding is always cp437.\n      var comment = decodeStrings ? decodeBuffer(eocdrBuffer, 22, eocdrBuffer.length, false)\n                                  : eocdrBuffer.slice(22);\n\n      if (!(entryCount === 0xffff || centralDirectoryOffset === 0xffffffff)) {\n        return callback(null, new ZipFile(reader, centralDirectoryOffset, totalSize, entryCount, comment, options.autoClose, options.lazyEntries, decodeStrings, options.validateEntrySizes, options.strictFileNames));\n      }\n\n      // ZIP64 format\n\n      // ZIP64 Zip64 end of central directory locator\n      var zip64EocdlBuffer = newBuffer(20);\n      var zip64EocdlOffset = bufferReadStart + i - zip64EocdlBuffer.length;\n      readAndAssertNoEof(reader, zip64EocdlBuffer, 0, zip64EocdlBuffer.length, zip64EocdlOffset, function(err) {\n        if (err) return callback(err);\n\n        // 0 - zip64 end of central dir locator signature = 0x07064b50\n        if (zip64EocdlBuffer.readUInt32LE(0) !== 0x07064b50) {\n          return callback(new Error(\"invalid zip64 end of central directory locator signature\"));\n        }\n        // 4 - number of the disk with the start of the zip64 end of central directory\n        // 8 - relative offset of the zip64 end of central directory record\n        var zip64EocdrOffset = readUInt64LE(zip64EocdlBuffer, 8);\n        // 16 - total number of disks\n\n        // ZIP64 end of central directory record\n        var zip64EocdrBuffer = newBuffer(56);\n        readAndAssertNoEof(reader, zip64EocdrBuffer, 0, zip64EocdrBuffer.length, zip64EocdrOffset, function(err) {\n          if (err) return callback(err);\n\n          // 0 - zip64 end of central dir signature                           4 bytes  (0x06064b50)\n          if (zip64EocdrBuffer.readUInt32LE(0) !== 0x06064b50) {\n            return callback(new Error(\"invalid zip64 end of central directory record signature\"));\n          }\n          // 4 - size of zip64 end of central directory record                8 bytes\n          // 12 - version made by                                             2 bytes\n          // 14 - version needed to extract                                   2 bytes\n          // 16 - number of this disk                                         4 bytes\n          // 20 - number of the disk with the start of the central directory  4 bytes\n          // 24 - total number of entries in the central directory on this disk         8 bytes\n          // 32 - total number of entries in the central directory            8 bytes\n          entryCount = readUInt64LE(zip64EocdrBuffer, 32);\n          // 40 - size of the central directory                               8 bytes\n          // 48 - offset of start of central directory with respect to the starting disk number     8 bytes\n          centralDirectoryOffset = readUInt64LE(zip64EocdrBuffer, 48);\n          // 56 - zip64 extensible data sector                                (variable size)\n          return callback(null, new ZipFile(reader, centralDirectoryOffset, totalSize, entryCount, comment, options.autoClose, options.lazyEntries, decodeStrings, options.validateEntrySizes, options.strictFileNames));\n        });\n      });\n      return;\n    }\n    callback(new Error(\"end of central directory record signature not found\"));\n  });\n}\n\nutil.inherits(ZipFile, EventEmitter);\nfunction ZipFile(reader, centralDirectoryOffset, fileSize, entryCount, comment, autoClose, lazyEntries, decodeStrings, validateEntrySizes, strictFileNames) {\n  var self = this;\n  EventEmitter.call(self);\n  self.reader = reader;\n  // forward close events\n  self.reader.on(\"error\", function(err) {\n    // error closing the fd\n    emitError(self, err);\n  });\n  self.reader.once(\"close\", function() {\n    self.emit(\"close\");\n  });\n  self.readEntryCursor = centralDirectoryOffset;\n  self.fileSize = fileSize;\n  self.entryCount = entryCount;\n  self.comment = comment;\n  self.entriesRead = 0;\n  self.autoClose = !!autoClose;\n  self.lazyEntries = !!lazyEntries;\n  self.decodeStrings = !!decodeStrings;\n  self.validateEntrySizes = !!validateEntrySizes;\n  self.strictFileNames = !!strictFileNames;\n  self.isOpen = true;\n  self.emittedError = false;\n\n  if (!self.lazyEntries) self._readEntry();\n}\nZipFile.prototype.close = function() {\n  if (!this.isOpen) return;\n  this.isOpen = false;\n  this.reader.unref();\n};\n\nfunction emitErrorAndAutoClose(self, err) {\n  if (self.autoClose) self.close();\n  emitError(self, err);\n}\nfunction emitError(self, err) {\n  if (self.emittedError) return;\n  self.emittedError = true;\n  self.emit(\"error\", err);\n}\n\nZipFile.prototype.readEntry = function() {\n  if (!this.lazyEntries) throw new Error(\"readEntry() called without lazyEntries:true\");\n  this._readEntry();\n};\nZipFile.prototype._readEntry = function() {\n  var self = this;\n  if (self.entryCount === self.entriesRead) {\n    // done with metadata\n    setImmediate(function() {\n      if (self.autoClose) self.close();\n      if (self.emittedError) return;\n      self.emit(\"end\");\n    });\n    return;\n  }\n  if (self.emittedError) return;\n  var buffer = newBuffer(46);\n  readAndAssertNoEof(self.reader, buffer, 0, buffer.length, self.readEntryCursor, function(err) {\n    if (err) return emitErrorAndAutoClose(self, err);\n    if (self.emittedError) return;\n    var entry = new Entry();\n    // 0 - Central directory file header signature\n    var signature = buffer.readUInt32LE(0);\n    if (signature !== 0x02014b50) return emitErrorAndAutoClose(self, new Error(\"invalid central directory file header signature: 0x\" + signature.toString(16)));\n    // 4 - Version made by\n    entry.versionMadeBy = buffer.readUInt16LE(4);\n    // 6 - Version needed to extract (minimum)\n    entry.versionNeededToExtract = buffer.readUInt16LE(6);\n    // 8 - General purpose bit flag\n    entry.generalPurposeBitFlag = buffer.readUInt16LE(8);\n    // 10 - Compression method\n    entry.compressionMethod = buffer.readUInt16LE(10);\n    // 12 - File last modification time\n    entry.lastModFileTime = buffer.readUInt16LE(12);\n    // 14 - File last modification date\n    entry.lastModFileDate = buffer.readUInt16LE(14);\n    // 16 - CRC-32\n    entry.crc32 = buffer.readUInt32LE(16);\n    // 20 - Compressed size\n    entry.compressedSize = buffer.readUInt32LE(20);\n    // 24 - Uncompressed size\n    entry.uncompressedSize = buffer.readUInt32LE(24);\n    // 28 - File name length (n)\n    entry.fileNameLength = buffer.readUInt16LE(28);\n    // 30 - Extra field length (m)\n    entry.extraFieldLength = buffer.readUInt16LE(30);\n    // 32 - File comment length (k)\n    entry.fileCommentLength = buffer.readUInt16LE(32);\n    // 34 - Disk number where file starts\n    // 36 - Internal file attributes\n    entry.internalFileAttributes = buffer.readUInt16LE(36);\n    // 38 - External file attributes\n    entry.externalFileAttributes = buffer.readUInt32LE(38);\n    // 42 - Relative offset of local file header\n    entry.relativeOffsetOfLocalHeader = buffer.readUInt32LE(42);\n\n    if (entry.generalPurposeBitFlag & 0x40) return emitErrorAndAutoClose(self, new Error(\"strong encryption is not supported\"));\n\n    self.readEntryCursor += 46;\n\n    buffer = newBuffer(entry.fileNameLength + entry.extraFieldLength + entry.fileCommentLength);\n    readAndAssertNoEof(self.reader, buffer, 0, buffer.length, self.readEntryCursor, function(err) {\n      if (err) return emitErrorAndAutoClose(self, err);\n      if (self.emittedError) return;\n      // 46 - File name\n      var isUtf8 = (entry.generalPurposeBitFlag & 0x800) !== 0;\n      entry.fileName = self.decodeStrings ? decodeBuffer(buffer, 0, entry.fileNameLength, isUtf8)\n                                          : buffer.slice(0, entry.fileNameLength);\n\n      // 46+n - Extra field\n      var fileCommentStart = entry.fileNameLength + entry.extraFieldLength;\n      var extraFieldBuffer = buffer.slice(entry.fileNameLength, fileCommentStart);\n      entry.extraFields = [];\n      var i = 0;\n      while (i < extraFieldBuffer.length - 3) {\n        var headerId = extraFieldBuffer.readUInt16LE(i + 0);\n        var dataSize = extraFieldBuffer.readUInt16LE(i + 2);\n        var dataStart = i + 4;\n        var dataEnd = dataStart + dataSize;\n        if (dataEnd > extraFieldBuffer.length) return emitErrorAndAutoClose(self, new Error(\"extra field length exceeds extra field buffer size\"));\n        var dataBuffer = newBuffer(dataSize);\n        extraFieldBuffer.copy(dataBuffer, 0, dataStart, dataEnd);\n        entry.extraFields.push({\n          id: headerId,\n          data: dataBuffer,\n        });\n        i = dataEnd;\n      }\n\n      // 46+n+m - File comment\n      entry.fileComment = self.decodeStrings ? decodeBuffer(buffer, fileCommentStart, fileCommentStart + entry.fileCommentLength, isUtf8)\n                                             : buffer.slice(fileCommentStart, fileCommentStart + entry.fileCommentLength);\n      // compatibility hack for https://github.com/thejoshwolfe/yauzl/issues/47\n      entry.comment = entry.fileComment;\n\n      self.readEntryCursor += buffer.length;\n      self.entriesRead += 1;\n\n      if (entry.uncompressedSize            === 0xffffffff ||\n          entry.compressedSize              === 0xffffffff ||\n          entry.relativeOffsetOfLocalHeader === 0xffffffff) {\n        // ZIP64 format\n        // find the Zip64 Extended Information Extra Field\n        var zip64EiefBuffer = null;\n        for (var i = 0; i < entry.extraFields.length; i++) {\n          var extraField = entry.extraFields[i];\n          if (extraField.id === 0x0001) {\n            zip64EiefBuffer = extraField.data;\n            break;\n          }\n        }\n        if (zip64EiefBuffer == null) {\n          return emitErrorAndAutoClose(self, new Error(\"expected zip64 extended information extra field\"));\n        }\n        var index = 0;\n        // 0 - Original Size          8 bytes\n        if (entry.uncompressedSize === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) {\n            return emitErrorAndAutoClose(self, new Error(\"zip64 extended information extra field does not include uncompressed size\"));\n          }\n          entry.uncompressedSize = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 8 - Compressed Size        8 bytes\n        if (entry.compressedSize === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) {\n            return emitErrorAndAutoClose(self, new Error(\"zip64 extended information extra field does not include compressed size\"));\n          }\n          entry.compressedSize = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 16 - Relative Header Offset 8 bytes\n        if (entry.relativeOffsetOfLocalHeader === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) {\n            return emitErrorAndAutoClose(self, new Error(\"zip64 extended information extra field does not include relative header offset\"));\n          }\n          entry.relativeOffsetOfLocalHeader = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 24 - Disk Start Number      4 bytes\n      }\n\n      // check for Info-ZIP Unicode Path Extra Field (0x7075)\n      // see https://github.com/thejoshwolfe/yauzl/issues/33\n      if (self.decodeStrings) {\n        for (var i = 0; i < entry.extraFields.length; i++) {\n          var extraField = entry.extraFields[i];\n          if (extraField.id === 0x7075) {\n            if (extraField.data.length < 6) {\n              // too short to be meaningful\n              continue;\n            }\n            // Version       1 byte      version of this extra field, currently 1\n            if (extraField.data.readUInt8(0) !== 1) {\n              // > Changes may not be backward compatible so this extra\n              // > field should not be used if the version is not recognized.\n              continue;\n            }\n            // NameCRC32     4 bytes     File Name Field CRC32 Checksum\n            var oldNameCrc32 = extraField.data.readUInt32LE(1);\n            if (crc32.unsigned(buffer.slice(0, entry.fileNameLength)) !== oldNameCrc32) {\n              // > If the CRC check fails, this UTF-8 Path Extra Field should be\n              // > ignored and the File Name field in the header should be used instead.\n              continue;\n            }\n            // UnicodeName   Variable    UTF-8 version of the entry File Name\n            entry.fileName = decodeBuffer(extraField.data, 5, extraField.data.length, true);\n            break;\n          }\n        }\n      }\n\n      // validate file size\n      if (self.validateEntrySizes && entry.compressionMethod === 0) {\n        var expectedCompressedSize = entry.uncompressedSize;\n        if (entry.isEncrypted()) {\n          // traditional encryption prefixes the file data with a header\n          expectedCompressedSize += 12;\n        }\n        if (entry.compressedSize !== expectedCompressedSize) {\n          var msg = \"compressed/uncompressed size mismatch for stored file: \" + entry.compressedSize + \" != \" + entry.uncompressedSize;\n          return emitErrorAndAutoClose(self, new Error(msg));\n        }\n      }\n\n      if (self.decodeStrings) {\n        if (!self.strictFileNames) {\n          // allow backslash\n          entry.fileName = entry.fileName.replace(/\\\\/g, \"/\");\n        }\n        var errorMessage = validateFileName(entry.fileName, self.validateFileNameOptions);\n        if (errorMessage != null) return emitErrorAndAutoClose(self, new Error(errorMessage));\n      }\n      self.emit(\"entry\", entry);\n\n      if (!self.lazyEntries) self._readEntry();\n    });\n  });\n};\n\nZipFile.prototype.openReadStream = function(entry, options, callback) {\n  var self = this;\n  // parameter validation\n  var relativeStart = 0;\n  var relativeEnd = entry.compressedSize;\n  if (callback == null) {\n    callback = options;\n    options = {};\n  } else {\n    // validate options that the caller has no excuse to get wrong\n    if (options.decrypt != null) {\n      if (!entry.isEncrypted()) {\n        throw new Error(\"options.decrypt can only be specified for encrypted entries\");\n      }\n      if (options.decrypt !== false) throw new Error(\"invalid options.decrypt value: \" + options.decrypt);\n      if (entry.isCompressed()) {\n        if (options.decompress !== false) throw new Error(\"entry is encrypted and compressed, and options.decompress !== false\");\n      }\n    }\n    if (options.decompress != null) {\n      if (!entry.isCompressed()) {\n        throw new Error(\"options.decompress can only be specified for compressed entries\");\n      }\n      if (!(options.decompress === false || options.decompress === true)) {\n        throw new Error(\"invalid options.decompress value: \" + options.decompress);\n      }\n    }\n    if (options.start != null || options.end != null) {\n      if (entry.isCompressed() && options.decompress !== false) {\n        throw new Error(\"start/end range not allowed for compressed entry without options.decompress === false\");\n      }\n      if (entry.isEncrypted() && options.decrypt !== false) {\n        throw new Error(\"start/end range not allowed for encrypted entry without options.decrypt === false\");\n      }\n    }\n    if (options.start != null) {\n      relativeStart = options.start;\n      if (relativeStart < 0) throw new Error(\"options.start < 0\");\n      if (relativeStart > entry.compressedSize) throw new Error(\"options.start > entry.compressedSize\");\n    }\n    if (options.end != null) {\n      relativeEnd = options.end;\n      if (relativeEnd < 0) throw new Error(\"options.end < 0\");\n      if (relativeEnd > entry.compressedSize) throw new Error(\"options.end > entry.compressedSize\");\n      if (relativeEnd < relativeStart) throw new Error(\"options.end < options.start\");\n    }\n  }\n  // any further errors can either be caused by the zipfile,\n  // or were introduced in a minor version of yauzl,\n  // so should be passed to the client rather than thrown.\n  if (!self.isOpen) return callback(new Error(\"closed\"));\n  if (entry.isEncrypted()) {\n    if (options.decrypt !== false) return callback(new Error(\"entry is encrypted, and options.decrypt !== false\"));\n  }\n  // make sure we don't lose the fd before we open the actual read stream\n  self.reader.ref();\n  var buffer = newBuffer(30);\n  readAndAssertNoEof(self.reader, buffer, 0, buffer.length, entry.relativeOffsetOfLocalHeader, function(err) {\n    try {\n      if (err) return callback(err);\n      // 0 - Local file header signature = 0x04034b50\n      var signature = buffer.readUInt32LE(0);\n      if (signature !== 0x04034b50) {\n        return callback(new Error(\"invalid local file header signature: 0x\" + signature.toString(16)));\n      }\n      // all this should be redundant\n      // 4 - Version needed to extract (minimum)\n      // 6 - General purpose bit flag\n      // 8 - Compression method\n      // 10 - File last modification time\n      // 12 - File last modification date\n      // 14 - CRC-32\n      // 18 - Compressed size\n      // 22 - Uncompressed size\n      // 26 - File name length (n)\n      var fileNameLength = buffer.readUInt16LE(26);\n      // 28 - Extra field length (m)\n      var extraFieldLength = buffer.readUInt16LE(28);\n      // 30 - File name\n      // 30+n - Extra field\n      var localFileHeaderEnd = entry.relativeOffsetOfLocalHeader + buffer.length + fileNameLength + extraFieldLength;\n      var decompress;\n      if (entry.compressionMethod === 0) {\n        // 0 - The file is stored (no compression)\n        decompress = false;\n      } else if (entry.compressionMethod === 8) {\n        // 8 - The file is Deflated\n        decompress = options.decompress != null ? options.decompress : true;\n      } else {\n        return callback(new Error(\"unsupported compression method: \" + entry.compressionMethod));\n      }\n      var fileDataStart = localFileHeaderEnd;\n      var fileDataEnd = fileDataStart + entry.compressedSize;\n      if (entry.compressedSize !== 0) {\n        // bounds check now, because the read streams will probably not complain loud enough.\n        // since we're dealing with an unsigned offset plus an unsigned size,\n        // we only have 1 thing to check for.\n        if (fileDataEnd > self.fileSize) {\n          return callback(new Error(\"file data overflows file bounds: \" +\n              fileDataStart + \" + \" + entry.compressedSize + \" > \" + self.fileSize));\n        }\n      }\n      var readStream = self.reader.createReadStream({\n        start: fileDataStart + relativeStart,\n        end: fileDataStart + relativeEnd,\n      });\n      var endpointStream = readStream;\n      if (decompress) {\n        var destroyed = false;\n        var inflateFilter = zlib.createInflateRaw();\n        readStream.on(\"error\", function(err) {\n          // setImmediate here because errors can be emitted during the first call to pipe()\n          setImmediate(function() {\n            if (!destroyed) inflateFilter.emit(\"error\", err);\n          });\n        });\n        readStream.pipe(inflateFilter);\n\n        if (self.validateEntrySizes) {\n          endpointStream = new AssertByteCountStream(entry.uncompressedSize);\n          inflateFilter.on(\"error\", function(err) {\n            // forward zlib errors to the client-visible stream\n            setImmediate(function() {\n              if (!destroyed) endpointStream.emit(\"error\", err);\n            });\n          });\n          inflateFilter.pipe(endpointStream);\n        } else {\n          // the zlib filter is the client-visible stream\n          endpointStream = inflateFilter;\n        }\n        // this is part of yauzl's API, so implement this function on the client-visible stream\n        endpointStream.destroy = function() {\n          destroyed = true;\n          if (inflateFilter !== endpointStream) inflateFilter.unpipe(endpointStream);\n          readStream.unpipe(inflateFilter);\n          // TODO: the inflateFilter may cause a memory leak. see Issue #27.\n          readStream.destroy();\n        };\n      }\n      callback(null, endpointStream);\n    } finally {\n      self.reader.unref();\n    }\n  });\n};\n\nfunction Entry() {\n}\nEntry.prototype.getLastModDate = function() {\n  return dosDateTimeToDate(this.lastModFileDate, this.lastModFileTime);\n};\nEntry.prototype.isEncrypted = function() {\n  return (this.generalPurposeBitFlag & 0x1) !== 0;\n};\nEntry.prototype.isCompressed = function() {\n  return this.compressionMethod === 8;\n};\n\nfunction dosDateTimeToDate(date, time) {\n  var day = date & 0x1f; // 1-31\n  var month = (date >> 5 & 0xf) - 1; // 1-12, 0-11\n  var year = (date >> 9 & 0x7f) + 1980; // 0-128, 1980-2108\n\n  var millisecond = 0;\n  var second = (time & 0x1f) * 2; // 0-29, 0-58 (even numbers)\n  var minute = time >> 5 & 0x3f; // 0-59\n  var hour = time >> 11 & 0x1f; // 0-23\n\n  return new Date(year, month, day, hour, minute, second, millisecond);\n}\n\nfunction validateFileName(fileName) {\n  if (fileName.indexOf(\"\\\\\") !== -1) {\n    return \"invalid characters in fileName: \" + fileName;\n  }\n  if (/^[a-zA-Z]:/.test(fileName) || /^\\//.test(fileName)) {\n    return \"absolute path: \" + fileName;\n  }\n  if (fileName.split(\"/\").indexOf(\"..\") !== -1) {\n    return \"invalid relative path: \" + fileName;\n  }\n  // all good\n  return null;\n}\n\nfunction readAndAssertNoEof(reader, buffer, offset, length, position, callback) {\n  if (length === 0) {\n    // fs.read will throw an out-of-bounds error if you try to read 0 bytes from a 0 byte file\n    return setImmediate(function() { callback(null, newBuffer(0)); });\n  }\n  reader.read(buffer, offset, length, position, function(err, bytesRead) {\n    if (err) return callback(err);\n    if (bytesRead < length) {\n      return callback(new Error(\"unexpected EOF\"));\n    }\n    callback();\n  });\n}\n\nutil.inherits(AssertByteCountStream, Transform);\nfunction AssertByteCountStream(byteCount) {\n  Transform.call(this);\n  this.actualByteCount = 0;\n  this.expectedByteCount = byteCount;\n}\nAssertByteCountStream.prototype._transform = function(chunk, encoding, cb) {\n  this.actualByteCount += chunk.length;\n  if (this.actualByteCount > this.expectedByteCount) {\n    var msg = \"too many bytes in the stream. expected \" + this.expectedByteCount + \". got at least \" + this.actualByteCount;\n    return cb(new Error(msg));\n  }\n  cb(null, chunk);\n};\nAssertByteCountStream.prototype._flush = function(cb) {\n  if (this.actualByteCount < this.expectedByteCount) {\n    var msg = \"not enough bytes in the stream. expected \" + this.expectedByteCount + \". got only \" + this.actualByteCount;\n    return cb(new Error(msg));\n  }\n  cb();\n};\n\nutil.inherits(RandomAccessReader, EventEmitter);\nfunction RandomAccessReader() {\n  EventEmitter.call(this);\n  this.refCount = 0;\n}\nRandomAccessReader.prototype.ref = function() {\n  this.refCount += 1;\n};\nRandomAccessReader.prototype.unref = function() {\n  var self = this;\n  self.refCount -= 1;\n\n  if (self.refCount > 0) return;\n  if (self.refCount < 0) throw new Error(\"invalid unref\");\n\n  self.close(onCloseDone);\n\n  function onCloseDone(err) {\n    if (err) return self.emit('error', err);\n    self.emit('close');\n  }\n};\nRandomAccessReader.prototype.createReadStream = function(options) {\n  var start = options.start;\n  var end = options.end;\n  if (start === end) {\n    var emptyStream = new PassThrough();\n    setImmediate(function() {\n      emptyStream.end();\n    });\n    return emptyStream;\n  }\n  var stream = this._readStreamForRange(start, end);\n\n  var destroyed = false;\n  var refUnrefFilter = new RefUnrefFilter(this);\n  stream.on(\"error\", function(err) {\n    setImmediate(function() {\n      if (!destroyed) refUnrefFilter.emit(\"error\", err);\n    });\n  });\n  refUnrefFilter.destroy = function() {\n    stream.unpipe(refUnrefFilter);\n    refUnrefFilter.unref();\n    stream.destroy();\n  };\n\n  var byteCounter = new AssertByteCountStream(end - start);\n  refUnrefFilter.on(\"error\", function(err) {\n    setImmediate(function() {\n      if (!destroyed) byteCounter.emit(\"error\", err);\n    });\n  });\n  byteCounter.destroy = function() {\n    destroyed = true;\n    refUnrefFilter.unpipe(byteCounter);\n    refUnrefFilter.destroy();\n  };\n\n  return stream.pipe(refUnrefFilter).pipe(byteCounter);\n};\nRandomAccessReader.prototype._readStreamForRange = function(start, end) {\n  throw new Error(\"not implemented\");\n};\nRandomAccessReader.prototype.read = function(buffer, offset, length, position, callback) {\n  var readStream = this.createReadStream({start: position, end: position + length});\n  var writeStream = new Writable();\n  var written = 0;\n  writeStream._write = function(chunk, encoding, cb) {\n    chunk.copy(buffer, offset + written, 0, chunk.length);\n    written += chunk.length;\n    cb();\n  };\n  writeStream.on(\"finish\", callback);\n  readStream.on(\"error\", function(error) {\n    callback(error);\n  });\n  readStream.pipe(writeStream);\n};\nRandomAccessReader.prototype.close = function(callback) {\n  setImmediate(callback);\n};\n\nutil.inherits(RefUnrefFilter, PassThrough);\nfunction RefUnrefFilter(context) {\n  PassThrough.call(this);\n  this.context = context;\n  this.context.ref();\n  this.unreffedYet = false;\n}\nRefUnrefFilter.prototype._flush = function(cb) {\n  this.unref();\n  cb();\n};\nRefUnrefFilter.prototype.unref = function(cb) {\n  if (this.unreffedYet) return;\n  this.unreffedYet = true;\n  this.context.unref();\n};\n\nvar cp437 = '\\u0000☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ';\nfunction decodeBuffer(buffer, start, end, isUtf8) {\n  if (isUtf8) {\n    return buffer.toString(\"utf8\", start, end);\n  } else {\n    var result = \"\";\n    for (var i = start; i < end; i++) {\n      result += cp437[buffer[i]];\n    }\n    return result;\n  }\n}\n\nfunction readUInt64LE(buffer, offset) {\n  // there is no native function for this, because we can't actually store 64-bit integers precisely.\n  // after 53 bits, JavaScript's Number type (IEEE 754 double) can't store individual integers anymore.\n  // but since 53 bits is a whole lot more than 32 bits, we do our best anyway.\n  var lower32 = buffer.readUInt32LE(offset);\n  var upper32 = buffer.readUInt32LE(offset + 4);\n  // we can't use bitshifting here, because JavaScript bitshifting only works on 32-bit integers.\n  return upper32 * 0x100000000 + lower32;\n  // as long as we're bounds checking the result of this function against the total file size,\n  // we'll catch any overflow errors, because we already made sure the total file size was within reason.\n}\n\n// Node 10 deprecated new Buffer().\nvar newBuffer;\nif (typeof Buffer.allocUnsafe === \"function\") {\n  newBuffer = function(len) {\n    return Buffer.allocUnsafe(len);\n  };\n} else {\n  newBuffer = function(len) {\n    return new Buffer(len);\n  };\n}\n\nfunction defaultCallback(err) {\n  if (err) throw err;\n}\n","var fs = require('fs');\nvar util = require('util');\nvar stream = require('stream');\nvar Readable = stream.Readable;\nvar Writable = stream.Writable;\nvar PassThrough = stream.PassThrough;\nvar Pend = require('pend');\nvar EventEmitter = require('events').EventEmitter;\n\nexports.createFromBuffer = createFromBuffer;\nexports.createFromFd = createFromFd;\nexports.BufferSlicer = BufferSlicer;\nexports.FdSlicer = FdSlicer;\n\nutil.inherits(FdSlicer, EventEmitter);\nfunction FdSlicer(fd, options) {\n  options = options || {};\n  EventEmitter.call(this);\n\n  this.fd = fd;\n  this.pend = new Pend();\n  this.pend.max = 1;\n  this.refCount = 0;\n  this.autoClose = !!options.autoClose;\n}\n\nFdSlicer.prototype.read = function(buffer, offset, length, position, callback) {\n  var self = this;\n  self.pend.go(function(cb) {\n    fs.read(self.fd, buffer, offset, length, position, function(err, bytesRead, buffer) {\n      cb();\n      callback(err, bytesRead, buffer);\n    });\n  });\n};\n\nFdSlicer.prototype.write = function(buffer, offset, length, position, callback) {\n  var self = this;\n  self.pend.go(function(cb) {\n    fs.write(self.fd, buffer, offset, length, position, function(err, written, buffer) {\n      cb();\n      callback(err, written, buffer);\n    });\n  });\n};\n\nFdSlicer.prototype.createReadStream = function(options) {\n  return new ReadStream(this, options);\n};\n\nFdSlicer.prototype.createWriteStream = function(options) {\n  return new WriteStream(this, options);\n};\n\nFdSlicer.prototype.ref = function() {\n  this.refCount += 1;\n};\n\nFdSlicer.prototype.unref = function() {\n  var self = this;\n  self.refCount -= 1;\n\n  if (self.refCount > 0) return;\n  if (self.refCount < 0) throw new Error(\"invalid unref\");\n\n  if (self.autoClose) {\n    fs.close(self.fd, onCloseDone);\n  }\n\n  function onCloseDone(err) {\n    if (err) {\n      self.emit('error', err);\n    } else {\n      self.emit('close');\n    }\n  }\n};\n\nutil.inherits(ReadStream, Readable);\nfunction ReadStream(context, options) {\n  options = options || {};\n  Readable.call(this, options);\n\n  this.context = context;\n  this.context.ref();\n\n  this.start = options.start || 0;\n  this.endOffset = options.end;\n  this.pos = this.start;\n  this.destroyed = false;\n}\n\nReadStream.prototype._read = function(n) {\n  var self = this;\n  if (self.destroyed) return;\n\n  var toRead = Math.min(self._readableState.highWaterMark, n);\n  if (self.endOffset != null) {\n    toRead = Math.min(toRead, self.endOffset - self.pos);\n  }\n  if (toRead <= 0) {\n    self.destroyed = true;\n    self.push(null);\n    self.context.unref();\n    return;\n  }\n  self.context.pend.go(function(cb) {\n    if (self.destroyed) return cb();\n    var buffer = new Buffer(toRead);\n    fs.read(self.context.fd, buffer, 0, toRead, self.pos, function(err, bytesRead) {\n      if (err) {\n        self.destroy(err);\n      } else if (bytesRead === 0) {\n        self.destroyed = true;\n        self.push(null);\n        self.context.unref();\n      } else {\n        self.pos += bytesRead;\n        self.push(buffer.slice(0, bytesRead));\n      }\n      cb();\n    });\n  });\n};\n\nReadStream.prototype.destroy = function(err) {\n  if (this.destroyed) return;\n  err = err || new Error(\"stream destroyed\");\n  this.destroyed = true;\n  this.emit('error', err);\n  this.context.unref();\n};\n\nutil.inherits(WriteStream, Writable);\nfunction WriteStream(context, options) {\n  options = options || {};\n  Writable.call(this, options);\n\n  this.context = context;\n  this.context.ref();\n\n  this.start = options.start || 0;\n  this.endOffset = (options.end == null) ? Infinity : +options.end;\n  this.bytesWritten = 0;\n  this.pos = this.start;\n  this.destroyed = false;\n\n  this.on('finish', this.destroy.bind(this));\n}\n\nWriteStream.prototype._write = function(buffer, encoding, callback) {\n  var self = this;\n  if (self.destroyed) return;\n\n  if (self.pos + buffer.length > self.endOffset) {\n    var err = new Error(\"maximum file length exceeded\");\n    err.code = 'ETOOBIG';\n    self.destroy();\n    callback(err);\n    return;\n  }\n  self.context.pend.go(function(cb) {\n    if (self.destroyed) return cb();\n    fs.write(self.context.fd, buffer, 0, buffer.length, self.pos, function(err, bytes) {\n      if (err) {\n        self.destroy();\n        cb();\n        callback(err);\n      } else {\n        self.bytesWritten += bytes;\n        self.pos += bytes;\n        self.emit('progress');\n        cb();\n        callback();\n      }\n    });\n  });\n};\n\nWriteStream.prototype.destroy = function() {\n  if (this.destroyed) return;\n  this.destroyed = true;\n  this.context.unref();\n};\n\nutil.inherits(BufferSlicer, EventEmitter);\nfunction BufferSlicer(buffer, options) {\n  EventEmitter.call(this);\n\n  options = options || {};\n  this.refCount = 0;\n  this.buffer = buffer;\n  this.maxChunkSize = options.maxChunkSize || Number.MAX_SAFE_INTEGER;\n}\n\nBufferSlicer.prototype.read = function(buffer, offset, length, position, callback) {\n  var end = position + length;\n  var delta = end - this.buffer.length;\n  var written = (delta > 0) ? delta : length;\n  this.buffer.copy(buffer, offset, position, end);\n  setImmediate(function() {\n    callback(null, written);\n  });\n};\n\nBufferSlicer.prototype.write = function(buffer, offset, length, position, callback) {\n  buffer.copy(this.buffer, position, offset, offset + length);\n  setImmediate(function() {\n    callback(null, length, buffer);\n  });\n};\n\nBufferSlicer.prototype.createReadStream = function(options) {\n  options = options || {};\n  var readStream = new PassThrough(options);\n  readStream.destroyed = false;\n  readStream.start = options.start || 0;\n  readStream.endOffset = options.end;\n  // by the time this function returns, we'll be done.\n  readStream.pos = readStream.endOffset || this.buffer.length;\n\n  // respect the maxChunkSize option to slice up the chunk into smaller pieces.\n  var entireSlice = this.buffer.slice(readStream.start, readStream.pos);\n  var offset = 0;\n  while (true) {\n    var nextOffset = offset + this.maxChunkSize;\n    if (nextOffset >= entireSlice.length) {\n      // last chunk\n      if (offset < entireSlice.length) {\n        readStream.write(entireSlice.slice(offset, entireSlice.length));\n      }\n      break;\n    }\n    readStream.write(entireSlice.slice(offset, nextOffset));\n    offset = nextOffset;\n  }\n\n  readStream.end();\n  readStream.destroy = function() {\n    readStream.destroyed = true;\n  };\n  return readStream;\n};\n\nBufferSlicer.prototype.createWriteStream = function(options) {\n  var bufferSlicer = this;\n  options = options || {};\n  var writeStream = new Writable(options);\n  writeStream.start = options.start || 0;\n  writeStream.endOffset = (options.end == null) ? this.buffer.length : +options.end;\n  writeStream.bytesWritten = 0;\n  writeStream.pos = writeStream.start;\n  writeStream.destroyed = false;\n  writeStream._write = function(buffer, encoding, callback) {\n    if (writeStream.destroyed) return;\n\n    var end = writeStream.pos + buffer.length;\n    if (end > writeStream.endOffset) {\n      var err = new Error(\"maximum file length exceeded\");\n      err.code = 'ETOOBIG';\n      writeStream.destroyed = true;\n      callback(err);\n      return;\n    }\n    buffer.copy(bufferSlicer.buffer, writeStream.pos, 0, buffer.length);\n\n    writeStream.bytesWritten += buffer.length;\n    writeStream.pos = end;\n    writeStream.emit('progress');\n    callback();\n  };\n  writeStream.destroy = function() {\n    writeStream.destroyed = true;\n  };\n  return writeStream;\n};\n\nBufferSlicer.prototype.ref = function() {\n  this.refCount += 1;\n};\n\nBufferSlicer.prototype.unref = function() {\n  this.refCount -= 1;\n\n  if (this.refCount < 0) {\n    throw new Error(\"invalid unref\");\n  }\n};\n\nfunction createFromBuffer(buffer, options) {\n  return new BufferSlicer(buffer, options);\n}\n\nfunction createFromFd(fd, options) {\n  return new FdSlicer(fd, options);\n}\n","module.exports = Pend;\n\nfunction Pend() {\n  this.pending = 0;\n  this.max = Infinity;\n  this.listeners = [];\n  this.waiting = [];\n  this.error = null;\n}\n\nPend.prototype.go = function(fn) {\n  if (this.pending < this.max) {\n    pendGo(this, fn);\n  } else {\n    this.waiting.push(fn);\n  }\n};\n\nPend.prototype.wait = function(cb) {\n  if (this.pending === 0) {\n    cb(this.error);\n  } else {\n    this.listeners.push(cb);\n  }\n};\n\nPend.prototype.hold = function() {\n  return pendHold(this);\n};\n\nfunction pendHold(self) {\n  self.pending += 1;\n  var called = false;\n  return onCb;\n  function onCb(err) {\n    if (called) throw new Error(\"callback called twice\");\n    called = true;\n    self.error = self.error || err;\n    self.pending -= 1;\n    if (self.waiting.length > 0 && self.pending < self.max) {\n      pendGo(self, self.waiting.shift());\n    } else if (self.pending === 0) {\n      var listeners = self.listeners;\n      self.listeners = [];\n      listeners.forEach(cbListener);\n    }\n  }\n  function cbListener(listener) {\n    listener(self.error);\n  }\n}\n\nfunction pendGo(self, fn) {\n  fn(pendHold(self));\n}\n","var Buffer = require('buffer').Buffer;\n\nvar CRC_TABLE = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419,\n  0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4,\n  0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07,\n  0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de,\n  0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856,\n  0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n  0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4,\n  0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n  0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3,\n  0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a,\n  0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599,\n  0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190,\n  0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f,\n  0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e,\n  0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n  0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed,\n  0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n  0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3,\n  0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2,\n  0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a,\n  0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5,\n  0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010,\n  0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17,\n  0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6,\n  0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615,\n  0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8,\n  0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344,\n  0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n  0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a,\n  0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n  0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1,\n  0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c,\n  0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef,\n  0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe,\n  0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31,\n  0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c,\n  0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n  0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b,\n  0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n  0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1,\n  0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,\n  0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278,\n  0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7,\n  0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66,\n  0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605,\n  0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8,\n  0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b,\n  0x2d02ef8d\n];\n\nif (typeof Int32Array !== 'undefined') {\n  CRC_TABLE = new Int32Array(CRC_TABLE);\n}\n\nfunction ensureBuffer(input) {\n  if (Buffer.isBuffer(input)) {\n    return input;\n  }\n\n  var hasNewBufferAPI =\n      typeof Buffer.alloc === \"function\" &&\n      typeof Buffer.from === \"function\";\n\n  if (typeof input === \"number\") {\n    return hasNewBufferAPI ? Buffer.alloc(input) : new Buffer(input);\n  }\n  else if (typeof input === \"string\") {\n    return hasNewBufferAPI ? Buffer.from(input) : new Buffer(input);\n  }\n  else {\n    throw new Error(\"input must be buffer, number, or string, received \" +\n                    typeof input);\n  }\n}\n\nfunction bufferizeInt(num) {\n  var tmp = ensureBuffer(4);\n  tmp.writeInt32BE(num, 0);\n  return tmp;\n}\n\nfunction _crc32(buf, previous) {\n  buf = ensureBuffer(buf);\n  if (Buffer.isBuffer(previous)) {\n    previous = previous.readUInt32BE(0);\n  }\n  var crc = ~~previous ^ -1;\n  for (var n = 0; n < buf.length; n++) {\n    crc = CRC_TABLE[(crc ^ buf[n]) & 0xff] ^ (crc >>> 8);\n  }\n  return (crc ^ -1);\n}\n\nfunction crc32() {\n  return bufferizeInt(_crc32.apply(null, arguments));\n}\ncrc32.signed = function () {\n  return _crc32.apply(null, arguments);\n};\ncrc32.unsigned = function () {\n  return _crc32.apply(null, arguments) >>> 0;\n};\n\nmodule.exports = crc32;\n","module.exports = require(\"buffer\");","var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nexport class InstallationInformation {\r\n    stage: string;\r\n    hasError: boolean;\r\n    telemetryProperties: { [key: string]: string };\r\n\r\n    constructor() {\r\n        this.hasError = false;\r\n        this.telemetryProperties = {};\r\n    }\r\n}\r\n\r\nlet installBlob: InstallationInformation;\r\n\r\nexport function getInstallationInformation(): InstallationInformation {\r\n    if (!installBlob) {\r\n        installBlob = new InstallationInformation();\r\n    }\r\n    return installBlob;\r\n}\r\n\r\nexport function setInstallationStage(stage: string): void {\r\n    getInstallationInformation().stage = stage;\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport { CustomConfigurationProvider, Version, CppToolsApi } from 'vscode-cpptools';\r\nimport { CppToolsTestApi, CppToolsTestHook, CppToolsTestExtension } from 'vscode-cpptools/out/testApi';\r\nimport { CppTools } from './cppTools';\r\n\r\n/**\r\n * This class implements both interfaces since the extension returned CppToolsApi for v0,\r\n * but returns CppToolsTestExtension for v1 and later.\r\n */\r\nexport class CppTools1 implements CppToolsTestApi, CppToolsTestExtension {\r\n    private backupApi: CppTools;\r\n\r\n    private get BackupApi(): CppToolsTestApi {\r\n        if (!this.backupApi) {\r\n            this.backupApi = new CppTools(Version.v0);\r\n        }\r\n        return this.backupApi;\r\n    }\r\n\r\n    getApi(version: Version): CppToolsApi {\r\n        switch (version) {\r\n            case Version.v0:\r\n                return this.BackupApi;\r\n\r\n            default:\r\n                return new CppTools(version);\r\n        }\r\n    }\r\n\r\n    getTestApi(version: Version): CppToolsTestApi {\r\n        return <CppToolsTestApi>this.getApi(version);\r\n    }\r\n\r\n    getVersion(): Version {\r\n        return this.BackupApi.getVersion();\r\n    }\r\n\r\n    registerCustomConfigurationProvider(provider: CustomConfigurationProvider): void {\r\n        this.BackupApi.registerCustomConfigurationProvider(provider);\r\n    }\r\n\r\n    notifyReady(provider: CustomConfigurationProvider): void {\r\n        this.BackupApi.notifyReady(provider);\r\n    }\r\n\r\n    didChangeCustomConfiguration(provider: CustomConfigurationProvider): void {\r\n        this.BackupApi.didChangeCustomConfiguration(provider);\r\n    }\r\n\r\n    didChangeCustomBrowseConfiguration(provider: CustomConfigurationProvider): void {\r\n        this.BackupApi.didChangeCustomBrowseConfiguration(provider);\r\n    }\r\n\r\n    dispose(): void {\r\n    }\r\n\r\n    getTestHook(): CppToolsTestHook {\r\n        return this.BackupApi.getTestHook();\r\n    }\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All Rights Reserved.\r\n * See 'LICENSE' in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n\r\nimport { CustomConfigurationProvider, Version } from 'vscode-cpptools';\r\nimport { CppToolsTestApi, CppToolsTestHook } from 'vscode-cpptools/out/testApi';\r\nimport { CustomConfigurationProvider1, getCustomConfigProviders, CustomConfigurationProviderCollection } from './LanguageServer/customProviders';\r\nimport { getOutputChannel } from './logger';\r\nimport * as LanguageServer from './LanguageServer/extension';\r\nimport * as test from './testHook';\r\n\r\nexport class CppTools implements CppToolsTestApi {\r\n    private version: Version;\r\n    private providers: CustomConfigurationProvider1[] = [];\r\n    private failedRegistrations: CustomConfigurationProvider[] = [];\r\n    private timers = new Map<string, NodeJS.Timer>();\r\n\r\n    constructor(version: Version) {\r\n        if (version > Version.latest) {\r\n            console.warn(`version ${version} is not supported by this version of cpptools`);\r\n            console.warn(`  using ${Version.latest} instead`);\r\n            version = Version.latest;\r\n        }\r\n        this.version = version;\r\n    }\r\n\r\n    private addNotifyReadyTimer(provider: CustomConfigurationProvider1): void {\r\n        if (this.version >= Version.v2) {\r\n            const timeout: number = 30;\r\n            let timer: NodeJS.Timer = setTimeout(() => {\r\n                console.warn(`registered provider ${provider.extensionId} did not call 'notifyReady' within ${timeout} seconds`);\r\n            }, timeout * 1000);\r\n            this.timers.set(provider.extensionId, timer);\r\n        }\r\n    }\r\n\r\n    private removeNotifyReadyTimer(provider: CustomConfigurationProvider1): void {\r\n        if (this.version >= Version.v2) {\r\n            let timer: NodeJS.Timer = this.timers.get(provider.extensionId);\r\n            if (timer) {\r\n                this.timers.delete(provider.extensionId);\r\n                clearTimeout(timer);\r\n            }\r\n        }\r\n    }\r\n\r\n    public getVersion(): Version {\r\n        return this.version;\r\n    }\r\n\r\n    public registerCustomConfigurationProvider(provider: CustomConfigurationProvider): void {\r\n        let providers: CustomConfigurationProviderCollection = getCustomConfigProviders();\r\n        if (providers.add(provider, this.version)) {\r\n            let added: CustomConfigurationProvider1 = providers.get(provider);\r\n            getOutputChannel().appendLine(`Custom configuration provider '${added.name}' registered`);\r\n            this.providers.push(added);\r\n            LanguageServer.getClients().forEach(client => client.onRegisterCustomConfigurationProvider(added));\r\n            this.addNotifyReadyTimer(added);\r\n        } else {\r\n            this.failedRegistrations.push(provider);\r\n        }\r\n    }\r\n\r\n    public notifyReady(provider: CustomConfigurationProvider): void {\r\n        let providers: CustomConfigurationProviderCollection = getCustomConfigProviders();\r\n        let p: CustomConfigurationProvider1 = providers.get(provider);\r\n\r\n        if (p) {\r\n            this.removeNotifyReadyTimer(p);\r\n            p.isReady = true;\r\n            LanguageServer.getClients().forEach(client => {\r\n                client.updateCustomConfigurations(p);\r\n                client.updateCustomBrowseConfiguration(p);\r\n            });\r\n        } else if (this.failedRegistrations.find(p => p === provider)) {\r\n            console.warn(\"provider not successfully registered, 'notifyReady' ignored\");\r\n        } else {\r\n            console.warn(\"provider should be registered before signaling it's ready to provide configurations\");\r\n        }\r\n    }\r\n\r\n    public didChangeCustomConfiguration(provider: CustomConfigurationProvider): void {\r\n        let providers: CustomConfigurationProviderCollection = getCustomConfigProviders();\r\n        let p: CustomConfigurationProvider1 = providers.get(provider);\r\n\r\n        if (p) {\r\n            if (!p.isReady) {\r\n                console.warn(\"didChangeCustomConfiguration was invoked before notifyReady\");\r\n            }\r\n            LanguageServer.getClients().forEach(client => client.updateCustomConfigurations(p));\r\n        } else if (this.failedRegistrations.find(p => p === provider)) {\r\n            console.warn(\"provider not successfully registered, 'didChangeCustomConfiguration' ignored\");\r\n        } else {\r\n            console.warn(\"provider should be registered before sending config change messages\");\r\n        }\r\n    }\r\n\r\n    public didChangeCustomBrowseConfiguration(provider: CustomConfigurationProvider): void {\r\n        let providers: CustomConfigurationProviderCollection = getCustomConfigProviders();\r\n        let p: CustomConfigurationProvider1 = providers.get(provider);\r\n\r\n        if (p) {\r\n            LanguageServer.getClients().forEach(client => client.updateCustomBrowseConfiguration(p));\r\n        } else if (this.failedRegistrations.find(p => p === provider)) {\r\n            console.warn(\"provider not successfully registered, 'didChangeCustomBrowseConfiguration' ignored\");\r\n        } else {\r\n            console.warn(\"provider should be registered before sending config change messages\");\r\n        }\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.providers.forEach(provider => {\r\n            getCustomConfigProviders().remove(provider);\r\n            provider.dispose();\r\n        });\r\n        this.providers = [];\r\n    }\r\n\r\n    public getTestHook(): CppToolsTestHook {\r\n        return test.getTestHook();\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as Json from './main';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, 0, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = Json.createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === Json.SyntaxKind.Trivia || token === Json.SyntaxKind.LineBreakTrivia) {\n            lineBreak = lineBreak || (token === Json.SyntaxKind.LineBreakTrivia);\n            token = scanner.scan();\n        }\n        hasError = token === Json.SyntaxKind.Unknown || scanner.getTokenError() !== Json.ScanError.None;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== Json.SyntaxKind.EOF) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== Json.SyntaxKind.EOF) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === Json.SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === Json.SyntaxKind.CloseBraceToken) {\n            if (firstToken !== Json.SyntaxKind.OpenBraceToken) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === Json.SyntaxKind.CloseBracketToken) {\n            if (firstToken !== Json.SyntaxKind.OpenBracketToken) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case Json.SyntaxKind.OpenBracketToken:\n                case Json.SyntaxKind.OpenBraceToken:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case Json.SyntaxKind.CommaToken:\n                case Json.SyntaxKind.LineCommentTrivia:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case Json.SyntaxKind.BlockCommentTrivia:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case Json.SyntaxKind.ColonToken:\n                    replaceContent = ' ';\n                    break;\n                case Json.SyntaxKind.StringLiteral:\n                    if (secondToken === Json.SyntaxKind.ColonToken) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case Json.SyntaxKind.NullKeyword:\n                case Json.SyntaxKind.TrueKeyword:\n                case Json.SyntaxKind.FalseKeyword:\n                case Json.SyntaxKind.NumericLiteral:\n                case Json.SyntaxKind.CloseBraceToken:\n                case Json.SyntaxKind.CloseBracketToken:\n                    if (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== Json.SyntaxKind.CommaToken && secondToken !== Json.SyntaxKind.EOF) {\n                        hasError = true;\n                    }\n                    break;\n                case Json.SyntaxKind.Unknown:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, offset, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=format.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { parseTree, findNodeAtLocation } from './main';\nimport { format, isEOL } from './format';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, path, value, formattingOptions, getInsertionIndex) {\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) {\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) {\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) {\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n    var _a;\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) {\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=edit.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format as _format } from './format';\nimport { setProperty, applyEdit } from './edit';\nexport var ScanError;\n(function (ScanError) {\n    ScanError[ScanError[\"None\"] = 0] = \"None\";\n    ScanError[ScanError[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\n    ScanError[ScanError[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\n    ScanError[ScanError[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\n    ScanError[ScanError[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\n    ScanError[ScanError[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\n    ScanError[ScanError[\"InvalidCharacter\"] = 6] = \"InvalidCharacter\";\n})(ScanError || (ScanError = {}));\nexport var SyntaxKind;\n(function (SyntaxKind) {\n    SyntaxKind[SyntaxKind[\"Unknown\"] = 0] = \"Unknown\";\n    SyntaxKind[SyntaxKind[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\n    SyntaxKind[SyntaxKind[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\n    SyntaxKind[SyntaxKind[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\n    SyntaxKind[SyntaxKind[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\n    SyntaxKind[SyntaxKind[\"CommaToken\"] = 5] = \"CommaToken\";\n    SyntaxKind[SyntaxKind[\"ColonToken\"] = 6] = \"ColonToken\";\n    SyntaxKind[SyntaxKind[\"NullKeyword\"] = 7] = \"NullKeyword\";\n    SyntaxKind[SyntaxKind[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\n    SyntaxKind[SyntaxKind[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\n    SyntaxKind[SyntaxKind[\"StringLiteral\"] = 10] = \"StringLiteral\";\n    SyntaxKind[SyntaxKind[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\n    SyntaxKind[SyntaxKind[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\n    SyntaxKind[SyntaxKind[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\n    SyntaxKind[SyntaxKind[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\n    SyntaxKind[SyntaxKind[\"Trivia\"] = 15] = \"Trivia\";\n    SyntaxKind[SyntaxKind[\"EOF\"] = 16] = \"EOF\";\n})(SyntaxKind || (SyntaxKind = {}));\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = SyntaxKind.Unknown, scanError = ScanError.None;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = SyntaxKind.Unknown;\n        scanError = ScanError.None;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = ScanError.UnexpectedEndOfNumber;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = ScanError.UnexpectedEndOfNumber;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = ScanError.UnexpectedEndOfString;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = ScanError.UnexpectedEndOfString;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = ScanError.InvalidUnicode;\n                        }\n                        break;\n                    default:\n                        scanError = ScanError.InvalidEscapeCharacter;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = ScanError.UnexpectedEndOfString;\n                    break;\n                }\n                else {\n                    scanError = ScanError.InvalidCharacter;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = ScanError.None;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = SyntaxKind.EOF;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = SyntaxKind.Trivia;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = SyntaxKind.LineBreakTrivia;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = SyntaxKind.OpenBraceToken;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = SyntaxKind.CloseBraceToken;\n            case 91 /* openBracket */:\n                pos++;\n                return token = SyntaxKind.OpenBracketToken;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = SyntaxKind.CloseBracketToken;\n            case 58 /* colon */:\n                pos++;\n                return token = SyntaxKind.ColonToken;\n            case 44 /* comma */:\n                pos++;\n                return token = SyntaxKind.CommaToken;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = SyntaxKind.StringLiteral;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = SyntaxKind.LineCommentTrivia;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = ScanError.UnexpectedEndOfComment;\n                    }\n                    value = text.substring(start, pos);\n                    return token = SyntaxKind.BlockCommentTrivia;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = SyntaxKind.Unknown;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = SyntaxKind.Unknown;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = SyntaxKind.NumericLiteral;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = SyntaxKind.TrueKeyword;\n                        case 'false': return token = SyntaxKind.FalseKeyword;\n                        case 'null': return token = SyntaxKind.NullKeyword;\n                    }\n                    return token = SyntaxKind.Unknown;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = SyntaxKind.Unknown;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case SyntaxKind.LineCommentTrivia:\n            case SyntaxKind.BlockCommentTrivia:\n            case SyntaxKind.EOF:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== SyntaxKind.EOF);\n    return parts.join('');\n}\nexport var ParseErrorCode;\n(function (ParseErrorCode) {\n    ParseErrorCode[ParseErrorCode[\"InvalidSymbol\"] = 0] = \"InvalidSymbol\";\n    ParseErrorCode[ParseErrorCode[\"InvalidNumberFormat\"] = 1] = \"InvalidNumberFormat\";\n    ParseErrorCode[ParseErrorCode[\"PropertyNameExpected\"] = 2] = \"PropertyNameExpected\";\n    ParseErrorCode[ParseErrorCode[\"ValueExpected\"] = 3] = \"ValueExpected\";\n    ParseErrorCode[ParseErrorCode[\"ColonExpected\"] = 4] = \"ColonExpected\";\n    ParseErrorCode[ParseErrorCode[\"CommaExpected\"] = 5] = \"CommaExpected\";\n    ParseErrorCode[ParseErrorCode[\"CloseBraceExpected\"] = 6] = \"CloseBraceExpected\";\n    ParseErrorCode[ParseErrorCode[\"CloseBracketExpected\"] = 7] = \"CloseBracketExpected\";\n    ParseErrorCode[ParseErrorCode[\"EndOfFileExpected\"] = 8] = \"EndOfFileExpected\";\n    ParseErrorCode[ParseErrorCode[\"InvalidCommentToken\"] = 9] = \"InvalidCommentToken\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfComment\"] = 10] = \"UnexpectedEndOfComment\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfString\"] = 11] = \"UnexpectedEndOfString\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfNumber\"] = 12] = \"UnexpectedEndOfNumber\";\n    ParseErrorCode[ParseErrorCode[\"InvalidUnicode\"] = 13] = \"InvalidUnicode\";\n    ParseErrorCode[ParseErrorCode[\"InvalidEscapeCharacter\"] = 14] = \"InvalidEscapeCharacter\";\n    ParseErrorCode[ParseErrorCode[\"InvalidCharacter\"] = 15] = \"InvalidCharacter\";\n})(ParseErrorCode || (ParseErrorCode = {}));\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object'\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.columnOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.columnOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [] }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.columnOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    if (node.type === 'array') {\n        return node.children.map(getNodeValue);\n    }\n    else if (node.type === 'object') {\n        var obj = Object.create(null);\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            obj[prop.children[0].value] = getNodeValue(prop.children[1]);\n        }\n        return obj;\n    }\n    return node.value;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case ScanError.InvalidUnicode:\n                    handleError(ParseErrorCode.InvalidUnicode);\n                    break;\n                case ScanError.InvalidEscapeCharacter:\n                    handleError(ParseErrorCode.InvalidEscapeCharacter);\n                    break;\n                case ScanError.UnexpectedEndOfNumber:\n                    handleError(ParseErrorCode.UnexpectedEndOfNumber);\n                    break;\n                case ScanError.UnexpectedEndOfComment:\n                    if (!disallowComments) {\n                        handleError(ParseErrorCode.UnexpectedEndOfComment);\n                    }\n                    break;\n                case ScanError.UnexpectedEndOfString:\n                    handleError(ParseErrorCode.UnexpectedEndOfString);\n                    break;\n                case ScanError.InvalidCharacter:\n                    handleError(ParseErrorCode.InvalidCharacter);\n                    break;\n            }\n            switch (token) {\n                case SyntaxKind.LineCommentTrivia:\n                case SyntaxKind.BlockCommentTrivia:\n                    if (disallowComments) {\n                        handleError(ParseErrorCode.InvalidCommentToken);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case SyntaxKind.Unknown:\n                    handleError(ParseErrorCode.InvalidSymbol);\n                    break;\n                case SyntaxKind.Trivia:\n                case SyntaxKind.LineBreakTrivia:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== SyntaxKind.EOF) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case SyntaxKind.NumericLiteral:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(ParseErrorCode.InvalidNumberFormat);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(ParseErrorCode.InvalidNumberFormat);\n                }\n                onLiteralValue(value);\n                break;\n            case SyntaxKind.NullKeyword:\n                onLiteralValue(null);\n                break;\n            case SyntaxKind.TrueKeyword:\n                onLiteralValue(true);\n                break;\n            case SyntaxKind.FalseKeyword:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n            handleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === SyntaxKind.ColonToken) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n            }\n        }\n        else {\n            handleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n            if (_scanner.getToken() === SyntaxKind.CommaToken) {\n                if (!needsComma) {\n                    handleError(ParseErrorCode.ValueExpected, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(ParseErrorCode.CommaExpected, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n            handleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n            if (_scanner.getToken() === SyntaxKind.CommaToken) {\n                if (!needsComma) {\n                    handleError(ParseErrorCode.ValueExpected, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(ParseErrorCode.CommaExpected, [], []);\n            }\n            if (!parseValue()) {\n                handleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n            handleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case SyntaxKind.OpenBracketToken:\n                return parseArray();\n            case SyntaxKind.OpenBraceToken:\n                return parseObject();\n            case SyntaxKind.StringLiteral:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === SyntaxKind.EOF) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(ParseErrorCode.ValueExpected, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== SyntaxKind.EOF) {\n        handleError(ParseErrorCode.EndOfFileExpected, [], []);\n    }\n    return true;\n}\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return _format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map"],"sourceRoot":""}